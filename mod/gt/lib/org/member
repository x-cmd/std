

# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# Should be like this.
# gt repo member add el:admin
# gt repo member remove user-a
# gt repo member add user-b

# gt repo member +el:admin -user-a +user-b
___x_cmd_gt_org_member(){
    param:dsl       '
subcmd:
    ls              "List member"
    user            "Show org member user info"
    add             "Add member"
    del             "Remove member"
'
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        gt_log warn "subcmd not found. show help." >&2
        return 1
    fi

    "___x_cmd_gt_org_member_$PARAM_SUBCMD" "$@"
}

# shellcheck disable=SC2154
___x_cmd_gt_org_member_ls() {
    param:scope     "gitee/$O"
    param:dsl       '
options:
    --role          "role"                  <>:UserRole="all"
    #1|--org        "org space address"     <>:Address
    --page          "page"                  <>:number=1
    --per_page      "per_page"              <>:number=20
'
    param:run

    if [ -t 1 ]; then
        if ___ui_table_json NameSpace=.login Name=.name Role=.member_role Url=.html_url \
            -- "___x_cmd_gt_get_multi" "/v5/orgs/${org##*/}/members" role ; then
            return 0
        fi
    else
        ___x_cmd_gt_get_multi "/v5/orgs/${org##*/}/members" role && \
            return 0
    fi
    gt_log error "Couldn't find any data by $org"
    return 1
}

# shellcheck disable=SC2154
___x_cmd_gt_org_member_user() {
    param:scope     "gitee/$O"
    param:dsl      '
options:
    --username          "username: user space address"   <>:name
    #1|--org            "org space address"              <>:address
'
    param:run

    ___x_cmd_gt_http get "/v5/orgs/${org##*/}/memberships/${username##*/}" | \
    {
        ___x_cmd_git_json_query_rename organization=.organization.name name=.user.name name_space=.user.login role=.role html_url=.user.html_url
        if [ -n "$name" ]; then
             ___x_cmd_ui_tf true  "Success" "Organization: $organization" "Name: $name" "NameSpace: $name_space" "Role: $role" "UserUrl: $html_url"
             return 0
        else
            ___x_cmd_ui_tf false "Couldn't find any data by $org $username"
            return 1
        fi
    }
}

# shellcheck disable=SC2181
___x_cmd_gt_org_member_add() {
    param:scope     "gitee/$O"
    param:dsl       '
type:
    role = admin member
options:
    --org           "org"       <>:address
    --role          "role"      <>:role="member"
    #n              "username"
'
    param:run

    if [ $# -eq 0 ];then
        gt_log error "At least one user's spatial address is needed"
        return 1
    fi

    for username in "$@"; do
        # TODO:http handle，delete repo return data is null.Status: 204 No Content
        if ___x_cmd_gt_http put "/v5/orgs/${org##*/}/memberships/${username##*/}" "$gen_gt_json" >/dev/null; then
            gt_log info  "Add $username successfully"
        else
            gt_log error "Add $username failure"
            return 1
        fi
    done
}

# shellcheck disable=SC2181
___x_cmd_gt_org_member_del() {
    param:scope     "gitee/$O"
    param:dsl       '
options:
    --org       "org space address"         <>:address
    #n          "username"
'
    param:run

    if [ $# -eq 0 ];then
        gt_log error "At least one user's spatial address is needed"
        return 1
    fi

    local username
    for username in "$@"; do
        # TODO:http handle，delete repo return data is null.Status: 204 No Content
        if ___x_cmd_gt_http delete "/v5/orgs/${org##*/}/memberships/${username##*/}" >/dev/null; then
            gt_log info  "Remove $username successfully."
        else
            gt_log error "Remove $username failure"
            return 1
        fi
    done
}

