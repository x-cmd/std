# shellcheck shell=sh disable=SC3028

###
 # @Description: repo member TEST
###
gt repo create "$TEST_RANDOM_SPY_ONE" >/dev/null

# Section: ___x_cmd_gt_repo_member_add
test_user_repo_member_add(){
    printf "%s" "oschina-org"   | @assert stdout "x jq -r .login <<A
$(gt member add --repo "$TEST_RANDOM_SPY_ONE" --permission "pull" "oschina-org")
A"
}
# EndSection

# Section: ___x_cmd_gt_repo_member_ls
test_user_repo_member_ls(){
    local test_data
    test_data="$(gt member ls --repo "${TEST_RANDOM_SPY_ONE}")"
    test:debug "TEST_RANDOM_ONE: ${TEST_RANDOM_SPY_ONE}"
    test:debug "$test_data"

    printf "%s" "oschina-org"   | @assert stdout "x jq -r '.[] | select(.login | contains(\"oschina-org\")) | .login' <<A
$test_data
A"
    printf "%s" "true"          | @assert stdout "x jq -r '.[] | select(.login | contains(\"oschina-org\")) | .permissions.pull' <<A
$test_data
A"
    printf "%s" "false"         | @assert stdout "x jq -r '.[] | select(.login | contains(\"oschina-or\")) | .permissions.push' <<A
$test_data
A"
}
# EndSection

# Section: ___x_cmd_gt_repo_member_rm
test_user_repo_member_rm(){
    @assert true "gt member rm --repo $TEST_RANDOM_SPY_ONE oschina-org"
    printf "%s" "1"   | @assert stdout "x jq -r '. | length' <<A
$(gt member ls --repo "${TEST_RANDOM_SPY_ONE}")
A"
}
# EndSection

@assert:file:func
gt repo rm "$TEST_RANDOM_SPY_ONE" >/dev/null

