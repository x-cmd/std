# shellcheck shell=sh disable=SC3043

___x_cmd_dev_pkg_lsmod_getfp(){
    local filename=modlist
    local fp
    fp="$(pwd)/$filename"
    [ -f "$fp" ] && printf "%s" "$fp" && return

    fp="$(x wsroot)/$filename"
    [ -f "$fp" ] && printf "%s" "$fp" && return

    return 1
}

___x_cmd_dev_pkg_lsmod(){
    local fp
    fp="$(___x_cmd_dev_pkg_lsmod_getfp)" || {
        printf "Cannot find file modlist.\n" >&2
        return
    }

    awk -v mode="${1:-all}" '
($0!="")&&($0 !~ /[ ]*#/){
    mod=$1
    gsub(/^\+/, "", mod)
    if (mode == "all") print mod
    else if (mode == "core") { if ($1 ~ /^\+/) print mod }
    else if (index(mode, mod) > 0) print mod
}' <"$fp"

}

___x_cmd_dev_pkg_add(){
    local name="${1:?Provide module name}"
    # local position="${2:-"git@gitee.com/x-bash/$name.git"}"
    local position="${2:-"https://gitee.com/x-bash/$name.git"}"
    local branch="${3:-main}"
    git subtree add --prefix="mod/$name" "$position" "$branch" --squash
}

___x_cmd_dev_pkg_pull(){
    local name="${1:?Provide module name}"
    # local position="${2:-"git@gitee.com/x-bash/$name.git"}"
    local position="${2:-"https://gitee.com/x-bash/$name.git"}"
    local branch="${3:-main}"
    git subtree pull --prefix="mod/$name" "$position" "$branch" --squash
}

___x_cmd_dev_pkg_mod(){
    local IFS
    local mod
    git prune

    dev_mod_ls "$@" | \
    while read -r mod; do
        if [ -e "mod/$mod" ]; then
            ___x_cmd_dev_pkg_pull "$mod"
        else
            ___x_cmd_dev_pkg_add "$mod"
        fi
    done
}

___x_cmd_dev_pkg_lsfile(){
    cd "$(x wsroot)/mod" || return

    dev_mod_ls "$@" | (
        cd "$(x wsroot)/mod" && \
        while read -r line; do
            x dev mod lsfile "$line"
        done
    )
}

___x_cmd_dev_pkg_tgz()(
    case "${1:-all}" in
        core)       scope=core ;;
        all)        scope=all ;;
        *)          return 1 ;;
    esac

    WSROOT="$(x wsroot)"

    cd "$WSROOT/mod" &&
    mkdir -p "$WSROOT/dist" &&
        eval "tar czvf $scope.tgz $(x lsfile "$scope" | tr '\n' ' ')" &&
        mv $scope.tgz "$WSROOT/dist/$scope.tgz" &&
        ls -alh "$WSROOT/dist/$scope.tgz"
)

___x_cmd_dev_pkg_tar()(
    case "${1:-all}" in
        core)       scope=core ;;
        all)        scope=all ;;
        *)          return 1 ;;
    esac

    WSROOT="$(x wsroot)"

    cd "$WSROOT/mod" &&
    mkdir -p "$WSROOT/dist" &&
        eval "tar cvf $scope.tar $(x lsfile "$scope" | tr '\n' ' ')" &&
        mv $scope.tar "$WSROOT/dist/$scope.tar" &&
        ls -alh "$WSROOT/dist/$scope.tar"
)

___x_cmd_dev_pkg(){

    param:dsl <<A
subcommand:
    lsmod       "list module"
    mod         "add module"
    tgz         "compress modules of core/all/<special-release> into <name>.tgz"
    tar         "add modules"
    lsfile      ""
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        ___x_cmd_dev_pkg help
        return 1
    fi

    "___x_cmd_dev_pkg_${PARAM_SUBCMD}" "$@"

}
