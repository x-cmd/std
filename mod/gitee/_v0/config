# shellcheck shell=sh
# shellcheck disable=SC2039,3043

gt_config(){
    param:dsl       '
subcommands:
    which       "Show current config path"
    save        "Save the config in memory into file"
    load        "Load the config from config path"
'
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi
    
    "gt_config_${PARAM_SUBCMD}" "$@"
}

gt_config_which() {
    local O="${O:-GITEE_DEFAULT}"
    echo "$HOME/.x-cmd.com/config/x-bash/app.gitee.config/$O"
}
# TODO:config 
gt_config_save() {
    local O="${O:-GITEE_DEFAULT}"
    local path="${1:-$HOME/.x-cmd.com/config/x-bash/app.gitee.config/$O}"
    local data={}
    [ ! -e $path ] && $(mkdir -p "$path##*/")
    [ -n "$(cat $path)" ] && data="$(cat $path)"
    json_put data.token $(param_default get "gitee_$O" "token")
    if [ $? -eq 1 ]; then
        echo "ERROR:json put error"
    else
        echo "$data" >$path
        echo "Config $O saved in path: $path" >&2
    fi
}

# shellcheck disable=SC2120
gt_config_load() {
    local O="${O:-GITEE_DEFAULT}"
    local path="${1:-$HOME/.x-cmd.com/config/x-bash/app.gitee.config/$O}"
    if [ -f $path ]; then
        param_default load "gitee_$O" $path
        param_default dump "gitee_$O"
        token="$(param_default get "gitee_$O" token)"
        gt_token "$token"
        [ $? -eq 0 ] && echo "Config $O load from path: $path" >&2
    else
        echo "ERROR:There is no history config"
    fi
}
