# shellcheck shell=sh
# shellcheck disable=SC2039,3043

xrc http/v0 param/v0 json/v0 str/v0 ui

# TODO: Precompile it into one file.
_gt_xrc(){
    local i
    for i in "$@"; do
        xrc "gitee/_v0/$i"
    done
}

_gt_xrc utils config current enterprise issue org  \
        repo issue repo_member repo_page repo_pr repo_release repo_tag   \
        repo_utils token user


xrc log init gt

param_type    gitee     repo        "=~"   "[-A-Za-z0-9_/]+"      # TODO: make it fit it gitee definition
param_type    gitee     name        "=~"   "[-A-Za-z0-9_]+"
param_type    gitee     number      "=~"   "[0-9]+"
param_type    gitee     permission  =       pull   push    admin
param_type    gitee     bool        =       true   false

gt(){
    param:dsl       '
subcommand:
    repo                                    "repo command"
    issue                                   "issue"
    pr                                      "pull request"
    member                                  "repo member"
    current                                 "set current owner, repo"
    release                                 "release management"
    enterprise                              "manage enterprise"
    org                                     "manage org"
    tag                                     "repo tag"
    user                                    "user"
    config                                  "save, load, which"
    token                                   "set token"
    new                                     "new client"
'
    param:run
    if [ -z "${PARAM_SUBCMD}" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi

    case "${PARAM_SUBCMD}" in
        pr|release|member|tag)                                  "gt_repo_${PARAM_SUBCMD}"   "$@"        ;;
        *)                                                      "gt_${PARAM_SUBCMD}"  "$@"              ;;
    esac
}


############################
# Section 10: Instantiation
############################

gt_new() {
    local name="${1:?Provide object name}"
    # shellcheck disable=SC2139
    alias "$name=\"O=$name gt\""
}

gt_make() {
    local O_ORIGINAL=${1:?Provide client name by O environment}

    # if [ -n "$GITEE_DEFAULT" ] && [ "$O_ORIGINAL" = "GITEE_DEFAULT" ]; then
    #     echo "Name 'GITEE_DEFAULT' is reserved for internal use."
    #     return 1
    # fi

    local O="_x_cmd_x_bash_gitee_$O_ORIGINAL"
    http "@$O" make  'https://gitee.com/api'
    http "@$O_ORIGINAL" header type "application/json;charset=utf-8"
    O=$O_ORIGINAL gt_config_load >/dev/null

    if [ $? -eq 0 ] && [ -n "$(O="$O_ORIGINAL" gt_token)" ]; then
        O="$O_ORIGINAL" gt_current_owner
    else
        gt_log info "token is null"
    fi
    # local TOKEN=${2:-""}
    # if [ -n "$GITEE_TOKEN" ]; then
    #     printf "Init token with env GITEE_TOKEN\n" >&2
    #     O=$O_ORIGINAL gt_token.set "$GITEE_TOKEN"
    # else    #     gt_config_load default
    # fi
}
if [ -z "$DO_NOT_INIT_GITEE_DEFAULT" ]; then
    gt_make "GITEE_DEFAULT"
fi

if [ -z "$XRC_NO_ADVISE" ] && [ -n "${BASH_VERSION}${ZSH_VERSION}" ] && [ "${-#*i}" != "$-" ]; then
    xrc advise/v0
    advise gt
fi

