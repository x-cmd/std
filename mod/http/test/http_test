# shellcheck shell=sh
# shellcheck disable=SC2039

xrc http assert
    echo "开始测试"
    test_http_browse() {
        http @test browse https://gitee.com
        echo "browse 测试完成"
    }

    test_http_dict() {
        http @test make www.baidu.com
        if [ "$(http @test dict url)" = www.baidu.com ]; then
            echo "http @test make 测试完成"
        else
            echo "ERROR: http @test make"
        fi

        http @test dict url https://gitee.com
        if [ "$(http @test dict url)" != https://gitee.com ]; then
            echo "ERROR: http dict https://gitee.com"
        fi

        http @test dict url www.baidu.com
        if [ "$(http @test dict url)" = www.baidu.com ]; then
            echo "http dict 测试完成"
        else
            echo "ERROR: http dict www.baidu.com"
        fi
        
        http @test dict url www.baidu.com
        http @test cd index.html
        [ $? -eq 1 ] && echo "ERROR:http @test cd"
        assert "$(http @test dict url)" = "www.baidu.com/index.html"
        assert "$(http @test path https://gitee.com)" = "www.baidu.com/index.html/https://gitee.com"
        echo "_http_path 测试完成"
    }

    test_http_header() {
        http @test header put Content-Type application/json
        assert "$(http @test header get Content-Type)" = 'application/json'
        echo "_http_header put 测试完成"

        http @test header mput Content-Type=application/text content-encoding=gzip
        assert "$(http @test header get Content-Type)" = 'application/text'
        assert "$(http @test header get content-encoding)" = 'gzip'
        echo "_http_header mput 测试完成"
        
        # TODO:content-type subcommands异常
        http @test header type application/json
        assert "$(http @test header get Content-Type)" = 'application/json'
        echo "_http_header content-type 测试完成"
        
        http @test header put Content-Type application/json
        http @test header remove Referer
        assert "$(http @test header dump)" = 'content-encoding: gzip
Content-Type: application/json'
        echo "_http_header remove 测试完成"

        http @test header referer "1234"
        assert "$(http @test header get Referer)" = '1234'
        echo "_http_header referer 测试完成"

        http @test header agent "tzw"
        assert "$(http @test header get User-Agent)" = 'tzw'
        http @test header remove User-Agent
        echo "_http_header agent 测试完成"
    
    assert "$(http @test header dump json)" =  '{
  "content-encoding": "gzip",
  "Content-Type": "application/json",
  "Referer": "1234"
}'
        echo "_http_header dump json 测试完成"
    }

    test_http_qs() {
        http qs put key queryStringTest
        assert "$(http qs get key)" = 'queryStringTest'
        echo "_http_qs put 测试完成"

        http qs mput measurement=1111
        assert "$(http qs dump json)" = '{
  "key": "queryStringTest",
  "measurement": "1111"
}'
        echo "_http_qs mput 测试完成"

        http qs remove measurement
        assert "$(http qs dump json)" = '{
  "key": "queryStringTest"
}'
        echo "_http_qs remove 测试完成"
    }

        test_http_body() {
        http body put name 'zs'
        assert "$(http body get name)" = 'zs'
        echo "http_body put 测试完成"

        http body mput name='lisi'
        assert "$(http body get name)" = 'lisi'
        echo "http_body mput 测试完成"

        assert "$(http body dump json)" = '{
  "name": "lisi"
}'
        echo "http_body dump json 测试完成"

        http body remove name
        assert "$(http body dump json)" = '{
}'
        echo "http_body remove 测试完成"
    }

        test_http_request(){
        assert "$(http get "https://httpbin.org/get")" \=str
        echo "_http_get 测试完成"
        assert "$(http post json "http://httpbin.org/post" name=zs)" \=str
        echo "_http_post 测试完成"
        }
    test_http_browse
    test_http_dict
    test_http_header
    test_http_qs
    test_http_body
    test_http_request
    echo "测试完成"
