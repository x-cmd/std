# shellcheck shell=bash

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao

dict_make(){
    local O="${1:?Please provide object name}"
    eval "declare -A $O=()"
}

# O=b dload "$( a.dump | dgrep "abc" | dgerp "abc" )"

dict_dump(){
    local O="${O:?Please provide object name}"
    local key
    local val
    local i=0
    for key in eval "\${\!$O[@]}"; do
        val="$(eval "\${\$O[\$key]}")"
        printf "%s${DICT_SEP}%s${DICT_SEP}" "$key" "$val"
        i=$((i+1))
    done
    printf "%s" "$i"
}

# bash 4 means we 'read -d' is available
dict_load(){
    local O="${O:?Please provide object name}"
    dict_make "$O"

    local key
    local val

    while :; do
        read -d "${DICT_SEP}" -r key
        read -d "${DICT_SEP}" -r val
        eval "$O[\"\$key\"]=\"\$val\""
    done
}

dict_size(){
    printf "%s" "$(eval "$O[#@]")"
}

dict_get(){
    : "${O:?Please provide object name}"
    eval printf "%s" "\"\${${O}[$1]}\""
}

dict_put(){
    : "${O:?Please provide object name}"
    eval "${O}[$1]}"="$2"
}

# Not universal enough
dict_scope(){
    : "${O:?Please provide object name}"
    local IFS="${DICT_KEYS_SEP}"
    local s
    s=$(printf "%s${DICT_KEYS_SEP}" "$*")

    local key
    local i=0
    for key in eval "\${\!$O[@]}"; do
        if [[ "$key" == "$s"* ]]; then
            val="$(eval "\${\$O[\$key]}")"
            printf "%s${DICT_SEP}%s${DICT_SEP}" "$key" "$val"
            i=$((i+1))
        fi
    done
    printf "%s" "$i"
}

dict_drop(){
    : "${O:?Please provide object name}"
    local IFS="${DICT_KEYS_SEP}"
    local s
    s=$(printf "%s${DICT_KEYS_SEP}" "$*")

    for key in eval "\${\!$O[@]}"; do
        if [[ "$key" == "$s" ]]; then
            eval "unset \$O[\$key]"
            break
        fi
    done
}

dict_dropr(){
    : "${O:?Please provide object name}"
    local IFS="${DICT_KEYS_SEP}"
    local s
    s=$(printf "%s${DICT_KEYS_SEP}" "$*")

    for key in eval "\${\!$O[@]}"; do
        if [[ "$key" =~ $s ]]; then
            eval "unset \$O[\$key]"
            break
        fi
    done
}


dict_grep(){
    : "${O:?Please provide object name}"
    local IFS="${DICT_KEYS_SEP}"
    local s
    s=$(printf "%s${DICT_KEYS_SEP}" "$*")

    for key in eval "\${\!$O[@]}"; do
        if [[ ! "$key" == "$s" ]]; then
            eval "unset \$O[\$key]"
            break
        fi
    done
}

dict_grepr(){
    : "${O:?Please provide object name}"
    local IFS="${DICT_KEYS_SEP}"
    local s
    s=$(printf "%s${DICT_KEYS_SEP}" "$*")

    for key in eval "\${\!$O[@]}"; do
        if [[ ! "$key" =~ $s ]]; then
            eval "unset \$O[\$key]"
            break
        fi
    done
}

dict_iter(){
    local fun="$*" # "$1 \"\$key\" \"\$val\""
    if [ "$#" -eq 1 ] && command -v "$1"; then
        fun="$1 \"\$key\" \"\$val\""
    fi

    : "${O:?Please provide object name}"

    local key
    local val

    for key in eval "\${\!$O[@]}"; do
        val="$(eval "\${\$O[\$key]}")"
        eval "$fun"
    done
}
