
# Section: condition
___x_cmd_case_(){
    local val="${1:?Provide value}"; shift
    local arg
    for arg in "$@"; do
        ___X_CMD_CASE_="${arg#$val:}"
        [ "$___X_CMD_CASE_" = "${arg}" ] || return 0

        ___X_CMD_CASE_="${arg#$val=}"
        [ "$___X_CMD_CASE_" = "$arg" ] || { ___X_CMD_CASE_="$(eval "$___X_CMD_CASE_")"; return 0; }
    done
    ___X_CMD_CASE_=
    return 1
}

___x_cmd_case(){
    ___x_cmd_case_ "$@" && printf "%s\n" "$___X_CMD_CASE_"
}

# x case linux "linux=f" win="> handle " darwin="> do something"
# x cmd_result=case linux linux:Linux win:Windows darwin:Macos
___x_cmd_eqcase(){
    local var="${1%=case}"
    local val="${2:?Provide value}"; shift 2
    local arg
    for arg in "$@"; do
        arg="${arg#$val=}"
        if [ "$arg" != "$val" ]; then
            eval "$var=\"\$arg\""
            return 0
        fi
    done
    return 1
}

# EndSection

# Section: ifelse

# x ifelse '[ $a = a ]' =1 =2
# x ifelse '[ $a = 1 ]' cmd_result=1 cmd_result=2

___x_cmd_ifelse_(){
    local condition="${1:?Provide function}";
    if eval "$condition"; then
        case "$2" in
            "="*)       ___X_CMD_IFELSE_="$(eval "${2#=}")" ;;
            *)          ___X_CMD_IFELSE_="$2" ;;
        esac
    else
        case "$3" in
            "="*)       ___X_CMD_IFELSE_="$(eval "${3#=}")" ;;
            *)          ___X_CMD_IFELSE_="$3" ;;
        esac
    fi
}

___x_cmd_ifelse(){
    local ___X_CMD_IFELSE_
    ___x_cmd_ifelse_ "$@" && printf "%s\n" "$___X_CMD_IFELSE_"
}

# x cmd_result=if '[ $a = 1 ]' 1 2
___x_cmd_eqifelse(){
    local var="${1%=if}"
    if ___x_cmd_eval "$2"; then     eval "$var=\"\$3\""
    else                            eval "$var=\"\$4\""
    fi
}

# EndSection

# Section: varjoin

# x a=join' ' a b c d e
___x_cmd___varjoin(){
    local varname="${1%%=*}"; local IFS="${1#*=join}"; shift
    local s="$*"
    eval "$varname=\"\$s\""
}


# EndSection
