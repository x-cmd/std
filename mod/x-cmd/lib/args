
___x_cmd_arg_line(){

    local every="$1"; shift
    local IFS
    IFS="$(printf "\001")"
    local NW
    NW="$(printf "\002")"

    {
        printf "%s" "$*" | tr "\n" "$NW"
        printf "\n"
        cat
    } | awk -v every="$every" '

NR==1{
    argl = split($0, argv, "\001")

    for (i=1; i<=argl; ++i) {
        gsub("\002", "\n", argv[i])
        gsub(/\\/, "\\\\\\", argv[i])
        gsub("\"", "\\\"", argv[i])
        # TODO: Awk will have a warning about "$" and the solution: throw it to "2>/dev/null"
        gsub(/\$/, "\\\$", argv[i])
        argv[i] = "\\\"" argv[i] "\\\""
        if (argstr == "") argstr = argv[i]
        else argstr = argstr " " argv[i]
    }
    print argstr
}

function printcode( len ){
    count = 0
    code=""
    for (j=1; j<=len; ++j) {
        e = result[j]
        gsub("\"", "\\\"", e)
        code = code " " "\"" e "\""
    }
    print code
}

NR>1{
    arrl = split($0, arr, /[ \t]+/)
    for (i=1; i<=arrl; ++i) {
        count ++
        result[ count ] = arr[i]
        if (count == every) {
            printcode( every )
        }
    }
}

END {
    if (count > 0) printcode( count )
}
' 2>/dev/null

}

___x_cmd_args_let(){
    code="$*"
}

___x_cmd_args_funeach(){
    if [ -z "$APPEND_ARG" ]; then
        eval "$code"
    else
        eval "$code" \"\$@\"
    fi
}

___x_cmd_args(){
    local n="$1"; [ $# -gt 0 ] && shift
    local IFS=" "

    local APPEND_ARG=1
    if [ "$1" = - ]; then
        APPEND_ARG=
        shift
    fi

    local code=""
    ___x_cmd_arg_line "$n" "$@" | while read -r line; do
        if [ -z "$code" ]; then
            # code="$line"
            eval ___x_cmd_args_let "$line"
            continue
        fi
        eval ___x_cmd_args_funeach "$line"
    done
}

___x_cmd_margs(){
    local n="$1"; [ $# -gt 0 ] && shift
    local IFS=" "

    local APPEND_ARG=1
    if [ "$1" = - ]; then
        APPEND_ARG=
        shift
    fi

    local code=""
    eval "$(
    ___x_cmd_arg_line "$n" "$@" | while read -r line; do
        if [ -z "$code" ]; then
            code="$line"
            printf "%s %s\n" ___x_cmd_args_let "$line"
            continue
        fi
        printf "%s %s\n" ___x_cmd_args_funeach "$line"
    done
    )"

}

