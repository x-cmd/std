# shellcheck shell=bash disable=SC3043

CONATINER_ARM_LIST=(
    debian:10-slim
    debian centos ubuntu fedora 
    opensuse/tumbleweed agners/archlinuxarm 
    gentoo/stage3 alpine 
)

CONATINER_AMD_LIST=( 
    debian:10-slim
    debian centos ubuntu fedora 
    opensuse/tumbleweed archlinux 
    gentoo/stage3 alpine 
)

debug() {
    echo -e "\033[1;34mDEBUG: \033[1;30m" "$@" "\033[0m" > /dev/stderr
}

panic() {
    echo -e "\033[0;31mERROR: \033[1;30m" "$@" "\033[0m" > /dev/stderr
}

test_x_py(){
    DOCKER_PLATFORM=linux/arm64

    for container in "${CONATINER_ARM_LIST[@]}"; do
        debug "container: ${container}"
        debug docker run -it --platform ${DOCKER_PLATFORM} -v  "$(pwd)":/pd/ "${container}" sh /pd/test/test-docker.sh
        docker run -it --platform ${DOCKER_PLATFORM} -v  "$(pwd)":/pd/ "${container}" sh /pd/test/test-docker.sh
        if [ $? -ne 0 ]; then
            panic "Failed to run test in ${container}"
        fi
    done

    DOCKER_PLATFORM=linux/amd64

    for container in "${CONATINER_AMD_LIST[@]}"; do
        debug "container: ${container}"
        debug docker run -it --platform ${DOCKER_PLATFORM} -v  "$(pwd)":/pd/ "${container}" sh /pd/test/test-docker.sh
        docker run -it --platform ${DOCKER_PLATFORM} -v  "$(pwd)":/pd/ "${container}" sh /pd/test/test-docker.sh
        if [ $? -ne 0 ]; then
            panic "Failed to run test in ${container}"
        fi
    done
}

test_x_py