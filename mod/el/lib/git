
# Section: git facility
alias gis="git status"
alias giss="git status -s"
alias gib="git branch"

gia(){
    if [ $# -eq 0 ]; then
        git add .
    else
        git add "$@"
    fi
}

gisy(){
    giam "$@"
    git status -s
    printf "\nEnter to continue. Other to abort: > " >&2
    local key
    read -r key
    if [ "$key" != "" ]; then
        printf "%s" "Abort. Because read $key" >&2
        return 1
    fi

    x push || giP
}

giam(){
    local msg="${1:-...}"
    shift
    if [ $# -eq 0 ]; then
        git add .
    else
        git add "$@"
    fi
    git commit -m "$msg"
}

gicm(){
    git commit -m "${1:-...}"
}

gip(){
    if [ -f "$(x wsroot)/.x-cmd/pull" ]; then
        x pull
    else
        git pull origin "$(git rev-parse --abbrev-ref HEAD)"
    fi
}

# shellcheck disable=SC2120
giP(){
    if [ -f "$(x wsroot)/.x-cmd/push" ]; then
        x push
    else
        git push origin "${1:-"$(git rev-parse --abbrev-ref HEAD)"}"
    fi
}

# TODO: x gh clone
ghclone(){
    git clone "git@github.com:${1:?Provide url}.git"
}

# git clone gh://x-bash/x-cmd
# TODO: x gt clone
gtclone(){
    git clone "git@gitee.com:${1:?Provide url}.git"
}

gtrm(){
    if [ -z "$FORCE" ]; then
        git filter-branch --index-filter "git rm -r --cached --ignore-unmatch ${1:-Provide file path}" -- --all
    else
        git filter-branch -f --index-filter "git rm -r --cached --ignore-unmatch ${1:-Provide file path}" -- --all
    fi

}

# EndSection


#
