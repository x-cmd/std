# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section: Kotlin ls_remote

___x_cmd_env_kotlin_ls_remote(){
	local cache_path="$___X_CMD_ENV_PATH/kotlin/cache/version_list"
  	local cache_expiration="${2:-1}"
	___x_cmd_httpget "https://api.sdkman.io/2/candidates/kotlin/LINUX64/versions/all" "$cache_path" "$cache_expiration" && \
	awk 'BEGIN{ RS=","} { print $0 }' < "$cache_path"
}

# EndSection

# Section: download

___x_cmd_env_kotlin_download_archive(){
	local version="${1:? Provide a version}"
	if ___x_cmd_env_util_is_archive_cached kotlin "$version" 2>/dev/null; then
		env_log info  "Archive existed: $version"
		return 0
	fi
	local archive_path="$___X_CMD_ENV_PATH/kotlin/archive/kotlin-${version}.zip"
	mkdir -p "$(dirname "${archive_path}")"
	download_url="https://github.com/JetBrains/kotlin/releases/download/v${version}/kotlin-compiler-${version}.zip"
	env_log info "Downloading kotlin ${version}"
	if ! curl --progress-bar --location --retry-max-time 10 --retry 0 "${download_url}" --output "${archive_path}"; then
		env_log info "Download failure"
		return 1
	fi
	env_log info "Download completed $download_url"
}

# EndSection

# Section: unpack

___x_cmd_env_kotlin_unpack(){
	local version="${1:?Provide a version}"
	local archive_path="$___X_CMD_ENV_PATH/kotlin/archive/kotlin-${version}.zip"
	env_log info "unpack beginning kotlin-${version}"
	x uz "$archive_path" "$(dirname "${archive_path}")" || return 1
	local archive_unpack_files
	local versions_path="$___X_CMD_ENV_PATH/kotlin/versions"
	archive_unpack_files="$(dirname "${archive_path}")/kotlinc"
	mkdir -p "$versions_path/${version}"
    mv -f "$archive_unpack_files"/* "$___X_CMD_ENV_PATH/kotlin/versions/${version}"
	rm -rf "$archive_unpack_files"
}

# EndSection

# Section: ui_catsel

#TODO: Should be optimized
___x_cmd_env_kotlin_ui_catsel(){
    case "$#" in
        0)	___x_cmd_env_kotlin_ls_remote | awk '{ split($0,arr,"."); vmap[arr[1]]=1 } END{ for(key in vmap){print key} }' ;;
        1)	___x_cmd_env_kotlin_ls_remote | awk '{ split($0,arr,"."); vmap[arr[2]]=1 } END{ for(key in vmap){print key} }' ;;
		2)	___x_cmd_env_kotlin_ls_remote | grep "$1" | grep "$2" | awk -v a="$1" -v b="$2" '{ split($0,arr,a"."b"."); if(arr[1]=="" && arr[2]!=""){ vmap[$0]=1 } } END{ for(key in vmap){ print key } }';;
    esac
}

# EndSection

___x_cmd_env_kotlin_ws(){
    :
}