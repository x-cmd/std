# Author:       Li Junhao           l@x-cmd.com     # xrc
# shellcheck    shell=sh            disable=SC3043,SC2164,SC3000-SC4000
# License:      GPLv3

# activate: x env var backup   PATH JAVA_HOME AAA
# deactivate: x env var recoverall

___x_cmd_env_var(){
    local option="$1"
    case "$option" in
        backup|get_backup|\
        clear|ls|\
        recover|recoverall)  shift && "___x_cmd_env_var_${option}" "$@" ;;
        # recover|recoverall)  shift && eval "\$(___x_cmd_env_var_${1} \"\$@\")" ;;
    esac
}

# Section: ls and backup and get

___x_cmd_env_var_ls(){
    printf "%s" "${___X_CMD_ENV_VAR_LIST#.}"
}

___x_cmd_env_var_backup(){
    while [ $# -gt 0 ]; do
        ___x_cmd_env_var_backup___one "$1"
        shift
    done
}

___x_cmd_env_var_backup___one(){
    local varname_bak="___X_CMD_ENV_VAR___BACKUP_${1:?Provide varname}"

    if ___x_cmd_env_var_isunset "$varname_bak"; then
        if ___x_cmd_env_var_isunset "$1"; then
            ___X_CMD_ENV_VAR_LIST="${___X_CMD_ENV_VAR_LIST}
$1=
"
        else
            ___X_CMD_ENV_VAR_LIST="${___X_CMD_ENV_VAR_LIST}
$1
"
        fi
        eval "$varname_bak=\"\$${1}\""
    fi
}

___x_cmd_env_var_get_backup_(){
    eval "___X_CMD_ENV_VAR_GET_BACKUP_=\"\$___X_CMD_ENV_VAR___BACKUP_$1\""
}

___x_cmd_env_var_get_backup(){
    local ___X_CMD_ENV_VAR_GET_BACKUP_
    ___x_cmd_env_var_get_backup_ "$1"
    printf "%s\n" "$___X_CMD_ENV_VAR_GET_BACKUP_"
}

# EndSection

# Section: recover

___x_cmd_env_var_recover(){
    if [ "$#" -eq 0 ]; then
        ___x_cmd_env_var_recover___all
    else
        ___x_cmd_env_var_recover___multiple "$@"
    fi
}

___x_cmd_env_var_recover___all(){
    local var
    ___x_cmd_env_var_ls | while read -r var; do
        case "$var" in
            "")     ;;
            *=)     eval unset "${var%=*}" ;;
            *)      eval "${var}=\"\$___X_CMD_ENV_VAR___BACKUP_${var}\"" ;;
        esac
    done
    ___X_CMD_ENV_VAR_LIST=
}

___x_cmd_env_var_recover___multiple(){
    while [ $# -gt 0 ]; do
        ___x_cmd_env_var_recover___one "$1"
        shift
    done
}

___x_cmd_env_var_recover___one(){
    local varname_bak="___X_CMD_ENV_VAR___BACKUP_${1:?Provide varname}"
    if ___x_cmd_env_var_recover___rm "${1}"; then
        eval "$1=\"\$${varname_bak}\""
    elif ___x_cmd_env_var_recover___rm "$1="; then
        eval "unset $1"
    else
        env:error "Variable Not trackcing"
        return 1
    fi
    eval unset "$varname_bak"
}

___x_cmd_env_var_recover___rm(){
    local tmp="${___X_CMD_ENV_VAR_LIST#*
"${1:?Provide varname}"
}"
    if [ "$tmp" != "$___X_CMD_ENV_VAR_LIST" ]; then
        ___X_CMD_ENV_VAR_LIST="${___X_CMD_ENV_VAR_LIST%%
"$1"
*}
${tmp}"
        return 0
    fi
    return 1
}
# EndSection

# Section: utils

___x_cmd_env_var_isset(){
    eval "[ \"\${${1:?Provide variable name}+1}\" = 1 ]"
}

___x_cmd_env_var_isunset(){
    eval "[ \"\${${1:?Provide variable name}+1}\" != 1 ]"
}

# EndSection
