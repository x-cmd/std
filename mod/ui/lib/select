# shellcheck shell=sh disable=SC3043

xrc ui/lib/getchar
xrc ui/lib/region
xrc ui/lib/varctl

# Section: select app
___x_cmd_ui_select_draw(){
    local select="$1"
    local text="$2"
    local prompt="$3"; shift 3
    {
        local l=0
        local arg
        printf "%s\n" "$prompt"
        for arg in "$@"; do
            arg="$(printf "$arg\n" | command awk '{
                gsub(/\033\[([0-9]+;)*[0-9]+m/, "", $0)
                print $0
            }')"
            l=$((l+1))
            if [ "$l" -eq "$select" ]; then
                printf "  $l. \033[7m%s\033[0m\n" "$arg"
            else
                printf "  $l. \033[32m%s\033[0m\n" "$arg"
            fi
        done
        printf "Input number: %s\n" "$text"
        printf "\n\033[2m%s\033[0m" "Use arrow up/down to select. Press ENTER to confirm."
    } | ___x_cmd_ui_region_send
}

___x_cmd_ui_select_mainloop(){
    local choice=1          # default
    local choice_text="1"
    local question="$1"; shift

    ___x_cmd_ui_select_draw "$choice" "$choice_text" "$question" "$@"
    while ___x_cmd_ui_getchar; do
        case "${___X_CMD_UI_GETCHAR_CHAR}" in
            UP)                     ___x_cmd_ui_varctl_numtext choice choice_text 1 "$#" dec ;;
            DN)                     ___x_cmd_ui_varctl_numtext choice choice_text 1 "$#" inc ;;
            ENTER)                  break ;;
            DELETE)                 ___x_cmd_ui_varctl_numtext choice choice_text 1 "$#" del ;;
            0|1|2|3|4|5|6|7|8|9)    ___x_cmd_ui_varctl_numtext choice choice_text 1 "$#" "${___X_CMD_UI_GETCHAR_CHAR}" ;;
        esac
        ___x_cmd_ui_select_draw "$choice" "$choice_text" "$question" "$@"
    done

    # Notice: Meaningless but important.
    ___x_cmd_ui_select_draw "$choice" "$choice_text" "$question" "$@"

    ___x_cmd_ui_region_send_env_kv ___X_CMD_UI_SELECT_RET "$choice"
}

___x_cmd_ui_select(){
    local VAR="$1";  [ $# -gt 0 ] && shift
    local VAR1
    local VAR2
    case "$VAR" in
        ,*)
            VAR1=
            VAR2="${VAR#,}"
            ;;
        *,*)
            VAR1="${VAR%,*}"
            VAR2="${VAR#*,}"
            ;;
        *)
            VAR1="$VAR"
            VAR2=
    esac
    ___x_cmd_ui_region_run ___x_cmd_ui_select_mainloop "$@"
    shift
    [ -n "$VAR1" ] && eval "$VAR1"="$___X_CMD_UI_SELECT_RET"
    [ -n "$VAR2" ] && eval "$VAR2"="\$$___X_CMD_UI_SELECT_RET"

}

# EndSection

# ui choice "text"\
# ui sel "text"\
# ___x_cmd_ui_select idx,text\
#     "Please select the app you want to install:" \
#     "Install docker" \
#     "Install k8s" \
#     "Install minikube" \
#     "Install jvm" \
#     "Install nvm"

# ui select ,text "Please select the app you want to install:"  "Install docker"  "Install k8s"


# Section: select_degrade version
___x_cmd_ui_select_degrade(){
    local question="${1:?Question}"
    local answer="${2:?Answer variable}"
    local op="${3:?Must be}"
    if [ "$op" != "=" ]; then
        printf "%s" "#3 be = but get $op" >&2
        return 1
    fi

    shift 3

    printf "\033[31;1m? %s\n" "$question." >/dev/stderr

    local number

    local can
    local i=1
    for can in "$@"; do
        printf "  \033[33;1m%s:  \033[32;1m%s\n" "$i" "$can" >/dev/stderr
        i=$((i+1))
    done
    printf "\n"

    while true; do
        # printf "\033[31;1m? %s >\033[34;1m" "Please input number 1 to $#. Or 0 to quit"
        # printf "\033[31;1m%s\033[30;2m%s\r\033[31;0m>" "> " "Please Input number from 1 to $#. Press 0 to quit"
        printf "\033[31;1m%s\033[30;2m%s\r\033[0m\033[34;1m > " ">" "_    Please input number 1 to $#. Or 0 to quit." >/dev/stderr
        if ! read -r number >/dev/stderr; then
            printf "%s\n" "Receive exit signal." >&2
            break
        fi

        if [ "$number" -eq 0 ]; then
            printf "\033[0m"
            return 1
        fi 2>/dev/null

        if [ "$number" -ge 1 ] && [ "$number" -le $# ]; then
            eval "$answer=\"\$$number\""
            printf "\033[0m"
            return 0
        fi 2>/dev/null
    done
}

# EndSection

