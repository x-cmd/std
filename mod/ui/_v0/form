# shellcheck shell=sh disable=SC3043

# Section: form app

xrc assert/latest
xrc ui/_v0/region


# dict

# dict @x_ui_prompt_form put selected 3
# dict @x_ui_prompt_form put result 1 

___ui_prompt_ui_inc(){
    local cur="${1:?cur}"
    local max="${2:?max}"
    
    if [ "$cur" -lt 1 ] && [ "$cur" -gt "$max" ]; then
        printf "%s" 1
        return
    fi

    cur=$((cur + 1))
    if [ $cur -gt "$max" ]; then
        cur=1
    fi
    printf "%s" "$cur"
}

___ui_prompt_ui_dec(){
    local cur="${1:?cur}"
    local max="${2:?max}"

    if [ "$cur" -lt 1 ] && [ "$cur" -gt "$max" ]; then
        printf "%s" "$max"
        return
    fi

    cur=$((cur - 1))
    if [ $cur -le 0 ]; then
        cur=$max
    fi
    printf "%s" "$cur"
}

___x_cmd_ui_prompt_form_draw(){
    local i
    local j
    local question
    local answer

    {
        case "$q_focus-$(dict @x_ui_prompt_form get "$q_current" "4")" in
            0-=)
                printf "%s\n\n" "Press <ENTER> to JUMP into selection. <Ctrl-D> to Exit. Arrow <UP> and <DOWN> to navigate. "
            ;;
        
            1-=)
                printf "%s\n\n" "Press <ENTER> to EXIT selection. <Ctrl-D> to Exit. Arrow <UP> and <DOWN> to navigate. "
            ;;

            0-=~)
                printf "%s\n\n" "Press <ENTER> to edit. <Ctrl-D> to Exit. Arrow <UP> and <DOWN> to navigate. "
            ;;

            1-=~)
                printf "%s\n\n" "Press <ENTER> to finish edit. <Ctrl-D> to Exit. Arrow <UP> and <DOWN> to navigate. "
            ;;
        esac

        local question_type
        for i in $(seq "$q_count"); do
            question_type="$(dict @x_ui_prompt_form get "$i" "4")"
            question="$(dict @x_ui_prompt_form get "$i" "1")"
            answer="$(dict @x_ui_prompt_form get "$i" "answer")"

        
            # if [ -z "$answer" ] && [ "$question_type" != = ]; then
            #     answer="$(printf "\033[2m%s\033[0m" "          ")"
            # fi

            if [ "$q_current" != "$i" ]; then
                # Not current
                if [ "$q_focus" -eq 0 ]; then
                    printf "\033[36m%-16s %s\033[0m\n" "$question:" "$answer"
                else
                    printf "\033[36;2m%-16s %s\033[0m\n" "$question:" "$answer"
                fi
                continue
            fi
            
            if [ "$q_focus" -eq 0 ]; then
                printf "\033[36;7;1m%-16s %s\033[0m\n" "$question:" "$answer"

                if [ "$question_type" = = ]; then
                    for j in $(seq 5 "$(dict @x_ui_prompt_form get "$i" argc)"); do
                        if [ "$((j-4))" = "$answer" ]; then
                            printf "  \033[32;5;4m%s. %s\033[0m\n" $((j-4)) "$(dict @x_ui_prompt_form get "$i" "$j")"
                        else
                            printf "  \033[32;2m%s. %s\033[0m\n" $((j-4)) "$(dict @x_ui_prompt_form get "$i" "$j")"
                        fi
                    done
                fi
            else
                if [ "$question_type" = = ]; then
                    printf "\033[36;1m%-16s %s\033[0m\n" "$question:" "$(printf "%s\033[7m%s\033[0m" "$answer" " ")"

                    for j in $(seq 5 "$(dict @x_ui_prompt_form get "$i" "argc")"); do
                        if [ "$((j-4))" = "$answer" ]; then
                            printf "  \033[32;7;4m%s. %s\033[0m\n" $((j-4)) "$(dict @x_ui_prompt_form get "$i" "$j")"
                        else
                            printf "  \033[32m%s. %s\033[0m\n" $((j-4)) "$(dict @x_ui_prompt_form get "$i" "$j")"
                        fi
                    done
                else
                    printf "\033[36;1m%-16s %s\033[0m\n" "$question:" "$answer"
                fi
            fi
        done 
    } | ___x_cmd_ui_region_send
}

___x_cmd_ui_prompt_form_main(){

    stty -echo

    local q_count=1
    local arg_count=0
    local arg

    xrc dict

    for arg in "$@"; do
        case "$arg" in
            --) 
                dict @x_ui_prompt_form put "$q_count" "argc" "$arg_count"
                q_count=$((q_count + 1))
                arg_count=0    
                ;;
            *)
                arg_count=$((arg_count + 1))
                dict @x_ui_prompt_form put "$q_count" "$arg_count" "$arg"
        esac
    done

    local i
    local j
    for i in $(seq $q_count); do
        local default
        default="$( dict @x_ui_prompt_form get "$i" "3" )"
        if [ "$( dict @x_ui_prompt_form get "$i" "4" )" = = ]; then
            local answer=1
            for j in $(seq 5 "$(dict @x_ui_prompt_form get "$i" "argc")"); do
                if [ "$default" = "$( dict @x_ui_prompt_form get "$i" "$j" )" ]; then
                    answer=$(( j - 4 ))
                    break
                fi
            done
            dict @x_ui_prompt_form put "$i" "answer" "$answer"
        else
            dict @x_ui_prompt_form put "$i" "answer" "$default"
        fi
    done


    local question="${1:?Question}"
    shift 1

    exec 3>&1

    local q_current=1
    local q_focus=0

    {
        ___x_cmd_ui_prompt_form_draw
        while region_getchar; do
            case "$___X_CMD_UI_GETCHAR_CHAR" in
                UP|DN)
                    if [ $q_focus -eq 0 ]; then
                        if [ "$___X_CMD_UI_GETCHAR_CHAR" = UP ]; then
                            q_current=$(___ui_prompt_ui_dec "$q_current" $q_count)
                        else
                            q_current=$(___ui_prompt_ui_inc "$q_current" $q_count)
                        fi
                    else
                        case "$(dict @x_ui_prompt_form get "$q_current" "4")" in
                            =)   
                                { 
                                    local tmp_answer
                                    tmp_answer=$(dict @x_ui_prompt_form get "$q_current" "answer")
                                    if [ -z "$tmp_answer" ]; then
                                        # default answer
                                        tmp_answer="$(dict @x_ui_prompt_form get "$q_current" "3")"
                                    fi
                                    tmp_answer_max=$(dict @x_ui_prompt_form get "$q_current" "argc")
                                    tmp_answer_max=$((tmp_answer_max - 4))
                                    if [ "$___X_CMD_UI_GETCHAR_CHAR" = UP ]; then
                                        tmp_answer=$(___ui_prompt_ui_dec "${tmp_answer}" $tmp_answer_max)
                                    else
                                        tmp_answer=$(___ui_prompt_ui_inc "${tmp_answer}" $tmp_answer_max)
                                    fi
                                    dict @x_ui_prompt_form put "$q_current" answer "$tmp_answer"
                                } 2>/dev/null
                                # TODO: Find out which command output to stderr
                        esac
                    fi
                    ;;
                ENTER)
                    if [ "$q_focus" -eq 0 ]; then
                        q_focus=1
                    else
                        q_focus=0
                    fi ;;
                DELETE) 
                    local tmp_answer
                    tmp_answer=$(dict @x_ui_prompt_form get "$q_current" "answer")
                    tmp_answer="${tmp_answer%?}"
                    dict @x_ui_prompt_form put "$q_current" "answer" "$tmp_answer"
                    ;;
                *)
                    # TODO: using a significant OK to exit.
                    if [ "$___X_CMD_UI_GETCHAR_CHAR" = "$(printf "\004")" ]; then
                        break
                    fi

                    if [ "$q_focus" -ne 0 ]; then
                        local tmp_answer
                        tmp_answer=$(dict @x_ui_prompt_form get "$q_current" "answer")
                        if [ "$(dict @x_ui_prompt_form get "$q_current" "4")" = = ]; then
                            case "$___X_CMD_UI_GETCHAR_TYPE" in
                                ascii-digit)   
                                    tmp_answer="${tmp_answer}${___X_CMD_UI_GETCHAR_CHAR}" ;;
                            esac
                        else
                            case "$___X_CMD_UI_GETCHAR_TYPE" in
                                ascii-space|ascii-digit|ascii-letter-*|ascii-symbol-*|UTF8*)   
                                    tmp_answer="${tmp_answer}${___X_CMD_UI_GETCHAR_CHAR}" ;;
                            esac
                        fi
                        dict @x_ui_prompt_form put "$q_current" "answer" "$tmp_answer"
                    fi
            esac

            ___x_cmd_ui_prompt_form_draw
        done
        
        # Notice: Meaningless but important.
        ___x_cmd_ui_prompt_form_draw

        if [ "$OUTPUT" != "" ]; then
#             local ___X_CMD_UI_REGION_SEPERATOR="
# "
            for i in $(seq "$q_count"); do
                printf "%s%s%s%s" \
                    "$(dict @x_ui_prompt_form get "$i" "2")" "$___X_CMD_UI_REGION_SEPERATOR" \
                    "$(dict @x_ui_prompt_form get "$i" "answer")" "$___X_CMD_UI_REGION_SEPERATOR" >&3
            done
        fi

    } | ___x_cmd_ui_region_update

    exec 3>&-

    # tput cvvis
    stty echo
    printf "\033[34h\033[?25h" >&2
}

___x_cmd_ui_prompt_form(){
    local ___result="$(OUTPUT=1 ___x_cmd_ui_prompt_form_main "$@")"

    while :; do
        local head="${___result%%${___X_CMD_UI_REGION_SEPERATOR}*}"
        [ "$head" = "$___result" ] && break
        ___result="${___result#*${___X_CMD_UI_REGION_SEPERATOR}}"

        local value="${___result%%${___X_CMD_UI_REGION_SEPERATOR}*}"
        [ "$value" = "$___result" ] && break

        eval "$head=\"\$value\""
        ___result="${___result#*${___X_CMD_UI_REGION_SEPERATOR}}"
    done
}

# ___x_cmd_ui_prompt_form \
#     "Accesstype" atype public = private public "--" \
#     "RepoName" repo "" "=~" "abc1[0-9]+"   "--" \
#     "Username" user "" "=~" "12[0-9]+"

# EndSection