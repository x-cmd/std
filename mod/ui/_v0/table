
# shellcheck shell=sh disable=SC3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

# Section: main

___ui_table(){
    local O="${O:-___X_CMD_UI_TABLE_DEFAULT}"
    case "${1}" in   
        json)       shift; ___ui_table_json      "$@"       ;;
        -)          ___ui_table_clear                       ;;
        +)          shift; ___ui_table_read      "$@"       ;;
        jsonfmt)    shift; ___ui_table_json_to_table "$@"   ;;
        func)       shift; ___ui_table_out_func  "$@"       ;;
        *)          [ $# -gt 0 ] && shift; ___ui_table_out3      "$@"       ;;
    esac
}


___X_CMD_UI_TABLE_DEFAULT=0
___ui_table_read(){
    
    local O="${O:-___X_CMD_UI_TABLE_DEFAULT}"

    eval "___X_CMD_UI_TABLE_DEFAULT_ROW_$O=\$((___X_CMD_UI_TABLE_DEFAULT_ROW_$O+1))"
    local ttt
    eval "ttt=\"\${___X_CMD_UI_TABLE_DEFAULT_COL_$O}\""
    if [ "${ttt:-0}" -lt $# ]; then
        eval "___X_CMD_UI_TABLE_DEFAULT_COL_$O=\$#"
    fi

    local s
    local IFS
    IFS=$(printf "\003")
    local NR
    NR=$(printf "\002")
    s="$(eval echo \"\$"{$O}$NR$*"\")"
    # s="$(eval echo \"\$"{$O}$NR"\")"
    # local i
    # for i in "$@"; do
    #     s="$s$IFS$i$IFS${#i}"
    # done
    eval "$O=\"\$s\""
}

___ui_table_out(){
    local O="${O:-___X_CMD_UI_TABLE_DEFAULT}"

    local out="${1:-1}"

    if [ "${-#*i}" != "$-" ]; then
        eval "printf \"%s\" \"\${$O}\"" | \
            LC_ALL=en_US.UTF-8  awk -v HIGHCOL="${HIGHCOL:-""}" -v HIGHROW="${HIGHROW:-""}" -v out="$out" "$(xrc cat ui/_v0/wcwidth.awk)$(xrc cat ui/_v0/table.awk)"
            # LC_ALL=en_US.UTF-8  awk -v HIGHCOL=3,6 -v HIGHROW=6 -v out="$out" "$(xrc cat ui/_v0/wcwidth.awk)$(xrc cat ui/_v0/table.awk)"
            # awk '{ print $0; }'
    else
        eval "printf \"%s\" \"\${$O}\"" | \
            LC_ALL=en_US.UTF-8  awk -v HIGHCOL="${HIGHCOL:-""}" -v HIGHROW="${HIGHROW:-""}"  -v out="$out" "$(xrc cat ui/_v0/wcwidth.awk)$(xrc cat ui/_v0/table.awk)"
            # LC_ALL=en_US.UTF-8  awk -v HIGHCOL=3,6 -v HIGHROW=6 -v out="$out" "$(xrc cat ui/_v0/wcwidth.awk)$(xrc cat ui/_v0/table.awk)"
            # awk '{ print $0; }'
    fi
}


___ui_table_clear(){
    local O="${O:-___X_CMD_UI_TABLE_DEFAULT}"
    eval ___X_CMD_UI_TABLE_DEFAULT_ROW_$O=0
    eval "$O="
}


# EndSection

# Section: rearrange the data

___ui_table_json(){
    local arg
    local args
    local title
    for arg in "$@"; do
        case "$arg" in
            .*)     args="$args,$arg"      
                    title="$title ${arg#.}"      
                    ;;
            *=.*)   args="$args,${arg#*=}"
                    title="$title ${arg%%=.*}"
                    ;;
            *)      printf "%s" "Argument Wrong." >&2
        esac
    done
    args="${args#,}"

    local line
    ui table -
    IFS="
"
    eval ui table + "$title"
    for line in $(x jq -r ".[] | [ $args ] | map( . | @json) | join(\" \") "); do
        eval ui table + "$line"
    done
    ui table out 6
}

# EndSection

# Section: table app 1: all data

xrc ui/_v0/region

# CRUD
___ui_table_out2(){

    local O="${O:-___X_CMD_UI_TABLE_DEFAULT}"

    echo hhh
    stty -echo

    local HIGHCOL=1
    local HIGHROW=1

    local COL_COUNT
    eval "COL_COUNT=\"\$___X_CMD_UI_TABLE_DEFAULT_COL_$O\""
    local ROW_COUNT
    eval "ROW_COUNT=\"\$___X_CMD_UI_TABLE_DEFAULT_ROW_$O\""

    {
        ___ui_table_out | ___x_cmd_ui_region_send
        while region_getchar; do
            case "$___X_CMD_UI_GETCHAR_CHAR" in
                UP|DN)
                    if [ "$___X_CMD_UI_GETCHAR_CHAR" = UP ]; then
                        HIGHROW="$(___ui_prompt_ui_dec "$HIGHROW" "$ROW_COUNT")"
                    else
                        HIGHROW="$(___ui_prompt_ui_inc "$HIGHROW" "$ROW_COUNT")"
                    fi
                    ;;
                LEFT|RIGHT)
                    if [ "$___X_CMD_UI_GETCHAR_CHAR" = LEFT ]; then
                        HIGHCOL="$(___ui_prompt_ui_dec "$HIGHCOL" "$COL_COUNT")"
                    else
                        HIGHCOL="$(___ui_prompt_ui_inc "$HIGHCOL" "$COL_COUNT")"
                    fi
                    ;;
                c)
                    printf "CREATE %s %s" "$HIGHCOL" "$HIGHROW" >&3
                    break
                    ;;
                e|u)
                    printf "UPDATE %s %s" "$HIGHCOL" "$HIGHROW" >&3
                    break
                    ;;
                r)
                    printf "REFRESH %s %s" "$HIGHCOL" "$HIGHROW" >&3
                    break
                    ;;
                ENTER)
                    printf "ENTER %s %s" "$HIGHCOL" "$HIGHROW" >&3
                    break
                    ;;
                DELETE)
                    printf "DELETE %s %s" "$HIGHCOL" "$HIGHROW" >&3
                    break
                    ;;
            esac

            ___ui_table_out | ___x_cmd_ui_region_send
        done
        
        # Notice: Meaningless but important.
        ___ui_table_out | ___x_cmd_ui_region_send

    } | ___x_cmd_ui_region_update

    exec 3>&-

    tput cvvis
    stty echo
}

# EndSection


# Section: table app 1: all data


# 1. Input data is primitive data
# 2. Input json, then tranfer as primitive data to awk
# 3. Using instruction to control table


# ___X_CMD_UI_TABLE_CONTROL_AWK_PATH="./table.control.awk" # ui/_v0/table.control.awk
___X_CMD_UI_TABLE_CONTROL_AWK_PATH="$(x which ui/_v0/table.control.awk)"

___x_cmd_ui_table_control(){
    LC_ALL=en_US.UTF-8 USE=str,wcwidth,ui ___x_cmd_awk file "$___X_CMD_UI_TABLE_CONTROL_AWK_PATH" -v EXIT_OP="$EXIT_OP"
    # LC_ALL=en_US.UTF-8  awk "$(xrc cat ui/_v0/wcwidth.awk)$(cat $___X_CMD_UI_TABLE_CONTROL_AWK_PATH)"
}

___x_cmd_ui_region_update_table(){
    LC_ALL=en_US.UTF-8 USE=str,ui ___x_cmd_awk file "$___X_CMD_UI_REGION_AWK"
}

# EXIT_OP=
___ui_table_out3_contain_exit_op(){
    # local EXIT_OP=${EXIT_OP:-""}
    # EXIT_OP=",$EXIT_OP,"
    if [ "$EXIT_OP" = "${EXIT_OP%*,$1,*}" ]; then
        return 1
    fi
    return 0
}

___ui_table_json(){
    # cat | json_to_table 
    :
}

___ui_table_out3(){
    ___ui_table_out_func 'printf "%s\n" "$___X_CMD_UI_TABLE_DEFAULT"'
}

___ui_table_json_to_table(){
    local keyname="$1"; shift
    xrc json/latest

    local IFS
    IFS="$(printf "\001")"
    SEP1="\002" SEP2="\003" ___json_awk_table_stream "$keyname" "$*"
}

# DATA
___ui_table_out_func(){
    local EXIT_OP=${EXIT_OP:-"ENTER,CREATE,DELETE"}
    EXIT_OP=",$EXIT_OP,"

    stty -echo
    exec 3>&1
    {
        # { cat; printf "\n"; } | ___x_cmd_ui_region_send
        { eval "$@"; printf "\n"; } | ___x_cmd_ui_region_send
        printf "VIEW %s %s\n" "$(ui rows)" "$(ui cols)" | ___x_cmd_ui_region_send

        local SPACE=
        printf "UPDATE\n"
        printf "VIEW %s %s\n" "$(ui rows)" "$(ui cols)"

        while region_getchar; do

            if [ -n "$SPACE"  ]; then
                case "$___X_CMD_UI_GETCHAR_TYPE" in
                    ascii-space|ascii-delete|ascii-symbol*|ascii-digit|ascii-letter*|UTF8-MULTI*)    
                        printf "INPUT %s %s\n" "$___X_CMD_UI_GETCHAR_TYPE" "$___X_CMD_UI_GETCHAR_CHAR" ;;
                    *)
                        if [ "$___X_CMD_UI_GETCHAR_CHAR" = ENTER ]; then
                            SPACE=
                            printf "FILTER_EDIT_END\n"
                        fi
                        ;;
                esac
            else
                case "$___X_CMD_UI_GETCHAR_CHAR" in
                    UP|DN|LEFT|RIGHT)
                        printf "%s\n" "$___X_CMD_UI_GETCHAR_CHAR"
                        ;;
                    p)
                        printf "PREV-PAGE\n"
                        ;;
                    n)
                        printf "NEXT-PAGE\n"
                        ;;
                    c)
                        printf "CREATE\n"
                        if ___ui_table_out3_contain_exit_op CREATE; then
                            printf "END\n"
                            break
                        fi
                        ;;
                    e|u)
                        printf "UPDATE\n"
                        if ___ui_table_out3_contain_exit_op UPDATE; then
                            printf "END\n"
                            break
                        fi
                        ;;
                    d)
                        printf "DELETE\n"
                        if ___ui_table_out3_contain_exit_op DELETE; then
                            printf "END\n"
                            break
                        fi
                        ;;
                    r)
                        printf "REFRESH\n"
                        if ___ui_table_out3_contain_exit_op REFRESH; then
                            printf "END\n"
                            break
                        fi
                        ;;
                    ENTER)
                        printf "ENTER\n"
                        if ___ui_table_out3_contain_exit_op ENTER; then
                            printf "END\n"
                            break
                        fi
                        ;;
                    *)
                        # TODO: add filter?
                        case "$___X_CMD_UI_GETCHAR_TYPE" in
                            ascii-space)    
                                SPACE=1
                                printf "FILTER_EDIT_BEGIN\n" ;;
                        esac
                esac
            fi

            printf "VIEW %s %s\n" "$(ui rows)" "$(ui cols)"
        done
        
        # Notice: Meaningless but important.
        printf "\n"

    } | ___x_cmd_ui_table_control | ___x_cmd_ui_region_update_table

    exec 3>&-

    # tput cvvis
    stty echo
    printf "\033[34h\033[?25h" >&2
}


# EndSection

# ui table -
# ui table + B%USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND
# # for i in $(seq 2); do
#     ui table + edwinjhlee       45694  69.7  3.2 12906080 542124   "??"  R    "三02下午" 2171:02.57 "com.docker.hyperkit -A -u -F vms/0/hyperkit.pid -c 4 -m 8192M -s 0:0,hostbridge -s"
#     ui table + _windowserver    24773   9.6  0.9  9289004 146772   "??"  Ss   "29 521"  2827:26.66 "/System/Library/PrivateFrameworks/SkyLight.framework/Resources/WindowServer -daemo"
#     ui table + edwinjhlee       40627   9.1  0.8  9704844 133228   "??"  Ss   "25 621"  351:58.88 "/Applications/Visual Studio Code.app/Contents/MacOS/Electron /Users/edwinjhlee/x-b"
#     ui table + edwinjhlee       81250   5.9  1.7 57448804 293384   "??"  S    "2:25下午"  18:21.02 "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Renderer).app1"
#     ui table + edwinjhlee       81250   5.9  1.7 57448804 293384   "??"  S    "2:25下午"  18:21.02 "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Renderer).app2"
#     ui table + edwinjhlee       99999   5.9  1.7 57448804 293384   "??"  S    "2:25下午"  18:21.02 "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Renderer).app3"
# # done
# ui table

# prepare_data(){
#     ui table jsonfmt .table.abc name age gender math=score.math <<A
# {
#     "table": {
#         "abc": [
#             {
#                 "name": "Edwin",
#                 "age": 31,
#                 "gender": "male",
#                 "score": {
#                     "math": 100
#                 }
#             },
#             {
#                 "name": "Li Junhao",
#                 "age": 30,
#                 "gender": "male",
#                 "score": {
#                     "math": 95
#                 }
#             },
#             {
#                 "name": "Junhao",
#                 "age": 30,
#                 "gender": "male",
#                 "score": {
#                     "math": 900
#                 }
#             }

#         ]
#     }

# }

# A
# }

# ui table func prepare_data

# Section: other design for encapulation

# ___ui_table_out_jsonsource(){
#     local srcfunc="$1"; shift
#     local IFS=" "
#     ___ui_table_out_func "$srcfunc | ___ui_table_json_to_table $*"
# }

# data(){
#     cat <<A
# {
#     "table": {
#         "abc": [
#             {
#                 "name": "Edwin",
#                 "age": 31,
#                 "gender": "male",
#                 "score": {
#                     "math": 100
#                 }
#             },
#             {
#                 "name": "Li Junhao",
#                 "age": 30,
#                 "gender": "male",
#                 "score": {
#                     "math": 95
#                 }
#             },
#             {
#                 "name": "Junhao",
#                 "age": 30,
#                 "gender": "male",
#                 "score": {
#                     "math": 900
#                 }
#             }

#         ]
#     }

# }
# A
# }

# # ___ui_table_out_jsonsource data .table.abc name age gender math=score.math
# printf "$(___ui_table_out_jsonsource data .table.abc name age gender math=score.math)\n"

# EndSection

