# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gh_current(){
    param:dsl       '
subcmd:
    repo        "Save the config in memory into file"
    owner       "get current owner"
    type        "get current owner type"
'
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi

    case "${PARAM_SUBCMD}" in
        type)       "___x_cmd_gh_current_owner_${PARAM_SUBCMD}"   "$@"     ;;
        *)          "___x_cmd_gh_current_${PARAM_SUBCMD}"        "$@"     ;;
    esac
}

# shellcheck disable=SC2120
___x_cmd_gh_current_repo() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"

    if [ -n "$1" ]; then
        param_default set "github_$O" "repo" "$@"
        return
    fi

    param_default get "github_$O" "repo"
}

# shellcheck disable=SC2120
___x_cmd_gh_current_owner() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"
    if [ -n "$1" ]; then
        param_default put     "github_$O" "owner" "$1"
        param_default remove  "github_$O" "owner_type"
        param_default dump    "github_$O"
        return 0
    fi

    local owner
    owner="$(param_default get "github_$O" owner)"
    [ -n "$owner" ] && echo "$owner" && return

    data=$(___x_cmd_gh_get "/user")
    [ -n "$data" ] && owner=$(___x_cmd_gh_json_query "$data" ".login") && param_default put "github_$O" owner "$owner"
    echo "$owner"
}

# shellcheck disable=SC2120
___x_cmd_gh_current_owner_type() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"
    if [ -n "$1" ]; then
        # Set owner type
        param_default put "github_$O" owner_type "$1"
        return
    fi

    local data
    data="$(param_default get "github_$O" owner_type "$1")"
    if [ -z "$data" ]; then
        owner="$(___x_cmd_gh_current_owner)"
        if [ -z "$owner" ]; then
            echo "Owner is empty. While owner not set." >&2
            return 1
        fi

        data=$(___x_cmd_gh_owner_type_query "$owner")
        [ -z "$data" ] && return 1

        param_default put "github_$O" owner_type "$data"
    fi
    printf "%s" "$data" 
}

___x_cmd_gh_owner_type_query() {
    param:void
    local owner="${1:?Provide owner name}"
    for types in "org" "enterprise" "user"
    do
        ___x_cmd_gh_${types}_info "$owner" 1>/dev/null 2>&1 && [ $? -eq 0 ] && printf "%s" "$types" && return 0
    done
    return 1
}

