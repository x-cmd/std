# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# Should be like this.
# gh repo member add el:admin
# gh repo member remove user-a
# gh repo member add user-b

# gh repo member +el:admin -user-a +user-b
___x_cmd_gh_repo_member(){
    param:dsl       '
subcmd:
    ls              "list member"
    add             "add member"
    del|remove      "Remove member"
'
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        gh_log error "subcommand not found. show help."
        return 0
    fi
    
    "___x_cmd_gh_repo_member_$PARAM_SUBCMD" "$@"
}

___x_cmd_gh_repo_member_ls() {
    param:scope     "github/$O"
    param:dsl       '
options:
    #1|--repo          "Repo name"         <>:repo
'
    param:run
    ___x_cmd_gh_param_init_owner_repo
    ui table func ___x_cmd_gh_table "\"\$(O=$O ___x_cmd_gh_get_multi \"/v5/repos/${owner_repo}/collaborators\" page per_page)\"" \
        . id login name push=permissions.push admin=permissions.admin
}

___x_cmd_gh_repo_member_add() {
    param:scope     "github/$O"
    param:dsl       '
options:
    --repo|-r           "Repo name"             <>:repo
    --permission|-p     "permission"            <>:permission
    #n                  "Username list"         <>
'
    param:run

    ___x_cmd_gh_param_init_owner_repo
    if [ -z "$1" ];then
        echo "At least one user’s spatial address is needed"
        return 1
    fi
    local username
    for username in "$@"; do
        {
            ___x_cmd_gh_put_json "/v5/repos/$owner_repo/collaborators/${username##*/}" permission 1>/dev/null
            local code=$?
            if [ $code -ne 0 ]; then
                gh_log error "add user failure: $username. Code is $code. "
            else
                ui tf "true" "add $username to $owner_repo successfully"
            fi
        }  
    done
}

# https://github.com/api/v5/swagger#/deleteV5ReposOwnerRepoCollaboratorsUsername
___x_cmd_gh_repo_member_del() {
    param:scope     "github/$O"
    param:dsl       '
options:
    --repo|-r       "Repo name"            <>:repo
    #n              "Username list"
'
    param:run
    [ -z "$1" ] && gh_log error "At least one user’s spatial address is needed" && return 1

    ___x_cmd_gh_param_init_owner_repo
    local username
    for username in "$@"; do
        ___x_cmd_gh_delete "/v5/repos/$owner_repo/collaborators/${username##*/}"
        if [ $? -ne 0 ];then
            gh_log error "delete user failure: $username."
        else
            ui tf "true" "successfully deleted $username in $owner_repo"
        fi
    done
}
