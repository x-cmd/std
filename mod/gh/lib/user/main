# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gh_user(){
    param:scope     ___x_cmd_github
    param:subcmd ___x_cmd_gh_user       \
        info        "Show information"  \
        email       "get user email"    \
        issue       "List all issues"   \
        repo        "List all repos"
    param:subcmd:try
    param:run
        # key         "key management"    \

    gh_log warn "Subcmd Not Found."
    ___x_cmd_gh_user _param_help_doc
    return 1
}

___x_cmd_gh_user_info() {
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    #1              "Username, if not set, show the user information of current owner, or owner of this token"
'
    param:run

    local owner="$1"
    local data
    if [ -z "$owner" ]; then
        data=$(___x_cmd_gh_http get "/user" )
    else
        data=$(___x_cmd_gh_http get "/users/$1")
    fi
    print "$data"
}

___x_cmd_gh_user_repo(){
    param:scope     ___x_cmd_github
    param:subcmd ___x_cmd_gh_user_repo       \
        ls          "List all repos"
    param:subcmd:try
    param:run
    ___x_cmd_gh_user_repo_ls "$@"
}

___x_cmd_gh_user_repo_ls() {
    param:scope     ___x_cmd_github
    param:dsl       '
options:
    --visibility    "visibility"                                <>:Authority="all"
    --affiliation   "affiliation"                               <>:UserGroup="owner"
    --sort          "sort"                                      <>:UserSort="created"
    --direction     "direction"                                 <>:Direction="desc"
    --per_page      "Results per page"                          <>=30
    --page          "Page number of the results to fetch."      <>=1
'
    param:run

    local url
    if [ $# -gt 0 ]; then
        url="/users/$1/repos"
    else
        url="/user/repos"
    fi

    ___gh_ui_mutual ___x_cmd_gh_http get "$url" visibility affiliation sort direction <<A
        ___ui_table_json Id=.id Name=.name Owner=.owner.login Url=.html_url -- \$@
A

}

___x_cmd_gh_user_email(){
    param:void
    ___gh_ui_mutual ___x_cmd_gh_get_multi "/emails" <<A
        ___ui_table_json email=.email state=.state -- \$@
A
}

___x_cmd_gh_user_issue(){
    param:scope     ___x_cmd_github
    param:dsl       '
type:
    screen = all assigned created
    sort = open progerssing closed rejected
    direction = desc asc
options:
    --filter        "filter(assigned,created,all)"                 <>:screen="assigned"
    --state         "state(open,progerssing,closed,rejected)"      <>:sort="open"
    --labels        "labels"                                       <>=""
    --direction     "direction(asc„ÄÅdesc)"                         <>:direction="desc"
    --since         "since"                                        <>=""
    --page          "page"                                         <>:numbers=""
    --per_page      "per_page"                                     <>:numbers=""
    --schedule      "schedule"                                     <>=""
    --deadline      "deadline"                                     <>=""
    --created_at    "create date"                                  <>=""
    --finished_at   "finish date"                                  <>=""
'
    param:run
    ___x_cmd_gh_get_multi "/user/issues" filter state labels direction since \
        schedule deadline created_at finished_at
}