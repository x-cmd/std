# shellcheck shell=sh disable=SC2039,3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io

# Section: main

xrc param/v0

______X_CMD_TLDR_AWK="$(xrc which tldr/v0.awk)"
______X_CMD_TLDR_WCWIDTH_AWK="$(xrc which ui/_v0/wcwidth.awk)"

______X_CMD_TLDR_LANG="
en
bs
da
de
es
fa
fr
hbs
hi
id
it
ja
ko
ml
nl
no
pl
pt_BR
pt_PT
ru
sv
ta
th
tr
zh
zh_TW
"

xrc ui/v0


tldr(){
    param:dsl <<A
subcommands:
    update      "Update"
    ls          "List all possible commands"
    lang        "Set Prefered language or show languange candidates"
    cat         "Concatenate tldr file to standard output"
A
    param:run

    if [ -z "${PARAM_SUBCMD}" ]; then
        case "$1" in
            :*)     tldr cat "${1#:}" ;;
            "")     tldr help;;
            *)      tldr cat "$@" ;;
        esac
        return
    fi

    "___tldr_$PARAM_SUBCMD" "$@"
}

_______X_CMD_TLDR_ROOT="$___X_CMD_ROOT/.tmp/tldr"

_______tldr_download(){
    local src="${1:?src}"
    local dst
    dst="${2:-$1}"

    local CACHE="$_______X_CMD_TLDR_ROOT/$dst"

    local url="https://gitee.com/x-cmd/tldr/raw/main/dist/$src"
    if [ "$___X_CMD_IN_CHINA_NET" != 1 ]; then
        url="https://raw.githubusercontent.com/x-cmd/tldr/main/dist/$src"
    fi

    ___x_cmd_curl "$url" 2>/dev/null
}

___tldr_current(){
    if [ ! -f "$_______X_CMD_TLDR_ROOT/index.yml" ]; then
        return 1
    fi

    local version
    version="$(cat "$_______X_CMD_TLDR_ROOT/index.yml")"
    version="${version%%
*}"
    version="${version#* }"
    printf "%s" "$version"
}

_______tldr_download_pages()(
    local version="${1:?Provide version}"
    local page_lang="${2:?pages}"
    if [ -d "$_______X_CMD_TLDR_ROOT/$version/$page_lang" ]; then
        printf "pages already exists.\n" >&2
        return
    fi

    mkdir -p "$_______X_CMD_TLDR_ROOT/$version/$page_lang"
    if ! _______tldr_download "$version/$page_lang.tgz" "$version/$page_lang/$page_lang.tgz"; then
        printf "%s\n" "Fail to update $page_lang." >&2
        return 1
    fi

    if cd "$_______X_CMD_TLDR_ROOT/$version/$page_lang" && tar xvf "$page_lang.tgz" 2>/dev/null; then
        printf "Version already UPDATED to %s.\n" "$version" >&2
    fi
)

___tldr_update()(
    if ! ___X_CMD_CURL_UPDATE=1 _______tldr_download index.yml; then
        printf "%s\n" "Fail to update index.yml." >&2
        return 1
    fi

    local version
    version="$(___tldr_current)"
    version="${version%%
*}"
    version="${version#* }"

    _______tldr_download_pages "$version" "pages"
)

___tldr_current_or_update(){
    local version
    if ! version="$(___tldr_current)"; then
        if ! ___tldr_update; then
            return 1
        fi
        ___tldr_current
        return
    else
        printf "%s" "$version"
    fi
}


______X_CMD_TLDR_LANG_PREFERED="${______X_CMD_TLDR_LANG_PREFERED:-en}"
___tldr_lang(){
    if [ "$#" -eq 0 ]; then
        printf "%s" "$______X_CMD_TLDR_LANG"
        return
    fi

    local lang="${1:?Provide langauge}"
    if [ "$lang" != "en" ]; then
        local version
        version="$(___tldr_current_or_update)" || return
        _______tldr_download_pages "$version" "pages.$lang" || return
    fi
    ______X_CMD_TLDR_LANG_PREFERED="$lang"
    printf "Already setting prefered languange to %s\n" "$______X_CMD_TLDR_LANG_PREFERED" >&2
}

___tldr_getfile(){
    local cand="${1:?Provide command}"
    if [ "$______X_CMD_TLDR_LANG_PREFERED" != en ]; then
        local fp
        fp="$_______X_CMD_TLDR_ROOT/$(___tldr_current)/pages.$______X_CMD_TLDR_LANG_PREFERED/$cand"
        [ -f "$fp" ] && printf "%s" "$fp" && return
    fi

    printf "%s" "$_______X_CMD_TLDR_ROOT/$(___tldr_current)/$cand"
}

___tldr_lsname(){
    ___tldr_ls | awk -v FS=/ '{ print substr($2, 1, length($2)-3); }' | sort | uniq
}

___tldr_ls()(
    local version
    version="$(___tldr_current_or_update)" || return

    if cd "$_______X_CMD_TLDR_ROOT/$version/pages/"; then
        local cmd="${1}"
        case "$cmd" in
            "")     ls */* ;;
            */*)    ls */* | grep "$cmd" ;;
            *)      ls */* | grep "\/$cmd" ;;
        esac
    fi
)

___tldr_exact()(
    local version
    version="$(___tldr_current_or_update)" || return

    if cd "$_______X_CMD_TLDR_ROOT/$version/"; then
        local cmd="${1}"
        case "$cmd" in
            "")     ls */*/* ;;
            */*)    ls */*/* | grep "$cmd" ;;
            *)      ls */*/* | grep "\/$cmd.md" ;;
        esac
    fi
)

___tldr_cat(){

    cand="$( ___tldr_exact "$@" )"
    local num
    num="$(printf "%s" "$cand" | awk 'END{ print NR; }')"

    case $num in
        0)  printf "Not found.\n" >&2;
            ___tldr_ls "$@" >&2
            return 1 ;;
        1)
            if [ -t 1 ]; then
                awk -v COLUMNS="$COLUMNS" "$(xrc cat $______X_CMD_TLDR_WCWIDTH_AWK)$(cat "$______X_CMD_TLDR_AWK")" < "$(___tldr_getfile "$cand")"
            else
                cat "$(___tldr_getfile "$cand")"
            fi
                ;;
        *)
            local tldr_file
            tldr_file="$(eval "$(printf "%s" "$cand" | awk 'BEGIN{ str="ui select \"text\" \"Found: \""; }{ str = str  " " "\"" $0 "\""; }END{ print str; }')" )"
            if [ -f "$tldr_file" ];then
                cat "$(___tldr_getfile "$tldr_file")" | awk -v COLUMNS="$COLUMNS" "$(xrc cat $______X_CMD_TLDR_WCWIDTH_AWK)$(cat "$______X_CMD_TLDR_AWK")"
                return 1
            fi
            ;;
    esac
}
# EndSection

# TODO: Maybe x-cmd can use this advise json. And then we can remove this from x-cmd.
if [ -n "$BASH_VERSION$ZSH_VERSION" ] && [ "${-#*i}" != "$-" ]; then
    xrc advise
    advise tldr - <<A
{
    "update": "--- Update",
    "ls": "--- list all possible commands",
    "lang": {
        "#1": "___tldr_lang",
        "#desc": "Set Prefered language or show languange candidates"
    },
    "cat": {
        "#1": "___tldr_lsname",
        "#desc": "Concatenate tldr file to standard output"
    }
}
A
fi

