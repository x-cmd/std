# shellcheck shell=sh
# shellcheck disable=SC2039

# variables setup
###
    # @description: set up color
    # @param: fg-$color | bg-$color | bfg $color | ibg $color | bold | underline | reset
    # @param: $color => black | red | green | yellow | blue | magenta | cyan | white
    # @example1: ___x_cmd_theme_style fg-red hello
    # @example2: ___x_cmd_theme_style fg-red -- hello
    # @example3: ___x_cmd_theme_style bold red hello
    # @example4: ___x_cmd_theme_style bold rgbfg-199 hello
###
## Enable our easy to read Colour Flags as long as --no-colors hasn't been passed or the NO_COLOR Env Variable is set.
## NOTE: the NO_COLOR env variable is from: https://no-color.org/

# Section: ___x_cmd_theme_style
# zsh https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html#Visual-effects
# TODO: here
if [ -z "${NO_COLOR}" ]; then

if [ -n "$ZSH_VERSION" ]; then
autoload -U colors && colors

______x_cmd_theme_setup_zsh_color(){
    typeset -AHg FG BG
    for color in {000..255}; do
        FG[$color]="%{[38;5;${color}m%}"
        BG[$color]="%{[48;5;${color}m%}"
    done
}

# sheckcheck disable=SC2144
if [ -z $FG[100] ];then
    ______x_cmd_theme_setup_zsh_color
fi

___x_cmd_theme_style(){
    while [ $# -gt 0 ]; do
        case "$1" in
            bold)                                                   printf "%s" "%B"                                           ;;
            underline)                                              printf "%s" "%U"                                           ;;
            black|red|green|yellow|blue|magenta|cyan|white)         printf "%s" "%{$fg[$1]%}"                                  ;;
            fg-*)                                                   printf "%s" "%{$fg[${1#fg-}]%}"                            ;;
            bfg-*)                                                  printf "%s" "%{$fg_bold[${1#bfg-}]%}"                      ;;
            ifg-*)                                                  printf "%s" "%{$fg_no_bold[${1#ifg-}]%}"                   ;;
            rgbfg-*)                                                printf "%s" "%{$FG[${1#rgbfg-}]%}"                         ;;
            bg-*)                                                   printf "%s" "%{$bg[${1#bg-}]%}"                            ;;
            bbg-*)                                                  printf "%s" "%{$bg_bold[${1#bbg-}]%}"                      ;;
            ibg-*)                                                  printf "%s" "%{$bg_no_bold[${1#ibg-}]%}"                   ;;
            rgbbg-*)                                                printf "%s" "%{$BG[${1#rgbbg-}]%}"                         ;;
            reset)                                                  printf "%s" "%{$reset_color%}"                             ;;
            --)                                                     shift; printf "%s" "$*%{$reset_color%}%b%u"; return ;;
            *)                                                      printf "%s" "$*%{$reset_color%}%b%u"; return
        esac
        shift
    done
}

else

______x_cmd_theme_colorcode(){
    case "$1" in
        black)      printf 0 ;;
        red)        printf 1 ;;
        green)      printf 2 ;;
        yellow)     printf 3 ;;
        blue)       printf 4 ;;
        magenta)    printf 5 ;;
        cyan)       printf 6 ;;
        white)      printf 7 ;;
    esac
}

___x_cmd_theme_style(){
    while [ $# -gt 0 ]; do
        case "$1" in
            bold)                                                   printf "\033[1m"                                             ;;
            underline)                                              printf "\033[4m"                                             ;;
            black|red|green|yellow|blue|magenta|cyan|white)         printf "\033[3$(______x_cmd_theme_colorcode "$1")m"          ;;
            fg-*)                                                   printf "\033[3$(______x_cmd_theme_colorcode "${1#fg-}")m"    ;;
            bfg-*)                                                  printf "\033[1;3$(______x_cmd_theme_colorcode "${1#bfg-}")m" ;;
            ifg-*)                                                  printf "\033[1;9$(______x_cmd_theme_colorcode "${1#ifg-}")m" ;;
            rgbfg-*)                                                printf "\033[38;5;"${1#rgbfg-}"m"                            ;;
            bg-*)                                                   printf "\033[4$(______x_cmd_theme_colorcode "${1#bg-}")m"    ;;
            bbg-*)                                                  printf "\033[1;4$(______x_cmd_theme_colorcode "${1#bbg-}")m" ;;
            ibg-*)                                                  printf "\033[10$(______x_cmd_theme_colorcode "${1#ibg-}")m"  ;;
            rgbbg-*)                                                printf "\033[48;5;"${1#rgbfg-}"m"                            ;;
            reset)                                                  printf "\033[0m"                                             ;;
            --)                                                     shift; printf "%s\033[0m" "$*"; return ;;
            *)                                                      printf "%s\033[0m" "$*"; return
        esac
        shift
    done
}

fi

fi
# EndSection

# Section: ___x_cmd_theme_style
###
# @description: set up color
###
___X_CMD_THEME_NEWLINE="
"

if [ -n "$ZSH_VERSION" ]; then

___X_CMD_THEME_USER='%n'

# Path
___X_CMD_THEME_PATH='%1d'
___X_CMD_THEME_FULL_PATH='%~'

# Date
___X_CMD_THEME_DATE='%D';
___X_CMD_THEME_TIME_H_M_S='%*';
___X_CMD_THEME_TIME_H12_M_S='%D{%L:%M:%S}';
___X_CMD_THEME_TIME_H_M='%T';
___X_CMD_THEME_TIME_H12_M='%@';

# Host
___X_CMD_THEME_HOST='%m'
___X_CMD_THEME_FULL_HOST='%M'

else

___X_CMD_THEME_USER='\u'

# Path
___X_CMD_THEME_PATH='\W';
___X_CMD_THEME_FULL_PATH='\w';

# Date
___X_CMD_THEME_DATE='\d';
___X_CMD_THEME_TIME_H_M_S='\t';
___X_CMD_THEME_TIME_H12_M_S='\T';
___X_CMD_THEME_TIME_H_M='\A';
___X_CMD_THEME_TIME_H12_M='\@';

# Host
___X_CMD_THEME_HOST='\h';
___X_CMD_THEME_FULL_HOST='\H';

fi
# EndSection
