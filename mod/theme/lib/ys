# shellcheck shell=sh   disable=SC2039,SC3043
___x_cmd_theme_set_theme_color cyan
______x_cmd_theme_prompt_get_info(){
    ___x_cmd_theme_scm && case "${___X_CMD_THEME_SCM_TYPE}" in
        git)
            local _branch_info
            local _is_dirty
            x con _branch_info= ___x_cmd_theme_git_get_friendly_ref _is_dirty= ___x_cmd_theme_is_git_dirty
            printf "%s " "${PREFIX:-on} git:$(___x_cmd_theme_style cyan "$_branch_info")"
            if [ "$_is_dirty" ];then
                printf "%s " "$(___x_cmd_theme_style yellow 'x')"
            else
                printf "%s " "$(___x_cmd_theme_style green 'o')"
            fi
        ;;
        *)
            return
        ;;
    esac
}

# Prompt format:
___x_cmd_theme_prompt_format(){
    local _wrap
    local _username
    _username="$(___x_cmd_theme_style cyan "$(___x_cmd_theme_prompt_comp_username)")"
    local _cwd
    _cwd="$(___x_cmd_theme_style bold yellow "${___X_CMD_THEME_FULL_PATH}")"
    local _sub_env
    [ -n "$___X_CMD_THEME_CONTROL_SUBENV_PROMT" ] && _sub_env=$(___x_cmd_theme_control_env_prompt) && _wrap='\n'
    local _time="[${___X_CMD_THEME_TIME_H_M_S}]"

    printf "\n%s$_wrap%s\n%s " \
        "${_sub_env}" \
        "${_username} ${_cwd} $(______x_cmd_theme_prompt_get_info)${_time}" \
        "$(___x_cmd_theme_prompt_comp_symbol "\$" "bold green" "bold red")"
}
