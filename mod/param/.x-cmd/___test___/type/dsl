# shellcheck shell=sh

f(){
    printf "%s\n" "aaa bbb"
}

param_type      gitee     Access        =       private public
param_type      gitee     UserGroup     =       owner "\"\"" admin
param_type      gitee     func          =       "$(f)"
param_type      gitee     number        "=~"    "[0-9]+"
param_type      gitee     License       -       <<A
    $(cat "$(x wsroot)"/.x-cmd/testcase_pre/license.txt)
A
param_type      gitee     License2      -  <<A
eee
fff
A

# TODO: "=" inclue regex
param_test_type(){
    param:scope "gitee"
    param:dsl '
type:
    Access = dsl_private "" dsl_public
option:
    --aaa       "desc aaa"      <aaa>:Access="dsl_private"
    --bbb       "desc bbb"      <bbb>:Access=
    --ccc       "desc ccc"      <ccc>:License="BSD-2-Clause"
    --ddd       "desc ddd"      <ddd>:License2="eee"
    --eee       "desc eee"      <eee>:UserGroup=
    --fff       "desc fff"      <fff>:func="aaa"
    --ggg       "desc ggg"      <ggg>:number=123
    #1          "desc #1"       <restarg1>:License2="fff"
'
    param:run

    printf "%s\n" "aaa:$aaa"
    printf "%s\n" "bbb:$bbb"
    printf "%s\n" "ccc:$ccc"
    printf "%s\n" "ddd:$ddd"
    printf "%s\n" "eee:$eee"
    printf "%s\n" "fff:$fff"
    printf "%s\n" "ggg:$ggg"
    printf "%s\n" "#1:$1"
}

test_param_type(){
    @assert stdout param_test_type <<A
aaa:dsl_private
bbb:
ccc:BSD-2-Clause
ddd:eee
eee:
fff:aaa
ggg:123
#1:fff
A
}

@assert:file:func