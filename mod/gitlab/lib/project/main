# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gitlab_project(){
    param:scope         ___x_cmd_gitlab
    param:subcmd ___x_cmd_gitlab_project                                   \
        create          "Create project"                                   \
        ls              "List project of owner"                            \
        info            "Show detailed information of project"             \
        update          "Setup project configure"                          \
        rm              "Remove project"                                   \
        issue           "project issue list"                               \
        member          "project member manage"
    param:subcmd:try
    param:run

    ___x_cmd_gitlab_project _param_help_doc
    gitlab_log warn "Subcmd Not Found."
    return 1
}

# Section: create
# shellcheck disable=SC2154
___x_cmd_gitlab_project_create(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
option:
    #1                                                  "project names"                                                                     <>:RepoName
    -p|--path                                           "project path"                                                                         <>=""
    --topics                                            "The list of topics for a project"                                                  <>:Array=""
    --avatar                                            "Image file for avatar of the project."                                             <>=""
    --tag_list                                          "The list of tags for a project"                                                    <>:Array=""
    --import_url                                        "URL to import repository from."                                                    <>=""
    --visibility                                        "See project visibility level."                                                     <>=""
    --description                                       "Short project description."                                                        <>=""
    --merge_method                                      "Set the merge method used."                                                        <>=""
    --namespace_id                                      "Namespace for the new project"                                                     <>=""
    --build_timeout                                     "The maximum amount of time, in seconds, that a job can run."                       <>:Number=""
    --squash_option                                     "One of never, always, default_on, or default_off."                                 <>=""
    --template_name                                     "When used without use_custom_template, name of a built-in project template."       <>=""
    --ci_config_path                                    "The path to CI configuration file."                                                <>=""
    --default_branch                                    "The default branch name."                                                          <>=""
    --wiki_access_level                                 "wiki access level"                                                                 <>=""
    --build_git_strategy                                "The Git strategy. Defaults to fetch."                                              <>=""
    --repository_storage                                "Which storage shard the repository is on."                                         <>=""
    --pages_access_level                                "Pages access level"                                                                <>=""
    --issues_access_level                               "Issues access level"                                                               <>=""
    --builds_access_level                               "One of disabled, private, or enabled."                                             <>=""
    --template_project_id                               "When used with use_custom_template, project ID of a custom project template."      <>:Number=""
    --forking_access_level                              "One of disabled, private, or enabled."                                             <>=""
    --snippets_access_level                             "Snippets access level"                                                             <>=""
    --analytics_access_level                            "One of disabled, private or enabled"                                               <>=""
    --approvals_before_merge                            "How many approvers should approve merge requests by default"                       <>:Number=""
    --repository_access_level                           "Repository access level"                                                           <>=""
    --operations_access_level                           "Operations access level"                                                           <>=""
    --requirements_access_level                         "Requirements access level"                                                         <>=""
    --auto_devops_deploy_strategy                       "Auto Deploy strategy"                                                              <>=""
    --merge_requests_access_level                       "Merge requests access level"                                                       <>=""
    --container_registry_access_level                   "Set visibility of container registry, for this project"                            <>=""
    --group_with_project_templates_id                   "specifies ID of group from which all the custom project templates are sourced."    <>:Number=""
    --security_and_compliance_access_level              "Security and compliance access level."                                             <>=""
    --container_expiration_policy_attributes            "Update the image cleanup policy for this project. "                                <>=""
    --external_authorization_classification_label       "The classification label for the project."                                         <>=""
    --mirror                                            "Enables pull mirroring in a project."
    --lfs_enabled                                       "Enable LFS."
    --jobs_enabled                                      "Enable jobs for this project."
    --wiki_enabled                                      "Enable wiki for this project. Use wiki_access_level instead."
    --public_builds                                     "If true, jobs can be viewed by non-project members."
    --issues_enabled                                    "Enable issues for this project."
    --emails_disabled                                   "Disable email notifications."
    --snippets_enabled                                  "Enable snippets for this project. "
    --packages_enabled                                  "Enable or disable packages repository feature."
    --auto_devops_enabled                               "Enable Auto DevOps for this project."
    --use_custom_template                               "Use either custom instance or group project template."
    --merge_trains_enabled                              "Enable or disable merge trains."
    --mirror_trigger_builds                             "Pull mirroring triggers builds."
    --initialize_with_readme                            "Whether to create a Git repository with just a README.md file"
    --shared_runners_enabled                            "Enable shared runners for this project."
    --request_access_enabled                            "Allow users to request member access."
    --merge_requests_enabled                            "Enable merge requests for this project."
    --merge_pipelines_enabled                           "Enable or disable merge pipelines."
    --container_registry_enabled                        "Enable container registry for this project."
    --autoclose_referenced_issues                       "Set whether auto-closing referenced issues on default branch."
    --auto_cancel_pending_pipelines                     "Auto-cancel pending pipelines."
    --allow_merge_on_skipped_pipeline                   "Set whether or not merge requests can be merged with skipped jobs."
    --remove_source_branch_after_merge                  "Enable Delete source branch option by default for all new merge requests."
    --resolve_outdated_diff_discussions                 "Automatically resolve merge request diffs discussions on lines changed with a push."
    --printing_merge_request_link_enabled               "Show link to create/view merge request when pushing from the command line."
    --only_allow_merge_if_pipeline_succeeds             "Set whether merge requests can only be merged with successful pipelines."
    --only_allow_merge_if_all_discussions_are_resolved  "Set whether merge requests can only be merged when all the discussions are resolved."
'
    param:run
    [ $# -ne 0 ] || { gitlab_log error "Please provide project name"; return 1; }
    local gitlab_path="$1"
    [ -z "$p" ] || gitlab_path="$p"
    local name="$1"
    local gen_gitlab_json
    gen_gitlab_json="$(param:option2json +name -p path=gitlab_path)"
    ___x_cmd_gitlab_http post "/projects" "$gen_gitlab_json" | ___x_cmd_gitlab_project_create_status_handler
}

# shellcheck disable=SC2154
___x_cmd_gitlab_project_create_status_handler(){
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        return
    fi

    ___x_cmd_git_json_query_rename project_id=.id url=.web_url project_owner=.owner.username
    if [ -n "$project_id" ]; then
        ___x_cmd_ui_tf true  "Creating project $name successfully" "project_id: $project_id" "project_owner: $project_owner" "url: $url"
    else
        ___x_cmd_ui_tf false "Creating project failure: $name"
        return 1
    fi
}
# EndSection

# Section: list
# shellcheck disable=SC2154,SC2145
___x_cmd_gitlab_project_ls(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:

'
    param:run
    ___x_cmd_gitlab_current_owner 1>/dev/null
    ___gitlab_ui_mutual  ___x_cmd_gitlab_get_multi "/users/$___X_CMD_GITLAB_DEFAULT_OWNER/projects"  <<A
    ___ui_table_json Id=.id Name=.name Owner=.owner.username Url=.web_url -- \$@
A
}
# EndSection

# Section: update

# shellcheck disable=SC2154,SC2034
___x_cmd_gitlab_project_update(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--project|--id                                      "The ID or URL-encoded path of the project."      <>:RepoName
    --allow_merge_on_skipped_pipeline                   "Set whether or not merge requests can be merged with skipped jobs."
    --analytics_access_level                            "One of disabled, private or enabled"                                                                                                           <>="disabled"
    --approvals_before_merge                            "How many approvers should approve merge request by default. "                                                                                  <>:Number=" "
    --auto_cancel_pending_pipelines                     "Auto-cancel pending pipelines. This isn’t a boolean, but enabled/disabled. "                                                                   <>=""
    --auto_devops_deploy_strategy                       "Auto Deploy strategy (continuous, manual, or timed_incremental) "                                                                              <>=""
    --auto_devops_enabled                               "Enable Auto DevOps for this project. "
    --autoclose_referenced_issues                       "Set whether auto-closing referenced issues on default branch "
    --avatar                                            "Image file for avatar of the project."                                                                                                         <>:mixed=""
    --build_git_strategy                                "The Git strategy. Defaults to fetch"                                                                                                           <>=""
    --build_timeout                                     "The maximum amount of time, in seconds, that a job can run."                                                                                   <>:Number=" "
    --builds_access_level                               "One of disabled, private, or enabled."                                                                                                         <>=""
    --ci_config_path                                    "The path to CI configuration file."                                                                                                            <>=""
    --ci_default_git_depth                              "Default number of revisions for shallow cloning."                                                                                              <>:Number=""
    --ci_forward_deployment_enabled                     "When a new deployment job starts, skip older deployment jobs that are still pending."
    --ci_separated_caches                               "Set whether or not caches should be separated by branch protection status."
    --container_expiration_policy_attributes            "Update the image cleanup policy for this project. Accepts: (string), (integer), (string), (string), (string), (string), (boolean). "           <>:hash=""
    --container_registry_access_level                   "Set visibility of container registry, for this project, to one of , or . disabled private enabled"                                             <>=""
    --container_registry_enabled                        "(Deprecated) Enable container registry for this project. Use instead."
    --default_branch                                    "The default branch name."                                                                                                                      <>=""
    --description                                       "Short project description."                                                                                                                    <>=""
    --emails_disabled                                   "Disable email notifications.."
    --external_authorization_classification_label       "The classification label for the project."                                                                                                     <>=""
    --forking_access_level                              "The classification label for the project."                                                                                                     <>=""
    --import_url                                        "URL the repository was imported from."                                                                                                         <>=""
    --issues_access_level                               "One of disabled, private, or enabled"                                                                                                          <>=""
    --issues_enabled                                    "Set the merge method used."                                                                                                                    <>=""
    --merge_pipelines_enabled                           "Enable or disable merge pipelines.."
    --merge_requests_access_level                       "One of disabled, private, or enabled"                                                                                                          <>=""
    --merge_requests_enabled                            "(Deprecated) Enable merge requests for this project. Use instead."
    --merge_requests_template                           "Default description for merge requests. Description is parsed with GitLab Flavored Markdown."                                                  <>=""
    --merge_trains_enabled                              "Enable or disable merge trains.."
    --mirror_overwrites_diverged_branches               "Pull mirror overwrites diverged branches."
    --mirror_trigger_builds                             "mirror_trigger_builds"
    --mirror_user_id                                    "User responsible for all the activity surrounding a pull mirror event. (administrators only)"                                                  <>:Number=""
    --mirror                                            "Enables pull mirroring in a project"
    --mr_default_target_self                            "For forked projects, target merge requests to this project. If false, the target will be the upstream project"
    --name                                              "The name of the project"                                                                                                                       <>=""
    --naonly_allow_merge_if_all_discussions_            are_resolvedme    "only_allow_merge_if_all_discussions_are_resolved"
    --only_allow_merge_if_pipeline_succeeds             "Set whether merge requests can only be merged with successful jobs."
    --only_mirror_protected_branches                    "Only mirror protected branches."
    --operations_access_level                           "One of disabled, private, or enabled"                                                                                                          <>=""
    --packages_enabled                                  "Enable or disable packages repository feature."
    --pages_access_level                                "One of disabled, private, enabled, or public."                                                                                                 <>=""
    --path                                              "Custom repository name for the project. By default generated based on name."                                                                   <>=""
    --printing_merge_request_link_enabled               "Show link to create/view merge request when pushing from the command line."
    --public_builds                                     "If true, jobs can be viewed by non-project members"
    --remove_source_branch_after_merge                  "Enable option by default for all new merge requests.Delete source branch "
    --repository_access_level                           "One of disabled, private, or enabled"                                                                                                          <>=""
    --repository_storage                                "Which storage shard the repository is on. (administrators only)"                                                                               <>=""
    --request_access_enabled                            "Allow users to request member access."
    --requirements_access_level                         "One of disabled, private, enabled or public"                                                                                                   <>=""
    --resolve_outdated_diff_discussions                 "Automatically resolve merge request diffs discussions on lines changed with a push."
    --restrict_user_defined_variables                   "Allow only users with the Maintainer role to pass user-defined variables when triggering a pipeline."
    --security_and_compliance_access_level              "Security and compliance access level. One of disabled, private, or enabled"                                                                    <>=""
    --service_desk_enabled                              "Enable or disable Service Desk feature."
    --shared_runners_enabled                            "Enable shared runners for this project."
    --snippets_access_level                             "One of disabled, private, or enabled"                                                                                                          <>=""
    --snippets_enabled                                  "(Deprecated) Enable snippets for this project. Use instead. snippets_access_level"
    --snippets_enabled                                  "(Deprecated) Enable snippets for this project. Use instead. snippets_access_level"
    --squash_commit_template                            "Template used to create squash commit message in merge requests"                                                                               <>=""
    --squash_option                                     "One of never, always, default_on, or default_off"                                                                                              <>=""
    --suggestion_commit_message                         "The commit message used to apply merge request suggestions."                                                                                   <>=""
    --tag_list                                          "(Deprecated in GitLab 14.0) The list of tags for a project; put array of tags, that should be finally assigned to a project. Use instead."     <>:array=""
    --topics                                            "The list of topics for the project. This replaces any existing topics that are already added to the project. (Introduced in GitLab 14.0.)."    <>:array=""
    --visibility                                        "See project visibility level."                                                                                                                 <>=""
    --wiki_access_level                                 "One of disabled, private, or enabled"                                                                                                          <>="disabled"
    --wiki_enabled                                      "(Deprecated) Enable wiki for this project. Use instead. wiki_access_level"                                                                     <>
'
    param:run
    ___x_cmd_gitlab_param_init_owner_project
    local gen_gitlab_json
    gen_gitlab_json="$(param:option2json -project)"
    # project name urlecode
    ___x_cmd_gitlab_http put "/projects/$1" "$gen_gitlab_json" | ___x_cmd_gitlab_project_update_status_handler
}

___x_cmd_gitlab_project_update_status_handler(){
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        return
    fi

    ___x_cmd_git_json_query_rename url=.web_url
    if [ -n "$url" ]; then
        ___x_cmd_ui_tf true     "Update $name successfully" "url: $url"
    else
        ___x_cmd_ui_tf false    "Update failure: $name."
        return 1
    fi
}
# EndSection

# Section: info
# shellcheck disable=SC2154
___x_cmd_gitlab_project_info(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--id                                 "The ID or URL-encoded path of the project."    <>
    --license                               "Include project license data."
    --statistics                            "Include project statistics. Only available to Reporter or higher level role members."
    --with_custom_attributes                "Include custom attributes in response. (administrator only)"
'
 param:run
   ___x_cmd_gitlab_http get "/projects/$id"| ___x_cmd_gitlab_repo_info_status_handler
}

___x_cmd_gitlab_repo_info_status_handler() {
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        return
    fi

    ___x_cmd_git_json_query_rename id=.id name=.name default_branch=.default_branch web_url=.web_url
    if [ -n "$id" ]; then
        ___x_cmd_ui_tf true    "Success" "id: $id" "name:$name" "default_branch: $default_branch" "url: $web_url"
    else
        ___x_cmd_ui_tf false   "Couldn't find any repo: $owner_project"
        return 1
    fi
}
# EndSection

# Section: del
# shellcheck disable=SC2181,SC2154
___x_cmd_gitlab_project_rm(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--id                                    "The ID or URL-encoded path of the project."   <>                                                                            <>
'
 param:run

    if ___x_cmd_gitlab_http delete "/projects/$1" >/dev/null; then
        ___x_cmd_ui_tf true  "Deleting repo $1 successfully"
    else
        ___x_cmd_ui_tf false "Deleting repo failure: $1. Probably because it desn't exists."
        return 1
    fi
}
# EndSection

# Section: project issue ls
___x_cmd_gitlab_project_issue(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
   --assignee_id                           "Return issues assigned to the given user id."                                                                               <>:Number=""
   --assignee_username                     "Return issues assigned to the given username."                                                                              <>:array=""
   --author_id                             "Return issues created by the given user id."                                                                                <>:Number=""
   --author_username                       "Return issues created by the given username."                                                                               <>=""
   --confidential                          "Filter confidential or public issues."
   --created_after                         "Return issues created on or after the given time. Expected in ISO 8601 format"                                              <>:datetime=""
   --created_before                        "Return issues created on or before the given time."                                                                         <>:datetime=""
   --due_date                              "Return issues that have no due date,are overdue,or whose due date is this week,this month,or between two weeks ago and next month"     <>=""
   --epic_id                               "Return issues associated with the given epic ID."                                                                           <>:Number=""
   --iids                                  "Return only the issues having the given iid"                                                                                <>:array=""
   --id                                    "The ID or URL-encoded path of the project owned by the authenticated user"                                                  <>
   --issue_type                            "Filter to a given type of issue. One of issue, incident, or test_case."                                                     <>=""
   --iteration_id                          "Return issues assigned to the given iteration ID."                                                                          <>:Number=""
   --iteration_title                       "Return issues assigned to the iteration with the given title."                                                              <>=""
   --labels                                "Comma-separated list of label names, issues must have all labels to be returned. "                                          <>=""
   --milestone                             "The milestone title. "                                                                                                      <>=""
   --my_reaction_emoji                     "Return issues reacted by the authenticated user by the given emoji. "                                                       <>=""
   --not                                   "Return issues that do not match the parameters supplied. "                                                                  <>:hash=""
   --order_by                              "Return issues ordered by created_at,due_date,label_priority,milestone_due,popularity,priority,relative_position,title, updated_at,or weight fields.Default is created_at"         <>=""
   --scope                                 "Return issues for the given scope:"                                                                                         <>=""
   --sort                                  "Return issues sorted in asc or desc order. Default is desc"                                                                 <>=""
   --search                                "Search group issues against their title and description"                                                                    <>=""
   --state                                 "Return all issues or just those that are opened or closed"                                                                  <>=""
   --updated_after                         "Return issues updated on or after the given time."                                                                          <>:datetime=""
   --updated_before                        "Return issues updated on or before the given time."                                                                         <>:datetime=""
   --weight                                "Return issues with the specified weight."                                                                                   <>:Number=""
   --with_labels_details                   "If true, the response returns more details for each label in labels field: :name, :color, :description, :description_html,:text_color.Default is false."
'
 param:run

  ___gitlab_ui_mutual  ___x_cmd_gitlab_get_multi  "/projects/$id/issues" sort order_by search state  <<A
        ___ui_table_json Id=.id iid=.iid project_id=.project_id title=.title state=.state web_url=.web_url -- \$@
A
}
# EndSection