# shellcheck    shell=sh            disable=SC3043      # xrc


# # Rely on ll or ls
# # Control the lsversion awk for better showing
# ___x_cmd_pkg_version(){
#     ___x_cmd_pkg___all_info "$@" | awk \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
#         -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/pkg.lsversion.awk"
# }

# Rely on ll or ls
# Control the lsversion awk for better showing
# ___x_cmd_pkg_version(){
#     local pkg_name="${1:?Provide pkg name}"
#     local osarch="${2:?osarch as filter}"
#     ___x_cmd_pkg___all_info "${pkg_name}" | awk \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
#         -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
#         -f "awk/util.awk" \
#         -f "awk/pkg.lsversion.awk"
# }

___x_cmd_pkg___which_p7zip()(
    ___x_cmd_mkdirp "$___X_CMD_PKG_RAWPATH"
    local p7zip="$___X_CMD_ROOT_TMP/pkg/all.7z"
    if ! ___x_cmd_httpget_gitx x-cmd pkg main "dist/all.7z" "$p7zip" "${1:-3600}"; then # 1-day
        if [ ! -f "$p7zip" ]; then
            pkg:error "Unaviable all.7z. Unable to fetch all.7z."
            return 1
        fi
    fi

    if [ "$___X_CMD_HTTPGET_AGE" = 0 ]; then
        xrc p7zip
        x rmrf "$___X_CMD_PKG_RAWPATH"
        ___x_cmd_mkdirp "$___X_CMD_PKG_RAWPATH"
        pkg:debug "Deflate the all.7z"
        if ! ( cd "${p7zip%/*}" && cp all.7z raw/all.7z && cd raw && p7zd x all.7z 1>/dev/null && x rmrf all.7z ); then
            pkg:error "Deflation failure."
            x rmrf "$p7zip"
        fi
    fi
)


___x_cmd_pkg_update(){
    ___x_cmd_pkg___which_p7zip - || return # Force Update
    pkg:info "Update the all.7z"
}
