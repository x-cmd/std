{
"add"
:
{
"-n|--dry-run"
:
"--- dry run"
,
"-v|--verbose"
:
"--- be verbose"
,
"-i|--interactive"
:
"--- interactive picking"
,
"-p|--patch"
:
"--- select hunks interactively"
,
"-e|--edit"
:
"--- edit current diff and apply"
,
"-f|--force"
:
"--- allow adding otherwise ignored files"
,
"-u|--update"
:
"--- update tracked files"
,
"--renormalize"
:
"--- EOL of tracked files "
,
"-N|--intent-to-add"
:
"--- record only the fact that the path will be added later"
,
"-A|--all"
:
"--- add changes from all tracked and untracked files"
,
"--ignore-removal"
:
"--- ignore paths removed in the working tree "
,
"--refresh"
:
"--- don't add, only refresh the index"
,
"--ignore-errors"
:
"--- just skip files which cannot be added because of errors"
,
"--ignore-missing"
:
"--- check if - even missing - files are ignored in dry run"
,
"--chmod"
:
"--- x        override the executable bit of the listed files"
,
"--pathspec-from-file"
:
"--- x        override the executable bit of the listed files"
,
"--pathspec-file-nul"
:
"--- NUL character"
,
"#desc"
:
"Add file contents to the index"
}
,
"am"
:
{
"#desc"
:
"Apply a series of patches from a mailbox"
}
,
"archive"
:
{
"--format"
:
"--- archive format"
,
"--prefix"
:
"--- prepend prefix to each pathname in the archive"
,
"-o|--output"
:
"--- write the archive to this file"
,
"--worktree-attributes"
:
"--- write the archive to this file"
,
"-v|--verbose"
:
"--- report archived files on stderr"
,
"-0"
:
"--- store only"
,
"-1"
:
"--- compress faster"
,
"-9"
:
"--- compress better"
,
"-l|--list"
:
"--- list supported archive formats"
,
"--remote"
:
"--- retrieve the archive from remote repository "
,
"--exec"
:
"--- path to the remote git-upload-archive command"
,
"#desc"
:
"Create an archive of files from a named tree"
}
,
"bisect"
:
{
"#desc"
:
"Use binary search to find the commit that introduced a bug"
}
,
"branch"
:
{
"#desc"
:
"List, create, or delete branches"
}
,
"bundle"
:
{
"-v|--verbose"
:
"--- be verbose; must be placed before a subcommand"
,
"#desc"
:
"Move objects and refs by archive"
}
,
"checkout"
:
{
"-b"
:
"--- create and checkout a new branch"
,
"-B"
:
"--- create/reset and checkout a branch"
,
"-l"
:
"--- create reflog for new branch"
,
"--guess"
:
"--- second guess 'git checkout default)"
,
"--overlay"
:
"--- use overlay mode "
,
"-q|--quiet"
:
"--- suppress progress reporting"
,
"--recurse-submodules"
:
"--- suppress progress reporting"
,
"--progress"
:
"--- force progress reporting"
,
"-m|--merge"
:
"--- perform a 3-way merge with the new branch"
,
"--conflict"
:
"--- conflict style "
,
"-d|--detach"
:
"--- HEAD at named commit"
,
"-t|--track"
:
"--- set upstream info for new branch"
,
"-f|--force"
:
"--- force checkout "
,
"--orphan"
:
"--- force checkout "
,
"--overwrite-ignore"
:
"--- update ignored files "
,
"--ignore-other-worktrees"
:
"--- update ignored files "
,
"-2|--ours"
:
"--- checkout our version for unmerged files"
,
"-3|--theirs"
:
"--- checkout their version for unmerged files"
,
"-p|--patch"
:
"--- select hunks interactively"
,
"--ignore-skip-worktree-bits"
:
"--- select hunks interactively"
,
"--pathspec-from-file"
:
"--- select hunks interactively"
,
"--pathspec-file-nul"
:
"--- NUL character"
,
"#desc"
:
"Switch branches or restore working tree files"
}
,
"cherry-pick"
:
{
"--quit"
:
"--- end revert or cherry-pick sequence"
,
"--continue"
:
"--- resume revert or cherry-pick sequence"
,
"--abort"
:
"--- cancel revert or cherry-pick sequence"
,
"--skip"
:
"--- skip current commit and continue"
,
"--cleanup"
:
"--- how to strip spaces and #comments from message"
,
"-n|--no-commit"
:
"--- don't automatically commit"
,
"-e|--edit"
:
"--- edit the commit message"
,
"-s|--signoff"
:
"--- Signed-off-by:"
,
"-m|--mainline"
:
"--- Signed-off-by:"
,
"--rerere-autoupdate"
:
"--- update the index with reused conflict resolution if possible"
,
"--strategy"
:
"--- update the index with reused conflict resolution if possible"
,
"-X|--strategy-option"
:
"--- update the index with reused conflict resolution if possible"
,
"-S|--gpg-sign"
:
"--- update the index with reused conflict resolution if possible"
,
"-x"
:
"--- append commit name"
,
"--ff"
:
"--- allow fast-forward"
,
"--allow-empty"
:
"--- preserve initially empty commits"
,
"--allow-empty-message"
:
"--- preserve initially empty commits"
,
"--keep-redundant-commits"
:
"--- preserve initially empty commits"
,
"#desc"
:
"Apply the changes introduced by some existing commits"
}
,
"citool"
:
{
"#desc"
:
"Graphical alternative to git-commit"
}
,
"clean"
:
{
"-q|--quiet"
:
"--- do not print names of files removed"
,
"-n|--dry-run"
:
"--- dry run"
,
"-f|--force"
:
"--- force"
,
"-i|--interactive"
:
"--- interactive cleaning"
,
"-d"
:
"--- remove whole directories"
,
"-e|--exclude"
:
"--- remove whole directories"
,
"-x"
:
"--- remove ignored files, too"
,
"-X"
:
"--- remove only ignored files"
,
"#desc"
:
"Remove untracked files from the working tree"
}
,
"commit"
:
{
"#desc"
:
"Record changes to the repository"
}
,
"describe"
:
{
"--contains"
:
"--- find the tag that comes after the commit"
,
"--debug"
:
"--- debug search strategy on stderr"
,
"--all"
:
"--- use any ref"
,
"--tags"
:
"--- use any tag, even unannotated"
,
"--long"
:
"--- always use long format"
,
"--first-parent"
:
"--- only follow first parent"
,
"--abbrev[=gits"
:
"--- SHA-1s"
,
"--exact-match"
:
"--- only output exact matches"
,
"--candidates"
:
"--- st recent tags "
,
"--match"
:
"--- only consider tags matching "
,
"--exclude"
:
"--- do not consider tags matching "
,
"--always"
:
"--- show abbreviated commit object as fallback"
,
"--dirty[="
:
"--- dirty working tree "
,
"--broken[="
:
"--- broken working tree "
,
"#desc"
:
"Give an object a human readable name based on an available ref"
}
,
"diff"
:
{
"#desc"
:
"Show changes between commits, commit and working tree, etc"
}
,
"fetch"
:
{
"-v|--verbose"
:
"--- be more verbose"
,
"-q|--quiet"
:
"--- be more quiet"
,
"--all"
:
"--- fetch from all remotes"
,
"--set-upstream"
:
"--- set upstream for git pull/fetch"
,
"-a|--append"
:
"--- append to .git/FETCH_HEAD instead of overwriting"
,
"--upload-pack"
:
"--- ath to upload pack on remote end"
,
"-f|--force"
:
"--- force overwrite of local reference"
,
"-m|--multiple"
:
"--- fetch from multiple remotes"
,
"-t|--tags"
:
"--- fetch all tags and associated objects"
,
"-n"
:
"--- do not fetch all tags "
,
"-j|--jobs"
:
"--- number of submodules fetched in parallel"
,
"-p|--prune"
:
"--- prune remote-tracking branches no longer on remote"
,
"-P|--prune-tags"
:
"--- prune local tags no longer on remote and clobber changed tags"
,
"--recurse-submodules"
:
"--- prune local tags no longer on remote and clobber changed tags"
,
"--dry-run"
:
"--- dry run"
,
"-k|--keep"
:
"--- keep downloaded pack"
,
"-u|--update-head-ok"
:
"--- HEAD ref"
,
"--progress"
:
"--- force progress reporting"
,
"--depth"
:
"--- deepen history of shallow clone"
,
"--shallow-since"
:
"--- deepen history of shallow clone"
,
"--shallow-exclude"
:
"--- deepen history of shallow clone"
,
"--deepen"
:
"--- deepen history of shallow clone"
,
"--unshallow"
:
"--- convert to a complete repository"
,
"--update-shallow"
:
"--- accept refs that update .git/shallow"
,
"--refmap"
:
"--- specify fetch refmap"
,
"-o|--server-option"
:
"--- specify fetch refmap"
,
"-4|--ipv4"
:
"--- IPv4 addresses only"
,
"-6|--ipv6"
:
"--- IPv6 addresses only"
,
"--negotiation-tip"
:
"--- IPv6 addresses only"
,
"--filter"
:
"--- object filtering"
,
"--auto-gc"
:
"--- run 'gc --auto' after fetching"
,
"--show-forced-updates"
:
"--- run 'gc --auto' after fetching"
,
"--write-commit-graph"
:
"--- write the commit-graph after fetching"
,
"#desc"
:
"Download objects and refs from another repository"
}
,
"format-patch"
:
{
"-n|--numbered"
:
"--- use  even with a single patch"
,
"-N|--no-numbered"
:
"--- use  even with multiple patches"
,
"-s|--signoff"
:
"--- Signed-off-by:"
,
"--stdout"
:
"--- print patches to standard out"
,
"--cover-letter"
:
"--- generate a cover letter"
,
"--numbered-files"
:
"--- use simple number sequence for output file names"
,
"--suffix"
:
"--- stead of '.patch'"
,
"--start-number"
:
"--- stead of 1"
,
"-v|--reroll-count"
:
"--- stead of 1"
,
"--rfc"
:
"--- Use "
,
"--cover-from-description"
:
"--- Use "
,
"--subject-prefix"
:
"--- Use "
,
"-o|--output-directory"
:
"--- Use "
,
"-k|--keep-subject"
:
"--- don't strip/add "
,
"--no-binary"
:
"--- don't output binary diffs"
,
"--zero-commit"
:
"--- From header"
,
"--ignore-if-in-upstream"
:
"--- From header"
,
"-p|--no-stat"
:
"--- show patch format instead of default "
,
"--add-header"
:
"--- show patch format instead of default "
,
"--to"
:
"--- To: header"
,
"--cc"
:
"--- Cc: header"
,
"--from[=r"
:
"--- committer ident if absent)"
,
"--in-reply-to"
:
"--- committer ident if absent)"
,
"--attach"
:
"--- committer ident if absent)"
,
"--inline"
:
"--- committer ident if absent)"
,
"--thread[="
:
"--- enable message threading, styles: shallow, deep"
,
"--signature"
:
"--- enable message threading, styles: shallow, deep"
,
"--base"
:
"--- dd prerequisite tree info to the patch series"
,
"--signature-file"
:
"--- dd prerequisite tree info to the patch series"
,
"-q|--quiet"
:
"--- don't print the patch filenames"
,
"--progress"
:
"--- show progress while generating patches"
,
"--interdiff"
:
"--- cover letter or single patch"
,
"--range-diff"
:
"--- cover letter or single patch"
,
"--creation-factor"
:
"--- cover letter or single patch"
,
"#desc"
:
"Prepare patches for e-mail submission"
}
,
"gc"
:
{
"#desc"
:
"Cleanup unnecessary files and optimize the local repository"
}
,
"gitk"
:
{
"#desc"
:
"The Git repository browser"
}
,
"grep"
:
{
"--cached"
:
"--- search in index instead of in the work tree"
,
"--no-index"
:
"--- find in contents not managed by git"
,
"--untracked"
:
"--- search in both tracked and untracked files"
,
"--exclude-standard"
:
"--- ignore files specified via '.gitignore'"
,
"--recurse-submodules"
:
"--- recursively search in each submodule"
,
"-v|--invert-match"
:
"--- show non-matching lines"
,
"-i|--ignore-case"
:
"--- case insensitive matching"
,
"-w|--word-regexp"
:
"--- match patterns only at word boundaries"
,
"-a|--text"
:
"--- process binary files as text"
,
"-I"
:
"--- don't match patterns in binary files"
,
"--textconv"
:
"--- process binary files with textconv filters"
,
"-r|--recursive"
:
"--- search in subdirectories "
,
"--max-depth"
:
"--- vels"
,
"-E|--extended-regexp"
:
"--- vels"
,
"-G|--basic-regexp"
:
"--- POSIX regular expressions "
,
"-F|--fixed-strings"
:
"--- interpret patterns as fixed strings"
,
"-P|--perl-regexp"
:
"--- Perl-compatible regular expressions"
,
"-n|--line-number"
:
"--- show line numbers"
,
"--column"
:
"--- show column number of first match"
,
"-h"
:
"--- don't show filenames"
,
"-H"
:
"--- show filenames"
,
"--full-name"
:
"--- show filenames relative to top directory"
,
"-l|--files-with-matches"
:
"--- show filenames relative to top directory"
,
"--name-only"
:
"--- synonym for --files-with-matches"
,
"-L|--files-without-match"
:
"--- synonym for --files-with-matches"
,
"-z|--null"
:
"--- NUL after filenames"
,
"-o|--only-matching"
:
"--- show only matching parts of a line"
,
"-c|--count"
:
"--- show the number of matches instead of matching lines"
,
"--color[="
:
"--- highlight matches"
,
"--break"
:
"--- print empty line between matches from different files"
,
"--heading"
:
"--- show filename only once above matches from same file"
,
"-C|--context"
:
"--- ntext lines before and after matches"
,
"-B|--before-context"
:
"--- ntext lines before and after matches"
,
"-A|--after-context"
:
"--- ntext lines before and after matches"
,
"--threads"
:
"--- rker threads"
,
"-NUM"
:
"--- NUM"
,
"-p|--show-function"
:
"--- show a line with the function name before matches"
,
"-W|--function-context"
:
"--- show a line with the function name before matches"
,
"-f"
:
"--- read patterns from file"
,
"-e"
:
"--- match "
,
"--and"
:
"--- combine patterns specified with -e"
,
"--or"
:
"--- combine patterns specified with -e"
,
"--not"
:
"--- combine patterns specified with -e"
,
"-q|--quiet"
:
"--- indicate hit with exit status without output"
,
"--all-match"
:
"--- show only matches from files that match all patterns"
,
"-O|--open-files-in-pager"
:
"--- show only matches from files that match all patterns"
,
"--ext-grep"
:
"--- allow calling of grep"
,
"#desc"
:
"Print lines matching a pattern"
}
,
"gui"
:
{
"#desc"
:
"A portable graphical interface to Git"
}
,
"init"
:
{
"--template"
:
""
,
"--bare"
:
"--- create a bare repository"
,
"--shared"
:
"--- create a bare repository"
,
"-q|--quiet"
:
"--- be quiet"
,
"--separate-git-dir"
:
"--- be quiet"
,
"#desc"
:
"Create an empty Git repository or reinitialize an existing one"
}
,
"log"
:
{
"-q|--quiet"
:
"--- suppress diff output"
,
"--source"
:
"--- show source"
,
"--use-mailmap"
:
"--- Use mail map file"
,
"--decorate-refs"
:
"--- Use mail map file"
,
"--decorate-refs-exclude"
:
"--- Use mail map file"
,
"--decorate"
:
"--- decorate options"
,
"-L"
:
"--- Process line range n,m in file, counting from 1"
,
"#desc"
:
"Show commit logs"
}
,
"merge"
:
{
"#desc"
:
"Join two or more development histories together"
}
,
"mv"
:
{
"-v|--verbose"
:
"--- be verbose"
,
"-n|--dry-run"
:
"--- dry run"
,
"-f|--force"
:
"--- force move/rename even if target exists"
,
"-k"
:
"--- skip move/rename errors"
,
"#desc"
:
"Move or rename a file, a directory, or a symlink"
}
,
"notes"
:
{
"--ref"
:
"--- use notes from "
,
"#desc"
:
"Add or inspect object notes"
}
,
"pull"
:
{
"-v|--verbose"
:
"--- be more verbose"
,
"-q|--quiet"
:
"--- be more quiet"
,
"--progress"
:
"--- force progress reporting"
,
"--recurse-submodules"
:
"--- force progress reporting"
,
"-r|--rebase"
:
"--- force progress reporting"
,
"-n"
:
"--- do not show a diffstat at the end of the merge"
,
"--stat"
:
"--- show a diffstat at the end of the merge"
,
"--log[=ntries"
:
"--- from shortlog to merge commit message"
,
"--signoff"
:
"--- Signed-off-by:"
,
"--squash"
:
"--- create a single commit instead of doing a merge"
,
"--commit"
:
"--- perform a commit if the merge succeeds "
,
"--edit"
:
"--- edit message before committing"
,
"--cleanup"
:
"--- how to strip spaces and #comments from message"
,
"--ff"
:
"--- allow fast-forward"
,
"--ff-only"
:
"--- abort if fast-forward is not possible"
,
"--verify-signatures"
:
"--- GPG signature"
,
"--autostash"
:
"--- automatically stash/stash pop before and after rebase"
,
"-s|--strategy"
:
"--- automatically stash/stash pop before and after rebase"
,
"-X|--strategy-option"
:
"--- automatically stash/stash pop before and after rebase"
,
"-S|--gpg-sign"
:
"--- automatically stash/stash pop before and after rebase"
,
"--allow-unrelated-histories"
:
"--- automatically stash/stash pop before and after rebase"
,
"--all"
:
"--- fetch from all remotes"
,
"-a|--append"
:
"--- append to .git/FETCH_HEAD instead of overwriting"
,
"--upload-pack"
:
"--- ath to upload pack on remote end"
,
"-f|--force"
:
"--- force overwrite of local branch"
,
"-t|--tags"
:
"--- fetch all tags and associated objects"
,
"-p|--prune"
:
"--- prune remote-tracking branches no longer on remote"
,
"-j|--jobs[="
:
"--- number of submodules pulled in parallel"
,
"--dry-run"
:
"--- dry run"
,
"-k|--keep"
:
"--- keep downloaded pack"
,
"--depth"
:
"--- deepen history of shallow clone"
,
"--unshallow"
:
"--- convert to a complete repository"
,
"--update-shallow"
:
"--- accept refs that update .git/shallow"
,
"--refmap"
:
"--- specify fetch refmap"
,
"-4|--ipv4"
:
"--- IPv4 addresses only"
,
"-6|--ipv6"
:
"--- IPv6 addresses only"
,
"--show-forced-updates"
:
"--- IPv6 addresses only"
,
"--set-upstream"
:
"--- set upstream for git pull/fetch"
,
"#desc"
:
"Fetch from and integrate with another repository or a local branch"
}
,
"push"
:
{
"-v|--verbose"
:
"--- be more verbose"
,
"-q|--quiet"
:
"--- be more quiet"
,
"--repo"
:
"--- repository"
,
"--all"
:
"--- push all refs"
,
"--mirror"
:
"--- mirror all refs"
,
"-d|--delete"
:
"--- delete refs"
,
"--tags"
:
"--- push tags "
,
"-n|--dry-run"
:
"--- dry run"
,
"--porcelain"
:
"--- machine-readable output"
,
"-f|--force"
:
"--- force updates"
,
"--force-with-lease"
:
"--- force updates"
,
"--recurse-submodules"
:
"--- force updates"
,
"--thin"
:
"--- use thin pack"
,
"--receive-pack"
:
"--- use thin pack"
,
"--exec"
:
"--- use thin pack"
,
"-u|--set-upstream"
:
"--- set upstream for git pull/status"
,
"--progress"
:
"--- force progress reporting"
,
"--prune"
:
"--- prune locally removed refs"
,
"--no-verify"
:
"--- bypass pre-push hook"
,
"--follow-tags"
:
"--- push missing but relevant tags"
,
"--signed"
:
"--- push missing but relevant tags"
,
"--atomic"
:
"--- request atomic transaction on remote side"
,
"-o|--push-option"
:
"--- request atomic transaction on remote side"
,
"-4|--ipv4"
:
"--- IPv4 addresses only"
,
"-6|--ipv6"
:
"--- IPv6 addresses only"
,
"#desc"
:
"Update remote refs along with associated objects"
}
,
"rebase"
:
{
"#desc"
:
"Reapply commits on top of another base tip"
}
,
"reset"
:
{
"-q|--quiet"
:
"--- be quiet, only report errors"
,
"--mixed"
:
"--- HEAD and index"
,
"--soft"
:
"--- HEAD"
,
"--hard"
:
"--- HEAD, index and working tree"
,
"--merge"
:
"--- HEAD, index and working tree"
,
"--keep"
:
"--- HEAD but keep local changes"
,
"--recurse-submodules"
:
"--- HEAD but keep local changes"
,
"-p|--patch"
:
"--- select hunks interactively"
,
"-N|--intent-to-add"
:
"--- record only the fact that removed paths will be added later"
,
"--pathspec-from-file"
:
"--- record only the fact that removed paths will be added later"
,
"--pathspec-file-nul"
:
"--- NUL character"
,
"#desc"
:
"Reset current HEAD to the specified state"
}
,
"restore"
:
{
"-s|--source"
:
""
,
"-S|--staged"
:
"--- restore the index"
,
"-W|--worktree"
:
"--- restore the working tree "
,
"--ignore-unmerged"
:
"--- ignore unmerged entries"
,
"--overlay"
:
"--- use overlay mode"
,
"-q|--quiet"
:
"--- suppress progress reporting"
,
"--recurse-submodules"
:
"--- suppress progress reporting"
,
"--progress"
:
"--- force progress reporting"
,
"-m|--merge"
:
"--- perform a 3-way merge with the new branch"
,
"--conflict"
:
"--- conflict style "
,
"-2|--ours"
:
"--- checkout our version for unmerged files"
,
"-3|--theirs"
:
"--- checkout their version for unmerged files"
,
"-p|--patch"
:
"--- select hunks interactively"
,
"--ignore-skip-worktree-bits"
:
"--- select hunks interactively"
,
"--pathspec-from-file"
:
"--- select hunks interactively"
,
"--pathspec-file-nul"
:
"--- NUL character"
,
"#desc"
:
"Restore working tree files"
}
,
"revert"
:
{
"--quit"
:
"--- end revert or cherry-pick sequence"
,
"--continue"
:
"--- resume revert or cherry-pick sequence"
,
"--abort"
:
"--- cancel revert or cherry-pick sequence"
,
"--skip"
:
"--- skip current commit and continue"
,
"--cleanup"
:
"--- how to strip spaces and #comments from message"
,
"-n|--no-commit"
:
"--- don't automatically commit"
,
"-e|--edit"
:
"--- edit the commit message"
,
"-s|--signoff"
:
"--- Signed-off-by:"
,
"-m|--mainline"
:
"--- Signed-off-by:"
,
"--rerere-autoupdate"
:
"--- update the index with reused conflict resolution if possible"
,
"--strategy"
:
"--- update the index with reused conflict resolution if possible"
,
"-X|--strategy-option"
:
"--- update the index with reused conflict resolution if possible"
,
"-S|--gpg-sign"
:
"--- update the index with reused conflict resolution if possible"
,
"#desc"
:
"Revert some existing commits"
}
,
"rm"
:
{
"-n|--dry-run"
:
"--- dry run"
,
"-q|--quiet"
:
"--- do not list removed files"
,
"--cached"
:
"--- only remove from the index"
,
"-f|--force"
:
"--- override the up-to-date check"
,
"-r"
:
"--- allow recursive removal"
,
"--ignore-unmatch"
:
"--- exit with a zero status even if nothing matched"
,
"#desc"
:
"Remove files from the working tree and from the index"
}
,
"shortlog"
:
{
"-c|--committer"
:
"--- Group by committer rather than author"
,
"-n|--numbered"
:
"--- sort output according to the number of commits per author"
,
"-s|--summary"
:
"--- Suppress commit descriptions, only provides commit count"
,
"-e|--email"
:
"--- Show the email address of each author"
,
"-w["
:
"--- Show the email address of each author"
,
"#desc"
:
"Summarize 'git log' output"
}
,
"show"
:
{
"-q|--quiet"
:
"--- suppress diff output"
,
"--source"
:
"--- show source"
,
"--use-mailmap"
:
"--- Use mail map file"
,
"--decorate-refs"
:
"--- Use mail map file"
,
"--decorate-refs-exclude"
:
"--- Use mail map file"
,
"--decorate"
:
"--- decorate options"
,
"-L"
:
"--- Process line range n,m in file, counting from 1"
,
"#desc"
:
"Show various types of objects"
}
,
"sparse-checkout"
:
{
"#desc"
:
"Initialize and modify the sparse-checkout"
}
,
"stash"
:
{
"#desc"
:
"Stash the changes in a dirty working directory away"
}
,
"status"
:
{
"#desc"
:
"Show the working tree status"
}
,
"submodule"
:
{
"#desc"
:
"Initialize, update or inspect submodules"
}
,
"switch"
:
{
"-c|--create"
:
""
,
"-C|--force-create"
:
""
,
"--guess"
:
"--- second guess 'git switch '"
,
"--discard-changes"
:
"--- throw away local modifications"
,
"-q|--quiet"
:
"--- suppress progress reporting"
,
"--recurse-submodules"
:
"--- suppress progress reporting"
,
"--progress"
:
"--- force progress reporting"
,
"-m|--merge"
:
"--- perform a 3-way merge with the new branch"
,
"--conflict"
:
"--- conflict style "
,
"-d|--detach"
:
"--- HEAD at named commit"
,
"-t|--track"
:
"--- set upstream info for new branch"
,
"-f|--force"
:
"--- force checkout "
,
"--orphan"
:
"--- force checkout "
,
"--overwrite-ignore"
:
"--- update ignored files "
,
"--ignore-other-worktrees"
:
"--- update ignored files "
,
"#desc"
:
"Switch branches"
}
,
"tag"
:
{
"-l|--list"
:
"--- list tag names"
,
"-n[nes"
:
"--- of each tag message"
,
"-d|--delete"
:
"--- delete tags"
,
"-v|--verify"
:
"--- verify tags"
,
"-a|--annotate"
:
"--- annotated tag, needs a message"
,
"-m|--message"
:
"--- annotated tag, needs a message"
,
"-F|--file"
:
"--- read message from file"
,
"-e|--edit"
:
"--- force edit of tag message"
,
"-s|--sign"
:
"--- GPG-signed tag"
,
"--cleanup"
:
"--- how to strip spaces and #comments from message"
,
"-u|--local-user"
:
"--- how to strip spaces and #comments from message"
,
"-f|--force"
:
"--- replace the tag if exists"
,
"--create-reflog"
:
"--- create a reflog"
,
"--column[="
:
"--- show tag list in columns"
,
"--contains"
:
"--- print only tags that contain the commit"
,
"--no-contains"
:
"--- print only tags that contain the commit"
,
"--merged"
:
"--- print only tags that are merged"
,
"--no-merged"
:
"--- rint only tags that are not merged"
,
"--sort"
:
"--- field name to sort on"
,
"--points-at"
:
"--- rint only tags of the object"
,
"--format"
:
"--- format to use for the output"
,
"--color[="
:
"--- respect format colors"
,
"-i|--ignore-case"
:
"--- sorting and filtering are case insensitive"
,
"#desc"
:
"Create, list, delete or verify a tag object signed with GPG"
}
,
"worktree"
:
{
"#desc"
:
"Manage multiple working trees"
}
,
"config"
:
{
"--global"
:
"--- use global config file"
,
"--system"
:
"--- use system config file"
,
"--local"
:
"--- use repository config file"
,
"--worktree"
:
"--- use per-worktree config file"
,
"-f|--file"
:
"--- use given config file"
,
"--blob"
:
"--- read config from given blob object"
,
"--get"
:
"--- get value: name "
,
"--get-all"
:
"--- get all values: key "
,
"--get-regexp"
:
"--- get values for regexp: name-regex "
,
"--get-urlmatch"
:
"--- URL: section URL"
,
"--replace-all"
:
"--- replace all matching variables: name value "
,
"--add"
:
"--- add a new variable: name value"
,
"--unset"
:
"--- remove a variable: name "
,
"--unset-all"
:
"--- remove all matches: name "
,
"--rename-section"
:
"--- rename section: old-name new-name"
,
"--remove-section"
:
"--- remove a section: name"
,
"-l|--list"
:
"--- list all"
,
"-e|--edit"
:
"--- open an editor"
,
"--get-color"
:
"--- find the color configured: slot "
,
"--get-colorbool"
:
"--- find the color setting: slot "
,
"-t|--type"
:
"--- value is given this type"
,
"--bool"
:
"--- value is \"true\" or \"false \""
,
"--int"
:
"--- value is decimal number"
,
"--bool-or-int"
:
"--- value is --bool or --int"
,
"--path"
:
"--- value is a path "
,
"--expiry-date"
:
"--- value is an expiry date"
,
"-z|--null"
:
"--- NUL byte"
,
"--name-only"
:
"--- show variable names only"
,
"--includes"
:
"--- respect include directives on lookup"
,
"--show-origin"
:
"--- show origin of config "
,
"--default"
:
"--- with --get, use default value when missing entry"
,
"#desc"
:
"Get and set repository or global options"
}
,
"fast-export"
:
{
"--progress"
:
"--- jects"
,
"--signed-tags"
:
"--- elect handling of signed tags"
,
"--tag-of-filtered-object"
:
"--- elect handling of signed tags"
,
"--reencode"
:
"--- select handling of commit messages in an alternate encoding"
,
"--export-marks"
:
"--- select handling of commit messages in an alternate encoding"
,
"--import-marks"
:
"--- select handling of commit messages in an alternate encoding"
,
"--import-marks-if-exists"
:
"--- select handling of commit messages in an alternate encoding"
,
"--fake-missing-tagger"
:
"--- select handling of commit messages in an alternate encoding"
,
"--full-tree"
:
"--- Output full tree for each commit"
,
"--use-done-feature"
:
"--- Use the done feature to terminate the stream"
,
"--no-data"
:
"--- Skip output of blob data"
,
"--refspec"
:
"--- Apply refspec to exported refs"
,
"--anonymize"
:
"--- anonymize output"
,
"--reference-excluded-parents"
:
"--- anonymize output"
,
"--show-original-ids"
:
"--- Show original object ids of blobs/commits"
,
"--mark-tags"
:
"--- Label tags with mark ids"
,
"#desc"
:
"Git data exporter"
}
,
"fast-import"
:
{
"#desc"
:
"Backend for fast Git data importers"
}
,
"mergetool"
:
{
"#desc"
:
"Run merge conflict resolution tools to resolve merge conflicts"
}
,
"pack-refs"
:
{
"--all"
:
"--- pack everything"
,
"--prune"
:
"--- prune loose refs "
,
"#desc"
:
"Pack heads and tags for efficient repository access"
}
,
"prune"
:
{
"-n|--dry-run"
:
"--- do not remove, show only"
,
"-v|--verbose"
:
"--- report pruned objects"
,
"--progress"
:
"--- show progress"
,
"--expire"
:
"--- show progress"
,
"--exclude-promisor-objects"
:
"--- show progress"
,
"#desc"
:
"Prune all unreachable objects from the object database"
}
,
"reflog"
:
{
"#desc"
:
"Manage reflog information"
}
,
"remote"
:
{
"-v|--verbose"
:
"--- be verbose; must be placed before a subcommand"
,
"#desc"
:
"Manage set of tracked repositories"
}
,
"repack"
:
{
"-a"
:
"--- pack everything in a single pack"
,
"-A"
:
"--- same as -a, and turn unreachable objects loose"
,
"-d"
:
"--- remove redundant packs, and run git-prune-packed"
,
"-f"
:
"--- pass --no-reuse-delta to git-pack-objects"
,
"-F"
:
"--- pass --no-reuse-object to git-pack-objects"
,
"-n"
:
"--- do not run git-update-server-info"
,
"-q|--quiet"
:
"--- be quiet"
,
"-l|--local"
:
"--- pass --local to git-pack-objects"
,
"-b|--write-bitmap-index"
:
"--- pass --local to git-pack-objects"
,
"-i|--delta-islands"
:
"--- pass --delta-islands to git-pack-objects"
,
"--unpack-unreachable"
:
"--- pass --delta-islands to git-pack-objects"
,
"-k|--keep-unreachable"
:
"--- pass --delta-islands to git-pack-objects"
,
"--window"
:
"--- size of the window used for delta compression"
,
"--window-memory"
:
"--- size of the window used for delta compression"
,
"--depth"
:
"--- limits the maximum delta depth"
,
"--threads"
:
"--- limits the maximum number of threads"
,
"--max-pack-size"
:
"--- limits the maximum number of threads"
,
"--pack-kept-objects"
:
"--- repack objects in packs marked with .keep"
,
"--keep-pack"
:
"--- do not repack this pack"
,
"#desc"
:
"Pack unpacked objects in a repository"
}
,
"replace"
:
{
"-l|--list"
:
"--- list replace refs"
,
"-d|--delete"
:
"--- delete replace refs"
,
"-e|--edit"
:
"--- edit existing object"
,
"-g|--graft"
:
"--- change a commit's parents"
,
"--convert-graft-file"
:
"--- convert existing graft file"
,
"-f|--force"
:
"--- replace the ref if it exists"
,
"--raw"
:
"--- do not pretty-print contents for --edit"
,
"--format"
:
"--- use this format"
,
"#desc"
:
"Create, list, delete refs to replace objects"
}
,
"annotate"
:
{
"--incremental"
:
"--- Show blame entries as we find them, incrementally"
,
"-b"
:
"--- Show blank SHA-1 for boundary commits "
,
"--root"
:
"--- Do not treat root commits as boundaries "
,
"--show-stats"
:
"--- Show work cost statistics"
,
"--progress"
:
"--- Force progress reporting"
,
"--score-debug"
:
"--- Show output score for blame entries"
,
"-f|--show-name"
:
"--- Show original filename "
,
"-n|--show-number"
:
"--- Show original linenumber "
,
"-p|--porcelain"
:
"--- Show in a format designed for machine consumption"
,
"--line-porcelain"
:
"--- Show porcelain format with per-line commit information"
,
"-c"
:
"--- Use the same output mode as git-annotate "
,
"-t"
:
"--- Show raw timestamp "
,
"-l"
:
"--- Show long commit SHA1 "
,
"-s"
:
"--- Suppress author name and timestamp "
,
"-e|--show-email"
:
"--- Show author email instead of name "
,
"-w"
:
"--- Ignore whitespace differences"
,
"--ignore-rev"
:
"--- en blaming"
,
"--ignore-revs-file"
:
"--- en blaming"
,
"--color-lines"
:
"--- color redundant metadata from previous line differently"
,
"--color-by-age"
:
"--- color lines by age"
,
"--minimal"
:
"--- Spend extra cycles to find better match"
,
"-S"
:
"--- stead of calling git-rev-list"
,
"--contents"
:
"--- contents as the final image"
,
"-C["
:
"--- Find line copies within and across files"
,
"-M["
:
"--- Find line movements within and across files"
,
"-L"
:
"--- Process only line range n,m, counting from 1"
,
"--abbrev[=gits"
:
"--- SHA-1s"
,
"#desc"
:
"Annotate file lines with commit information"
}
,
"blame"
:
{
"--incremental"
:
"--- Show blame entries as we find them, incrementally"
,
"-b"
:
"--- Show blank SHA-1 for boundary commits "
,
"--root"
:
"--- Do not treat root commits as boundaries "
,
"--show-stats"
:
"--- Show work cost statistics"
,
"--progress"
:
"--- Force progress reporting"
,
"--score-debug"
:
"--- Show output score for blame entries"
,
"-f|--show-name"
:
"--- Show original filename "
,
"-n|--show-number"
:
"--- Show original linenumber "
,
"-p|--porcelain"
:
"--- Show in a format designed for machine consumption"
,
"--line-porcelain"
:
"--- Show porcelain format with per-line commit information"
,
"-c"
:
"--- Use the same output mode as git-annotate "
,
"-t"
:
"--- Show raw timestamp "
,
"-l"
:
"--- Show long commit SHA1 "
,
"-s"
:
"--- Suppress author name and timestamp "
,
"-e|--show-email"
:
"--- Show author email instead of name "
,
"-w"
:
"--- Ignore whitespace differences"
,
"--ignore-rev"
:
"--- en blaming"
,
"--ignore-revs-file"
:
"--- en blaming"
,
"--color-lines"
:
"--- color redundant metadata from previous line differently"
,
"--color-by-age"
:
"--- color lines by age"
,
"--minimal"
:
"--- Spend extra cycles to find better match"
,
"-S"
:
"--- stead of calling git-rev-list"
,
"--contents"
:
"--- contents as the final image"
,
"-C["
:
"--- Find line copies within and across files"
,
"-M["
:
"--- Find line movements within and across files"
,
"-L"
:
"--- Process only line range n,m, counting from 1"
,
"--abbrev[=gits"
:
"--- SHA-1s"
,
"#desc"
:
"Show what revision and author last modified each line of a file"
}
,
"count-objects"
:
{
"-v|--verbose"
:
"--- be verbose"
,
"-H|--human-readable"
:
"--- print sizes in human readable format"
,
"#desc"
:
"Count unpacked number of objects and their disk consumption"
}
,
"difftool"
:
{
"-g|--gui"
:
"--- use `diff.guitool` instead of `diff.tool`"
,
"-d|--dir-diff"
:
"--- perform a full-directory diff"
,
"-y|--no-prompt"
:
"--- do not prompt before launching a diff tool"
,
"--symlinks"
:
"--- use symlinks in dir-diff mode"
,
"-t|--tool"
:
"--- use the specified diff tool"
,
"--tool-help"
:
"--- print a list of diff tools that may be used with `--tool`"
,
"--trust-exit-code"
:
"--- make 'git-difftool' exit when an invoked diff tool returns a non - zero exit code"
,
"-x|--extcmd"
:
"--- make 'git-difftool' exit when an invoked diff tool returns a non - zero exit code"
,
"--no-index"
:
"--- passed to `diff`"
,
"#desc"
:
"Show changes using common diff tools"
}
,
"fsck"
:
{
"-v|--verbose"
:
"--- be verbose"
,
"--unreachable"
:
"--- show unreachable objects"
,
"--dangling"
:
"--- show dangling objects"
,
"--tags"
:
"--- report tags"
,
"--root"
:
"--- report root nodes"
,
"--cache"
:
"--- make index objects head nodes"
,
"--reflogs"
:
"--- make reflogs head nodes "
,
"--full"
:
"--- also consider packs and alternate objects"
,
"--connectivity-only"
:
"--- check only connectivity"
,
"--strict"
:
"--- enable more strict checking"
,
"--lost-found"
:
"--- write dangling objects in .git/lost-found"
,
"--progress"
:
"--- show progress"
,
"--name-objects"
:
"--- show verbose names for reachable objects"
,
"#desc"
:
"Verifies the connectivity and validity of the objects in the database"
}
,
"gitweb"
:
{
"#desc"
:
"Git web interface "
}
,
"help"
:
{
"-a|--all"
:
"--- print all available commands"
,
"-g|--guides"
:
"--- print list of useful guides"
,
"-c|--config"
:
"--- print all configuration variable names"
,
"-m|--man"
:
"--- show man page"
,
"-w|--web"
:
"--- show manual in web browser"
,
"-i|--info"
:
"--- show info page"
,
"-v|--verbose"
:
"--- print command description"
,
"#desc"
:
"Display help information about Git"
}
,
"instaweb"
:
{
"-l|--local"
:
"--- only bind on 127.0.0.1"
,
"-p|--port"
:
"--- the port to bind to"
,
"-d|--httpd"
:
"--- the command to launch"
,
"-b|--browser"
:
"--- the browser to launch"
,
"-m|--module-path"
:
"--- the browser to launch"
,
"--stop"
:
"--- stop the web server"
,
"--start"
:
"--- start the web server"
,
"--restart"
:
"--- restart the web server"
,
"#desc"
:
"Instantly browse your working repository in gitweb"
}
,
"merge-tree"
:
{
"#desc"
:
"Show three-way merge without touching index"
}
,
"rerere"
:
{
"--rerere-autoupdate"
:
"--- register clean resolutions in index"
,
"#desc"
:
"Reuse recorded resolution of conflicted merges"
}
,
"show-branch"
:
{
"-a|--all"
:
"--- show remote-tracking and local branches"
,
"-r|--remotes"
:
"--- show remote-tracking branches"
,
"--color[="
:
"--- color '*!+-' corresponding to the branch"
,
"--more[=re"
:
"--- commits after the common ancestor"
,
"--list"
:
"--- synonym to more=-1"
,
"--no-name"
:
"--- suppress naming strings"
,
"--current"
:
"--- include the current branch"
,
"--sha1-name"
:
"--- name commits with their object names"
,
"--merge-base"
:
"--- show possible merge bases"
,
"--independent"
:
"--- show refs unreachable from any other ref"
,
"--topo-order"
:
"--- show commits in topological order"
,
"--topics"
:
"--- show only commits not on the first branch"
,
"--sparse"
:
"--- show merges reachable from only one tip"
,
"--date-order"
:
"--- topologically sort, maintaining date order where possible"
,
"-g|--reflog"
:
"--- topologically sort, maintaining date order where possible"
,
"#desc"
:
"Show branches and their commits"
}
,
"verify-commit"
:
{
"-v|--verbose"
:
"--- print commit contents"
,
"--raw"
:
"--- print raw gpg status output"
,
"#desc"
:
"Check the GPG signature of commits"
}
,
"verify-tag"
:
{
"-v|--verbose"
:
"--- print tag contents"
,
"--raw"
:
"--- print raw gpg status output"
,
"--format"
:
"--- format to use for the output"
,
"#desc"
:
"Check the GPG signature of tags"
}
,
"whatchanged"
:
{
"-q|--quiet"
:
"--- suppress diff output"
,
"--source"
:
"--- show source"
,
"--use-mailmap"
:
"--- Use mail map file"
,
"--decorate-refs"
:
"--- Use mail map file"
,
"--decorate-refs-exclude"
:
"--- Use mail map file"
,
"--decorate"
:
"--- decorate options"
,
"-L"
:
"--- Process line range n,m in file, counting from 1"
,
"#desc"
:
"Show logs with difference each commit introduces"
}
,
"cvsexportcommit"
:
{
"#desc"
:
"Export a single commit to a CVS checkout"
}
,
"cvsimport"
:
{
"#desc"
:
"Salvage your data out of another SCM people love to hate"
}
,
"cvsserver"
:
{
"#desc"
:
"A CVS server emulator for Git"
}
,
"imap-send"
:
{
"-v|--verbose"
:
"--- be more verbose"
,
"-q|--quiet"
:
"--- be more quiet"
,
"--curl"
:
"--- IMAP server"
,
"#desc"
:
"Send a collection of patches from stdin to an IMAP folder"
}
,
"p4"
:
{
"#desc"
:
"Import from and submit to Perforce repositories"
}
,
"quiltimport"
:
{
"-n|--dry-run"
:
"--- dry run"
,
"--author"
:
"--- author name and email address for patches without any"
,
"--patches"
:
"--- path to the quilt patches"
,
"--series"
:
"--- path to the quilt series file"
,
"--keep-non-patch"
:
"--- Pass -b to git mailinfo"
,
"#desc"
:
"Applies a quilt patchset onto the current branch"
}
,
"request-pull"
:
{
"-p"
:
"--- show patch text as well"
,
"#desc"
:
"Generates a summary of pending changes"
}
,
"send-email"
:
{
"#desc"
:
"Send a collection of patches as emails"
}
,
"svn"
:
{
"#desc"
:
"Bidirectional operation between a Subversion repository and Git"
}
,
"apply"
:
{
"--exclude"
:
"--- don't apply changes matching the given path"
,
"--include"
:
"--- apply changes matching the given path"
,
"-p"
:
"--- ading slashes from traditional diff paths"
,
"--no-add"
:
"--- ignore additions made by the patch"
,
"--stat"
:
"--- instead of applying the patch, output diffstat for the input"
,
"--numstat"
:
"--- show number of added and deleted lines in decimal notation"
,
"--summary"
:
"--- instead of applying the patch, output a summary for the input"
,
"--check"
:
"--- instead of applying the patch, see if the patch is applicable"
,
"--index"
:
"--- make sure the patch is applicable to the current index"
,
"-N|--intent-to-add"
:
"--- mark new files with `git add --intent-to-add`"
,
"--cached"
:
"--- apply a patch without touching the working tree"
,
"--unsafe-paths"
:
"--- accept a patch that touches outside the working area"
,
"--apply"
:
"--- also apply the patch "
,
"-3|--3way"
:
"--- attempt three-way merge if a patch does not apply"
,
"--build-fake-ancestor"
:
"--- attempt three-way merge if a patch does not apply"
,
"-z"
:
"--- NUL character"
,
"-C"
:
"--- nes of context match"
,
"--whitespace"
:
"--- nes of context match"
,
"--ignore-space-change"
:
"--- nes of context match"
,
"--ignore-whitespace"
:
"--- ignore changes in whitespace when finding context"
,
"-R|--reverse"
:
"--- apply the patch in reverse"
,
"--unidiff-zero"
:
"--- don't expect at least one line of context"
,
"--reject"
:
"--- leave the rejected hunks in corresponding *.rej files"
,
"--allow-overlap"
:
"--- allow overlapping hunks"
,
"-v|--verbose"
:
"--- be verbose"
,
"--inaccurate-eof"
:
"--- tolerate incorrectly detected missing new-line at the end of file"
,
"--recount"
:
"--- do not trust the line counts in the hunk headers"
,
"--directory"
:
"--- all filenames"
,
"#desc"
:
"Apply a patch to files and/or to the index"
}
,
"checkout-index"
:
{
"#desc"
:
"Copy files from the index to the working tree"
}
,
"commit-graph"
:
{
"#desc"
:
"Write and verify Git commit-graph files"
}
,
"commit-tree"
:
{
"#desc"
:
"Create a new commit object"
}
,
"hash-object"
:
{
"-t"
:
"--- object type"
,
"-w"
:
"--- write the object into the object database"
,
"--stdin"
:
"--- read the object from stdin"
,
"--stdin-paths"
:
"--- read file names from stdin"
,
"--no-filters"
:
"--- store file as is without filters"
,
"--literally"
:
"--- Git"
,
"--path"
:
"--- process file as it were from this path"
,
"#desc"
:
"Compute object ID and optionally creates a blob from a file"
}
,
"index-pack"
:
{
"#desc"
:
"Build pack index file for an existing packed archive"
}
,
"merge-file"
:
{
"-p|--stdout"
:
"--- send results to standard output"
,
"--diff3"
:
"--- use a diff3 based merge"
,
"--ours"
:
"--- for conflicts, use our version"
,
"--theirs"
:
"--- for conflicts, use their version"
,
"--union"
:
"--- for conflicts, use a union version"
,
"--marker-size"
:
"--- for conflicts, use this marker size"
,
"-q|--quiet"
:
"--- do not warn about conflicts"
,
"-L"
:
"--- set labels for file1/orig-file/file2"
,
"#desc"
:
"Run a three-way file merge"
}
,
"merge-index"
:
{
"#desc"
:
"Run a merge for files needing merging"
}
,
"mktag"
:
{
"#desc"
:
"Creates a tag object"
}
,
"mktree"
:
{
"-z"
:
"--- NUL terminated"
,
"--missing"
:
"--- allow missing objects"
,
"--batch"
:
"--- allow creation of more than one tree"
,
"#desc"
:
"Build a tree-object from ls-tree formatted text"
}
,
"multi-pack-index"
:
{
"--object-dir"
:
"--- object directory containing set of packfile and pack-index pairs"
,
"--progress"
:
"--- force progress reporting"
,
"--batch-size"
:
"--- during repack, collect pack-files of smaller size into a batch that is larger than this size"
,
"#desc"
:
"Write and verify multi-pack-indexes"
}
,
"pack-objects"
:
{
"-q|--quiet"
:
"--- do not show progress meter"
,
"--progress"
:
"--- show progress meter"
,
"--all-progress"
:
"--- show progress meter during object writing phase"
,
"--all-progress-implied"
:
"--- show progress meter during object writing phase"
,
"--index-version"
:
"--- offset>]"
,
"--max-pack-size"
:
"--- maximum size of each output pack file"
,
"--local"
:
"--- ignore borrowed objects from alternate object store"
,
"--incremental"
:
"--- ignore packed objects"
,
"--window"
:
"--- limit pack window by objects"
,
"--window-memory"
:
"--- limit pack window by memory in addition to object limit"
,
"--depth"
:
"--- maximum length of delta chain allowed in the resulting pack"
,
"--reuse-delta"
:
"--- reuse existing deltas"
,
"--reuse-object"
:
"--- reuse existing objects"
,
"--delta-base-offset"
:
"--- OFS_DELTA objects"
,
"--threads"
:
"--- use threads when searching for best delta matches"
,
"--non-empty"
:
"--- do not create an empty pack output"
,
"--revs"
:
"--- read revision arguments from standard input"
,
"--unpacked"
:
"--- limit the objects to those that are not yet packed"
,
"--all"
:
"--- include objects reachable from any reference"
,
"--reflog"
:
"--- include objects referred by reflog entries"
,
"--indexed-objects"
:
"--- include objects referred to by the index"
,
"--stdout"
:
"--- output pack to stdout"
,
"--include-tag"
:
"--- include tag objects that refer to objects to be packed"
,
"--keep-unreachable"
:
"--- keep unreachable objects"
,
"--pack-loose-unreachable"
:
"--- keep unreachable objects"
,
"--unpack-unreachable"
:
"--- keep unreachable objects"
,
"--sparse"
:
"--- use the sparse reachability algorithm"
,
"--thin"
:
"--- create thin packs"
,
"--shallow"
:
"--- create packs suitable for shallow fetches"
,
"--honor-pack-keep"
:
"--- ignore packs that have companion .keep file"
,
"--keep-pack"
:
"--- ignore this pack"
,
"--compression"
:
"--- pack compression level"
,
"--keep-true-parents"
:
"--- do not hide commits by grafts"
,
"--use-bitmap-index"
:
"--- use a bitmap index if available to speed up counting objects"
,
"--write-bitmap-index"
:
"--- write a bitmap index together with the pack index"
,
"--filter"
:
"--- object filtering"
,
"--missing"
:
"--- handling for missing objects"
,
"--exclude-promisor-objects"
:
"--- handling for missing objects"
,
"--delta-islands"
:
"--- respect islands during delta compression"
,
"#desc"
:
"Create a packed archive of objects"
}
,
"prune-packed"
:
{
"-n|--dry-run"
:
"--- dry run"
,
"-q|--quiet"
:
"--- be quiet"
,
"#desc"
:
"Remove extra objects that are already in pack files"
}
,
"read-tree"
:
{
"--index-output"
:
""
,
"--empty"
:
"--- only empty the index"
,
"-v|--verbose"
:
"--- be verbose"
,
"-m"
:
"--- perform a merge in addition to a read"
,
"--trivial"
:
"--- merge if no file level merging required"
,
"--aggressive"
:
"--- merge in presence of adds and removes"
,
"--reset"
:
"--- same as -m, but discard unmerged entries"
,
"--prefix"
:
"--- same as -m, but discard unmerged entries"
,
"-u"
:
"--- update working tree with merge result"
,
"--exclude-per-directory"
:
"--- update working tree with merge result"
,
"-i"
:
"--- don't check the working tree after merging"
,
"-n|--dry-run"
:
"--- don't update the index or the work tree"
,
"--no-sparse-checkout"
:
"--- skip applying sparse checkout filter"
,
"--debug-unpack"
:
"--- debug unpack-trees"
,
"--recurse-submodules"
:
"--- debug unpack-trees"
,
"-q|--quiet"
:
"--- suppress feedback messages"
,
"#desc"
:
"Reads tree information into the index"
}
,
"symbolic-ref"
:
{
"-q|--quiet"
:
"--- suppress error message for non-symbolic  refs"
,
"-d|--delete"
:
"--- delete symbolic ref"
,
"--short"
:
"--- shorten ref output"
,
"-m"
:
"--- reason of the update"
,
"#desc"
:
"Read, modify and delete symbolic refs"
}
,
"unpack-objects"
:
{
"#desc"
:
"Unpack objects from a packed archive"
}
,
"update-index"
:
{
"#desc"
:
"Register file contents in the working tree to the index"
}
,
"update-ref"
:
{
"-m"
:
"--- reason of the update"
,
"-d"
:
"--- delete the reference"
,
"--no-deref"
:
"--- update t the one it points to"
,
"-z"
:
"--- NUL-terminated arguments"
,
"--stdin"
:
"--- read updates from stdin"
,
"--create-reflog"
:
"--- create a reflog"
,
"#desc"
:
"Update the object name stored in a ref safely"
}
,
"write-tree"
:
{
"--missing-ok"
:
"--- allow missing objects"
,
"--prefix"
:
"--- write tree object for a subdirectory "
,
"#desc"
:
"Create a tree object from the current index"
}
,
"cat-file"
:
{
"-t"
:
"--- show object type"
,
"-s"
:
"--- show object size"
,
"-e"
:
"--- exit with zero when there's no error"
,
"-p"
:
"--- pretty-print object's content"
,
"--textconv"
:
"--- for blob objects, run textconv on object's content"
,
"--filters"
:
"--- for blob objects, run filters on object's content"
,
"--path"
:
"--- use a specific path for --textconv/--filters"
,
"--allow-unknown-type"
:
"--- allow -s and -t to work with broken/corrupt objects"
,
"--buffer"
:
"--- buffer --batch output"
,
"--batch[="
:
"--- show info and content of objects fed from the standard input"
,
"--batch-check"
:
"--- show info and content of objects fed from the standard input"
,
"--follow-symlinks"
:
"--- follow in-tree symlinks "
,
"--batch-all-objects"
:
"--- show all objects with --batch or --batch-check"
,
"--unordered"
:
"--- do not order --batch-all-objects output"
,
"#desc"
:
"Provide content or type and size information for repository objects"
}
,
"cherry"
:
{
"--abbrev[=gits"
:
"--- SHA-1s"
,
"-v|--verbose"
:
"--- be verbose"
,
"#desc"
:
"Find commits yet to be applied to upstream"
}
,
"diff-files"
:
{
"#desc"
:
"Compares files in the working tree and the index"
}
,
"diff-index"
:
{
"#desc"
:
"Compare a tree to the working tree or index"
}
,
"diff-tree"
:
{
"#desc"
:
"Compares the content and mode of blobs found via two tree objects"
}
,
"for-each-ref"
:
{
"-s|--shell"
:
"--- quote placeholders suitably for shells"
,
"-p|--perl"
:
"--- quote placeholders suitably for perl"
,
"--python"
:
"--- quote placeholders suitably for python"
,
"--tcl"
:
"--- Tcl"
,
"--count"
:
"--- tched refs"
,
"--format"
:
"--- format to use for the output"
,
"--color[="
:
"--- respect format colors"
,
"--sort"
:
"--- field name to sort on"
,
"--points-at"
:
"--- rint only refs which points at the given object"
,
"--merged"
:
"--- print only refs that are merged"
,
"--no-merged"
:
"--- rint only refs that are not merged"
,
"--contains"
:
"--- print only refs which contain the commit"
,
"--no-contains"
:
"--- print only refs which contain the commit"
,
"--ignore-case"
:
"--- sorting and filtering are case insensitive"
,
"#desc"
:
"Output information on each ref"
}
,
"get-tar-commit-id"
:
{
"#desc"
:
"Extract commit ID from an archive created using git-archive"
}
,
"ls-files"
:
{
"#desc"
:
"Show information about files in the index and the working tree"
}
,
"ls-remote"
:
{
"-q|--quiet"
:
"--- URL"
,
"--upload-pack"
:
"--- ath of git-upload-pack on the remote host"
,
"-t|--tags"
:
"--- limit to tags"
,
"-h|--heads"
:
"--- limit to heads"
,
"--refs"
:
"--- do not show peeled tags"
,
"--get-url"
:
"--- take url.steadOf into account"
,
"--sort"
:
"--- field name to sort on"
,
"--exit-code"
:
"--- exit with exit code 2 if no matching refs are found"
,
"--symref"
:
"--- show underlying ref in addition to the object pointed by it"
,
"-o|--server-option"
:
"--- show underlying ref in addition to the object pointed by it"
,
"#desc"
:
"List references in a remote repository"
}
,
"ls-tree"
:
{
"-d"
:
"--- only show trees"
,
"-r"
:
"--- recurse into subtrees"
,
"-t"
:
"--- show trees when recursing"
,
"-z"
:
"--- NUL byte"
,
"-l|--long"
:
"--- include object size"
,
"--name-only"
:
"--- list only filenames"
,
"--name-status"
:
"--- list only filenames"
,
"--full-name"
:
"--- use full path names"
,
"--full-tree"
:
"--- list entire tree; not just current directory "
,
"--abbrev[=gits"
:
"--- SHA-1s"
,
"#desc"
:
"List the contents of a tree object"
}
,
"merge-base"
:
{
"-a|--all"
:
"--- output all common ancestors"
,
"--octopus"
:
"--- find ancestors for a single n-way merge"
,
"--independent"
:
"--- list revs not reachable from others"
,
"--is-ancestor"
:
"--- is the first one ancestor of the other?"
,
"--fork-point"
:
"--- find where rked from reflog of "
,
"#desc"
:
"Find as good common ancestors as possible for a merge"
}
,
"name-rev"
:
{
"--name-only"
:
"--- print only names "
,
"--tags"
:
"--- only use tags to name the commits"
,
"--refs"
:
"--- only use refs matching "
,
"--exclude"
:
"--- ignore refs matching "
,
"--all"
:
"--- list all commits reachable from all refs"
,
"--stdin"
:
"--- read from stdin"
,
"--undefined"
:
"--- allow to print `undefined` names "
,
"--always"
:
"--- show abbreviated commit object as fallback"
,
"#desc"
:
"Find symbolic names for given revs"
}
,
"pack-redundant"
:
{
"#desc"
:
"Find redundant pack files"
}
,
"rev-list"
:
{
"#desc"
:
"Lists commit objects in reverse chronological order"
}
,
"rev-parse"
:
{
"#desc"
:
"Pick out and massage parameters"
}
,
"show-index"
:
{
"#desc"
:
"Show packed archive index"
}
,
"show-ref"
:
{
"--tags"
:
"--- only show tags "
,
"--heads"
:
"--- only show heads "
,
"--verify"
:
"--- stricter reference checking, requires exact ref path"
,
"--head"
:
"--- HEAD reference, even if it would be filtered out"
,
"-d|--dereference"
:
"--- IDs"
,
"-s|--hash[=gits"
:
"--- IDs"
,
"--abbrev[=gits"
:
"--- SHA-1s"
,
"-q|--quiet"
:
"--- do not print results to stdout "
,
"--exclude-existing"
:
"--- do not print results to stdout "
,
"#desc"
:
"List references in a local repository"
}
,
"unpack-file"
:
{
"#desc"
:
"Creates a temporary file with a blob's contents"
}
,
"var"
:
{
"#desc"
:
"Show a Git logical variable"
}
,
"verify-pack"
:
{
"-v|--verbose"
:
"--- verbose"
,
"-s|--stat-only"
:
"--- show statistics only"
,
"#desc"
:
"Validate packed Git archive files"
}
,
"daemon"
:
{
"#desc"
:
"A really simple server for Git repositories"
}
,
"fetch-pack"
:
{
"#desc"
:
"Receive missing objects from another repository"
}
,
"send-pack"
:
{
"--all"
:
"--- and explicit ecification are mutually exclusive."
,
"-v|--verbose"
:
"--- be more verbose"
,
"-q|--quiet"
:
"--- be more quiet"
,
"--receive-pack"
:
"--- be more quiet"
,
"--exec"
:
"--- be more quiet"
,
"--remote"
:
"--- remote name"
,
"--all"
:
"--- push all refs"
,
"-n|--dry-run"
:
"--- dry run"
,
"--mirror"
:
"--- mirror all refs"
,
"-f|--force"
:
"--- force updates"
,
"--signed"
:
"--- force updates"
,
"--push-option"
:
"--- force updates"
,
"--progress"
:
"--- force progress reporting"
,
"--thin"
:
"--- use thin pack"
,
"--atomic"
:
"--- request atomic transaction on remote side"
,
"--stateless-rpc"
:
"--- RPC protocol"
,
"--stdin"
:
"--- read refs from stdin"
,
"--helper-status"
:
"--- print status from remote helper"
,
"--force-with-lease"
:
"--- print status from remote helper"
,
"#desc"
:
"Push objects over Git protocol to another repository"
}
,
"update-server-info"
:
{
"-f|--force"
:
"--- update the info files from scratch"
,
"#desc"
:
"Update auxiliary info file to help dumb servers"
}
,
"check-attr"
:
{
"-a|--all"
:
"--- report all attributes set on file"
,
"--cached"
:
"--- use .gitattributes only from the index"
,
"--stdin"
:
"--- read file names from stdin"
,
"-z"
:
"--- NUL character"
,
"#desc"
:
"Display gitattributes information"
}
,
"check-ignore"
:
{
"-q|--quiet"
:
"--- suppress progress reporting"
,
"-v|--verbose"
:
"--- be verbose"
,
"--stdin"
:
"--- read file names from stdin"
,
"-z"
:
"--- NUL character"
,
"-n|--non-matching"
:
"--- show non-matching input paths"
,
"--no-index"
:
"--- ignore index when checking"
,
"#desc"
:
"Debug gitignore / exclude files"
}
,
"check-mailmap"
:
{
"--stdin"
:
"--- also read contacts from stdin"
,
"#desc"
:
"Show canonical names and email addresses of contacts"
}
,
"check-ref-format"
:
{
"#desc"
:
"Ensures that a reference name is well formed"
}
,
"column"
:
{
"--command"
:
"--- lookup config vars"
,
"--mode[="
:
"--- layout to use"
,
"--raw-mode"
:
"--- layout to use"
,
"--width"
:
"--- Maximum width"
,
"--indent"
:
"--- Padding space on left border"
,
"--nl"
:
"--- Padding space on right border"
,
"--padding"
:
"--- Padding space between columns"
,
"#desc"
:
"Display data in columns"
}
,
"credential"
:
{
"#desc"
:
"Retrieve and store user credentials"
}
,
"credential-cache"
:
{
"--timeout"
:
"--- number of seconds to cache credentials"
,
"--socket"
:
"--- path of cache-daemon socket"
,
"#desc"
:
"Helper to temporarily store passwords in memory"
}
,
"credential-store"
:
{
"--file"
:
"--- fetch and store credentials in "
,
"#desc"
:
"Helper to store credentials on disk"
}
,
"fmt-merge-msg"
:
{
"--log[=tries"
:
"--- from shortlog"
,
"-m|--message"
:
"--- start of message"
,
"-F|--file"
:
"--- file to read from"
,
"#desc"
:
"Produce a merge commit message"
}
,
"interpret-trailers"
:
{
"--in-place"
:
"--- edit files in place"
,
"--trim-empty"
:
"--- trim empty trailers"
,
"--where"
:
"--- where to place the new trailer"
,
"--if-exists"
:
"--- ction if trailer already exists"
,
"--if-missing"
:
"--- ction if trailer already exists"
,
"--only-trailers"
:
"--- output only the trailers"
,
"--only-input"
:
"--- do not apply config rules"
,
"--unfold"
:
"--- join whitespace-continued values"
,
"--parse"
:
"--- set parsing options"
,
"--no-divider"
:
"--- do not treat --- specially"
,
"--trailer"
:
"--- trailer to add"
,
"#desc"
:
"Add or parse structured information in commit messages"
}
,
"mailinfo"
:
{
"#desc"
:
"Extracts patch and authorship from a single e-mail message"
}
,
"mailsplit"
:
{
"#desc"
:
"Simple UNIX mbox splitter program"
}
,
"merge-one-file"
:
{
"#desc"
:
"The standard helper program to use with git-merge-index"
}
,
"patch-id"
:
{
"#desc"
:
"Compute unique ID for a patch"
}
,
"sh-i18n"
:
{
"#desc"
:
"Git's i18n setup code for shell scripts"
}
,
"sh-setup"
:
{
"#desc"
:
"Common Git shell script setup code"
}
,
"stripspace"
:
{
"-s|--strip-comments"
:
"--- skip and remove all lines starting with comment character"
,
"-c|--comment-lines"
:
"--- prepend comment character and space to each line"
,
"#desc"
:
"Remove unnecessary whitespace"
}
}
