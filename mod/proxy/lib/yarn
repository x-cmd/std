# shellcheck shell=sh disable=SC3043
# Reference: https://zhuanlan.zhihu.com/p/35856841

___x_cmd_proxy_yarn(){
    param:dsl <<A
subcommand:
    url         "Provide url of mirror candidates"
    set         "Setting the mirror"
    get         "Get current mirror"
    unset       "Reset the source to the original official"
A
    param:run

    if ! command -v yarn >/dev/null; then
        proxy_log error "command not found: yarn, you should install yarn in your system."
        return 1
    elif [ -n "$PARAM_SUBCMD" ]; then
        "___x_cmd_proxy_yarn_${PARAM_SUBCMD}" "$@"
    else
        proxy_log info "Current Registry is:    "
        ___x_cmd_proxy_yarn get
        ___x_cmd_proxy_yarn _param_help_doc  >&2
    fi

}

___x_cmd_proxy_yarn_url(){
    param:dsl <<A
option:
    #1    "Mirror name"       <mirror-name>=ali    = ali official
A
    param:run

    case "$1" in
        ali)             printf https://registry.npm.taobao.org/              ;;
        official)        printf https://registry.yarnpkg.com                  ;;
    esac
}

___x_cmd_proxy_yarn_get(){
    param:void
    yarn config get registry
}

___x_cmd_proxy_yarn_set() {
    param:dsl <<A
option:
    #1    "Mirror name"       <mirror-name>=ali    = ali official
A
    param:run

    local url
    url="$(___x_cmd_proxy_yarn_url "$1")"
    printf "Setting proxy_yarn mirror:\n    %s\n\n" "$url" >&2
    yarn config set registry "$url"
}

___x_cmd_proxy_yarn_unset() {
    param:void
    ___x_cmd_proxy_yarn_set   official
}

proxy_yarn_tutorial(){
    param:void
    cat <<A
A
}