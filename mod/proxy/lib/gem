# shellcheck shell=sh disable=SC3043
# reference https://zhuanlan.zhihu.com/p/90508170
# gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/

___x_cmd_proxy_gem(){
    param:dsl <<A
subcommand:
    url        "Provide url of mirror candidates"
    set        "Setting the mirror"
    get        "Get current mirror"
    unset      "Reset the source to the original official"
A
    param:run

    if ! command -v gem >/dev/null; then
        proxy_log error "command not found: gem, you should install gem in your system."
        return 1
    elif [ -n "$PARAM_SUBCMD" ]; then
        "___x_cmd_proxy_gem_${PARAM_SUBCMD}" "$@"
    else
        proxy_log info "Current mirror is: "
        ___x_cmd_proxy_gem get
        ___x_cmd_proxy_gem _param_help_doc  >&2
    fi

}

___x_cmd_proxy_gem_url(){
    param:dsl <<A
subcommand:
    ruby-china|cn           "ruby china mirror"
    official                "Official mirror"
A
    param:run

    case "$PARAM_SUBCMD" in
        # https://gems.ruby-china.com
        ruby-china|cn)          printf https://gems.ruby-china.com                  ;;
        official)               printf https://rubygems.org                         ;;
        *)                      ___x_cmd_proxy_gem_url _param_help_doc >&2                   ;;
    esac
}

___x_cmd_proxy_gem_get(){
    param:void
    gem sources -l | grep "http"
}

___x_cmd_proxy_gem_set() {
    param:dsl <<A
subcommand:
    ruby-china|cn           "ruby china mirror"
    official                "Official"
A
    param:run

    local url
    if url="$(___x_cmd_proxy_gem_url "${PARAM_SUBCMD:-ruby-china}")"; then
        printf "Setting ___x_cmd_proxy_gem mirror:\n    %s\n" "$url" >&2

        for i in $(___x_cmd_proxy_gem_get); do
            gem sources -r "$i"
        done
        gem sources --add "$url"
    fi
}

___x_cmd_proxy_gem_unset() {
    param:void
    ___x_cmd_proxy_gem_set   official
}

___x_cmd_proxy_gem_tutorial(){
    param:void
    cat <<A
A
}