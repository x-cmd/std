# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gh_config(){
    param:dsl       '
subcmd:
    which       "Show current config path"
    save        "Save the config in memory into file"
    load        "Load the config from config path"
    # get         "Print the value of a given configuration key"
    # list        "Print a list of configuration keys and values"
    # set         "Print the value of a given configuration key"
'
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi
    
    "___x_cmd_gh_config_${PARAM_SUBCMD}" "$@"
}

# Section: try
___x_cmd_gh_config_which() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"
    echo "$HOME/.x-cmd/.config/x-bash/app.github.config/$O"
}

# TODO:config 
___x_cmd_gh_config_save() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"
    local ___github_path="${1:-$HOME/.x-cmd/.config/x-bash/app.github.config/$O}"
    [ ! -e "$___github_path" ] && mkdir -p "$___github_path##*/"
    param_default dump "github_$O">"$___github_path" && return
    gh_log error "gh config save Fail"
}

# shellcheck disable=SC2120
___x_cmd_gh_config_load() {
    param:void
    local O="${O:-GITHUB_DEFAULT}"
    local ___github_path="${1:-$HOME/.x-cmd/.config/x-bash/app.github.config/$O}"
    [ ! -f "$___github_path" ] && gh_log info "info:There is no history config" && return
    param_default load "github_$O" "$___github_path"
    param_default dump "github_$O"
    token="$(param_default get "github_$O" token)"
    ___x_cmd_gh_token "false" "$token" >&2
}
# EndSection

# Section: get list set

# ___x_cmd_gh_get(){
#     :
# }

___x_cmd_gh_list(){
    :
}

___x_cmd_gh_set(){
    :
}

# EndSection
