# shellcheck shell=sh

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

alias gis="git status"
alias giss="git status -s"
alias gib="git branch"

gia(){
    if [ "$1" = "" ]; then
        git add .;
    else
        git add "$@";
    fi
}

gisy(){
    giam "$@"
    git status -s
    printf "\nEnter to continue. Other to abort: > " >&2
    local key
    read -r key
    if [ "$key" != "" ]; then
        printf "%s" "Abort. Because read $key" >&2
        return 1
    fi

    x push || giP
}

giam(){
    local msg="${1:-...}"
    shift
    if [ $# -eq 0 ]; then
        git add .
    else
        git add "$@"
    fi
    git commit -m "$msg"
}

gicm(){
    git commit -m "${1:-...}"
}

gip(){
    git pull origin "$(git rev-parse --abbrev-ref HEAD)"
}

giP(){
    git push origin ${1:-"$(git rev-parse --abbrev-ref HEAD)"}
}

ghclone(){
    git clone "git@github.com:${1:?Provide url}.git"
}

gtclone(){
    git clone "git@gitee.com:${1:?Provide url}.git"
}


alias ll="ls -al"
alias lh="ls -alh"

rmrf(){
    local 
    for i in "$@"; do
        case "$i" in
            /)          printf "%s" "Try to 'rm -rf $i'" >&2;       return 1    ;;
            /bin)       printf "%s" "Try to 'rm -rf $i'" >&2;       return 1    ;;
            /usr)       printf "%s" "Try to 'rm -rf $i'" >&2;       return 1    ;;
            /home)      printf "%s" "Try to 'rm -rf $i'" >&2;       return 1    ;;
            /var)       printf "%s" "Try to 'rm -rf $i'" >&2;       return 1    ;;
        esac
        rm -rf "$i"
    done
}

# K8s

alias kctl=kubectl
alias k=kctl
alias kg="kubectl get"
alias kgp="kg pods"
alias kgrs="kg rs"


# Setting bash style
# Reference: https://blog.gtwang.org/linux/how-to-make-a-fancy-and-useful-bash-prompt-in-linux-2/

export CLR_BOLD="\[$(tput bold)\]"
export CLR_UNDERLINE="\[$(tput smul)\]" # \e[0;4m
export CLD_DIM="\[$(tput dim)\]"

export CLR_RED="\[$(tput setaf 1)\]"
export CLR_GREEN="\[$(tput setaf 2)\]"
export CLR_YELLOW="\[$(tput setaf 3)\]"
export CLR_BLUE="\[$(tput setaf 4)\]"
export CLR_0="\[$(tput sgr0)\]"

displayLHOSTNAME(){
    [ -z "$LHOSTNAME" ] || echo "@$LHOSTNAME"
}

# export -f displayLHOSTNAME

if [ -n "$BASH_VERSION" ]; then

export PS1="\n$CLR_BOLD$CLR_YELLOW\$(date +%H:%M:%S)  $CLR_0$CLR_UNDERLINE$CLR_GREEN\$PWD$CLR_0  $CLR_BOLD$CLR_BLUE\u$CLR_0 $CLR_BLUE\$(displayLHOSTNAME) $CLR_RED$CLR_BOLD\$(git rev-parse --abbrev-ref HEAD 2>/dev/null)\n$CLR_RED\$$CLR_0 "
export PS2='\[\e[0;32m\]~>\[\e[m\]'

export PS3='Enter your choices:'
export PS4='\[\e[0;37;44m\]$LINENO@$0:\[\e[m\]'
#export PROMPT_COMMAND="echo -n [$(date +%H:%M:%S)]"

fi



