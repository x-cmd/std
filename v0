# shellcheck shell=sh


# shellcheck disable=SC3043,SC2034,SC2155,SC2120,SC2119,SC2016

x log init ps1env

___X_CMD_PS1ENV_OVERRIDE_ALIAS=""

ps1env(){
    local subcmd="${1:?Subcommand}";    shift

    case "$subcmd" in
        init)                   ___x_cmd_ps1env_init "$@" ;;
        alias)                  ___x_cmd_ps1env_alias "$@" ;;
        reset)                  ___x_cmd_ps1env_reset "$@" ;;
        _x_cmd_advise_json)     
            cat <<A
{
    "init": null,
    "alias": null
}
A
            return 126 ;;
    esac
}

# Section: advise

xrc advise/v0
advise ps1env

___x_cmd_ps1env_init(){
    ___x_cmd_ps1env_reset

    ___X_CMD_PS1ENV_PS1="$PS1"
    # _ps1env_set_ps1 "${1:-\$}"
    ___x_cmd_theme_control_subenv_prompt "${1:?Please provide}"

    ___x_cmd_ps1env_alias %q "___x_cmd_ps1env_reset"
}

___x_cmd_ps1env_alias(){
    local s
    if s=$(alias "$1" 2>/dev/null); then
        eval "___X_CMD_PS1ENV_OVERRIDE_ALIAS=\"
\$s
\$___X_CMD_PS1ENV_OVERRIDE_ALIAS
\"
"
    fi

    alias $1="$2"

    ___X_CMD_PS1ENV_BIND="$___X_CMD_PS1ENV_BIND
$1
"
}

___x_cmd_ps1env_reset(){
    if [ -z "$___X_CMD_PS1ENV_PS1" ]; then
        ps1env_log debug "Reset abort."
        return 1
    fi

    ___x_cmd_theme_control_subenv_prompt_clear

    local IFS=""

    # Donot recover
    # PS1="${___X_CMD_PS1ENV_PS1}"
    ___X_CMD_PS1ENV_PS1=

    while read -r line; do
        [ -z "$line" ] && continue
        unalias "${line}"
    done <<A
$___X_CMD_PS1ENV_BIND
A

    ___X_CMD_PS1ENV_BIND=

    eval "$___X_CMD_PS1ENV_OVERRIDE_ALIAS"
    ___X_CMD_PS1ENV_OVERRIDE_ALIAS=
}

# EndSection

# Section: test subenv prompt

# using dict
___x_cmd_theme_control_env(){
    xrc dict/v0
    case "$#" in
        0)      dict @___x_cmd_theme_env dump           ;;
        1)      dict @___x_cmd_theme_env get "$1"       ;;
        2)      dict @___x_cmd_theme_env put "$1" "$2"  ;;
        *)      printf "%s\n" "___x_cmd_theme_control_env [key] [val]" >&2
    esac
}

___x_cmd_theme_control_is_using_x_theme(){
    [ -n "$(command -v ___x_cmd_theme_prompt_format)" ]
}

___x_cmd_theme_control_subenv_prompt_clear(){
    ___X_CMD_THEME_CONTROL_SUBENV_PROMT=
}

___x_cmd_theme_control_subenv_prompt(){
    local subenv_symbol="${1}"

    if [ -z "$1" ]; then
        printf "%s\n" "$___X_CMD_THEME_CONTROL_SUBENV_PROMT"
        return
    fi

    # ___x_cmd_theme_control_subenv
    ___X_CMD_THEME_CONTROL_SUBENV_PROMT="${subenv_symbol}"
}

###
 # @param: key color
 # @param: value color
 # @param: key value interval
 # @param: env sub interval
 # @explam: ___x_cmd_theme_control_env_prompt 'cyan' 'underline yellow' ':' ' '
###
___x_cmd_theme_control_env_prompt(){
    local s
    s="$(___x_cmd_theme_control_env)"
    local len="${s##*"${DICT_SEP}"}"
    { [ -z "$___X_CMD_THEME_CONTROL_SUBENV_PROMT" ] || [ "${len:-0}" = '0' ] ; } && \
        return
    local _key
    local _res
    local i=0
    while [ $i -lt "$len" ]; do
        _key="${s%%"${DICT_SEP}"*}"
        s="${s#*"${DICT_SEP}"}"
        _res="eval \"___x_cmd_theme_style ${1-"dfg-yellow"} $_key${3-': '}\" && \
              eval \"___x_cmd_theme_style ${2-"hfg-black"} ${s%%"${DICT_SEP}"*}\" && \
              printf ${4-' '} && $_res"
        s="${s#*"${DICT_SEP}"}"
        [ $i = '2' ] && break
        i=$((i+1))
    done
    _res=${_res%&&*}
    eval "$_res"
}

________x_cmd_theme_env_load_format() {
    [ -n "$___X_CMD_THEME_CONTROL_SUBENV_PROMT" ] && printf "%s " \
        "$(___x_cmd_theme_style dfg-cyan "[$(___x_cmd_theme_control_subenv_prompt)]")$(___x_cmd_theme_control_env_prompt)"
}

________x_cmd_theme_env_load_format_wrapper() {
    ___X_CMD_COLOR_PRE="$1"
    ___X_CMD_COLOR_SUF="$2"

    ________x_cmd_theme_env_load_format
}
# PS1 inject
if ! ___x_cmd_theme_control_is_using_x_theme; then
    xrc theme/_v0/style
    if [ -n "$ZSH_VERSION" ]; then
        setopt PROMPT_SUBST
        # PROMPT interprete %n... after evaluation.
        PROMPT='$(________x_cmd_theme_env_load_format)'"${PROMPT}"
    else
        # PS1 interprete \u before evaluation.
        PS1="\$(________x_cmd_theme_env_load_format_wrapper \"\[\" \"\]\")$PS1"
    fi
fi

# EndSection
