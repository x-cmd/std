# shellcheck shell=bash

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao  

# @src std/@
# shellcheck disable=SC2154

# TODOC: Why NOT alias tmp="tmp.auto; tmp.get_path". Because it will encourage problematic usage.
# a="$(tmp)" # tmp will clear the folder after subshell ends. Not our intention.

# : <<A
# Usage 0:
# a="$(tmp /var/tcd)"
# A

# : <<A
# Usage 1:
# tmp_init
# @defer tmp_finalize

# a="$(tmp "/var/tcd")"
# A

# : <<A
# Usage 2:
# tmp.auto

# a="$(tmp "/var/tcd")"
# A

alias tmp.auto="tmp_init; xrc std/@; @defer tmp_finalize"

# _X_CMD_X_BASH_FILE_TMP_GLOBAL=
tmp_init(){
    # _X_CMD_X_BASH_FILE_TMP_GLOBAL="$(mktemp)"
    _X_CMD_X_BASH_FILE_TMP_GLOBAL="${TMPDIR}$(date +%Y%m%d%H%M%S)_${RANDOM}/"
    mkdir -p "$_X_CMD_X_BASH_FILE_TMP_GLOBAL"
}

_tmp_folder(){
    local res
    if [ -z "$_X_CMD_X_BASH_FILE_TMP_GLOBAL" ]; then
        res="${TMPDIR}_X_BASH_DEFAULT_TMP/"
        [ -d "$res" ] || mkdir -p "$res"
        echo "$res"
    fi

    echo "${_X_CMD_X_BASH_FILE_TMP_GLOBAL}"
}

tmp(){
    local FOLDER_PATH
    FOLDER_PATH="$(_tmp_folder)"

    local key="$1"
    if [ -z "$key" ]; then
        printf "%s" "${FOLDER_PATH}_UNNAMED_$(date +%Y%m%d%H%M%S)_${RANDOM}"
    else
        local vkey
        vkey=$(printf "%s" "$key" | base64 | tr "=" _)
        printf "%s" "${FOLDER_PATH}_NAMED_${vkey}"
    fi
}

tmp_list()(         # Notice, using subshell
    local FOLDER_PATH
    FOLDER_PATH="$(_tmp_folder)"

    shopt -s nullglob
    cd "$FOLDER_PATH" || return 1
    local i
    for i in *; do
        echo "$FOLDER_PATH$i"
    done
)

tmp_list_named()(   # Notice, using subshell
    FOLDER_PATH="$(_tmp_folder)"
    shopt -s nullglob
    cd "$FOLDER_PATH" || return 1
    for i in _NAMED_*; do
        echo "$FOLDER_PATH$i"
    done
)

tmp_list_unnamed()( # Notice, using subshell
    FOLDER_PATH="$(_tmp_folder)"
    shopt -s nullglob
    cd "$FOLDER_PATH" || return 1
    local i
    for i in _UNNAMED_*; do
        echo "$FOLDER_PATH$i"
    done
)

# better name? deinit? clear?
# Please refer the following site before discussion:
# https://softwareengineering.stackexchange.com/questions/163004/what-is-the-opposite-of-initialize-or-init
tmp_finalize(){
    FOLDER_PATH="$(_tmp_folder)"
    rm -rf "$FOLDER_PATH"
}
