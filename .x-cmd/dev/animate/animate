# shellcheck shell=sh disable=SC3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

xrc ui/lib/region

___x_cmd_ui_animate(){
    local op="$1"; shift
    case "$op" in
        app)            ___x_cmd_ui_animate_app "$@" ;;
        app-interval)   
            local ANIMATE_INTERVAL="$1"; shift
            ___x_cmd_ui_animate_app "$@" ;;
        sendenv)        ___X_CMD_UI_ANIMATE_TITLE="code"      ___x_cmd_ui_animate_sendenv "$@" ;;
        writenv)        ___X_CMD_UI_ANIMATE_TITLE="export"    ___x_cmd_ui_animate_sendenv "$@" ;;
    esac
}

___x_cmd_ui_animate_app(){
    local state_func1="$1"
    local template_func2="$2"
    local IFS="
"
    stty -echo
    exec 3>&1

    {
        if [ -z "${ANIMATE_INTERVAL}" ]; then
            eval "$state_func1" 
        else
            {
                while true; do
                    printf "tc:\n"
                    sleep "${ANIMATE_INTERVAL}" || break
                done
            } &

            eval "$state_func1"
            kill $!
            sleep 0.1s
        fi
    } | {
        local code
        local ticks=1

        while read -r code; do
            case "$code" in
                code:*)
                    eval "${code#code:}"
                    continue
                ;;
                export:*)
                    printf "%s\n" "${code#export:}" >&3
                    continue
                ;;
                tc:)
                    ticks=$((ticks+1))
                ;;
            esac
            ___x_cmd_ui_region_send "$(eval "$template_func2")"
        done
    } | ___x_cmd_ui_region_update
    printf "\033[34h\033[?25h" >&2

    exec 3>&-
    stty echo
}

___x_cmd_ui_animate_sendenv(){
    local I
    I="$(printf "\001")"

    while [ $# -gt 0 ]; do
        printf "%s$I" "$1"
        printf "%s$I" "$(eval printf \"\$"$1"\")"
        shift
    done | awk -v title="${___X_CMD_UI_ANIMATE_TITLE}" -v RS="$I" '
BEGIN{
    printf title ":"
}

{
    if (VAR==""){
        VAR=$1
    } else {
        text=$0
        time =0
        time = time + gsub(/\\/, "\\\\", text)
        time = time + gsub(/"/, "\\\"", text)
        time = time + gsub("\n", "\\n", text)
        if (time == 0) {
            printf("%s", VAR "=\"" text "\"; ")
        } else {
            printf("%s", VAR "=\"$(printf \"" text "\")\"; ")
        }
        VAR=""
    }
}

END{
    printf "\n"
}
'
}

___x_cmd_ui_animate_demo()(
    
    _control(){
        for percentage in $(seq 0 10 100); do

            case $(( percentage / 10 % 2 )) in
                0) 
                style=warn
                text="Important to say: Percentage is even.
1
2"
    ;;
                1) 
                style=error
                text="Hia hia. Percentage is odd.
hi";;
            esac

            ui animate sendenv percentage style text
            ui animate writenv percentage
            sleep 0.1s
        done

    }

    _view(){
        printf "%s\n" "
$(ui_draw_seperator)
$(ui spin $ticks) $(ui_style $style -- Initializing the storage)
$(ui info -- Prepare the UI "$percentage")
$(ui probar "$(ui bg-blue " ")" "$(ui bg-white " ")" "${percentage:-0}")
$(ui bold black -- Initializing the storage)
$(cowsay "$(ui_style warn -- "Hi Good work" "$percentage")" )
$(cowsay Hi Good work)
$(ui info -- "$text")
$(ui_draw_seperator)
"
    }

    ui animate app-interval 0.05 _control _view

    printf "\033[34h\033[?25h" >&2
)

eval "$(___x_cmd_ui_animate_demo)"
echo "$percentage"

