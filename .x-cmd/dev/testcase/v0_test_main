# shellcheck shell=bash

___X_CMD_XRC_MODULE_IMPORTED=

x log init awk
xrc assert
xrc awk

rm -rf tmp
mkdir -p tmp

test_hello_world(){
    assert_stdout "printf \"hello world\n\"" <<A
hello world
A
    TEST_FP="./testcase/v0_test.awk"
    USE=str,wcwidth,ui
    LC_ALL=en_US.UTF-8

    assert_stdout "xawk file \"$TEST_FP\" -v EXIT_OP=\"$EXIT_OP\"" <<A
HELLO WORLD
10000
A
}

# Section: utilities

print_the_code() {
    local code tmpfile

    if [ -n "$TEST_FP" ] ; then
        code="$(eval cat "$(___x_cmd_awk_lib)" "$TEST_FP")"
    elif [ -n "$TEST_CODE" ] ; then
        code="$(eval cat "$(___x_cmd_awk_lib)") ${TEST_CODE}"
    fi

    tmpfile="tmp/$USE.$(date).awk"
    printf "%s" "$code" > "$tmpfile"
    awk_log error "now, your code is in: \"$tmpfile\""
}

start_test() {
    < "$1" awk '$0~/^test_[^\(]+\(\)/{ gsub(/\(\)\{/, "", $0); print $0 }' | while read -r line; do
        awk_log info "Testing Function: $line"
        if ! eval "$line"; then
            printf "\033[0;31m======= Fail at function: %s \033[0m\n" "$line" >&2
            print_the_code
            break
        else
            TEST_FP=
            TEST_CODE=
        fi
    done
}

. ./testcase/v0_test_json

start_test ./testcase/v0_test_main
start_test ./testcase/v0_test_json

# EndSection