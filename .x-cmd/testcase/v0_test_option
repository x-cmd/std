# shellcheck shell=sh disable=SC2039,SC2142,SC3043

paramtest_option(){
    param:scope     "paramtest/$O"
    param:dsl      <<A
type:
    access  =   private public
    repo_t  =~  "cde"   "def"
advise:
    repo  list_repo all
    #1    list_repo
option:
    --mul_line_arg|-m       "Test multiple line argument"            <mline_arg>:mline_arg_type
    --regex_arg1            "Test an argument with regex 1"          <>=0     =~  [0-9]*
    --regex_arg2            "Test an argument with regex 2"          <>=20    =~  ([1-9]?[0-9]|100)
    --repo|-r               "Provide repo name"                      <>:repo_type   =~  "abc"   "cde"   "def"
    --repo2|-b|m            "Provide two repo name"
        <arg1>:repo_type=""               =   "abc"   "cde"   "def"
        <arg2>:repo_t=
    --priviledge|-p         "Provide privilidge"                     <priviledge_type>:access=private
    --no_type_arg|-n        "Test no type argument but have default" <no_type_arg>=default
    --flag1|-f              "Flag1 that you can use \\\$\{flag1:-false} to get the bool value"
    --flag1222|-g           "Flag1222 that you can use \\\$\{flag1222:-false} to get the bool value"
    #1                      "Test rest argument #1 when exist option and flag"
    #222222                 "Provide number #2"
    #3                      "Provide number #3"
A
    param:run
    echo "regex_arg1: $regex_arg1"
    echo "regex_arg2: $regex_arg2"
    echo "param repo: $repo"
    echo "param repo2: $repo2_n  $repo2_1_1 $repo2_1_2"
    echo "param priviledge: $priviledge"
    echo "param no_type_arg: $no_type_arg"
    echo "multiple line argument: $mul_line_arg"
    echo "flag1: ${flag1:-false}"
    echo "flag1222: ${flag1222:-false}"
    echo "rest argument: $1"
}

paramtest_marg() {
    param:scope     "paramtest/$O"
    param:dsl       '
option:
    --card|-c|m "Provide multiple action card in following format. [ <title> <message-url> <picture-url> ] ..."
            <title>
            <message-url>:url_type
            <picture-url>:url_type
'
    param:run

    IFS="
"
    for i in $(param_marg card); do
        echo "title: $(param_marg_get card "$i" 1)"
        echo "message-url: $(param_marg_get card "$i" 2)"
        echo "picture-url: $(param_marg_get card "$i" 3)"
    done
}

paramtest_longoption(){
    param:scope     "paramtest/$O"
    param:dsl      <<A
type:
    access  =   private public
    repo_t  =~  "cde"   "def"
advise:
    repo  list_repo all
    #1    list_repo
option:
    --mul_line_arg|-m       "Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument Test multiple line argument"            <mline_arg>:mline_arg_type
    --regex_arg1            "Test an argument with regex 1"          <>=0     =~  [0-9]*
    --regex_arg2            "Test an argument with regex 2"          <>=20    =~  ([1-9]?[0-9]|100)
    --flag1|-f              "Flag1 that you can use \\\$\{flag1:-false} to get the bool value Flag1 that you can use \\\$\{flag1:-false} to get the bool value Flag1 that you can use \\\$\{flag1:-false} to get the bool value Flag1 that you can use \\\$\{flag1:-false} to get the bool value"
    --flag1222|-g           "Flag1222 that you can use \\\$\{flag1222:-false} to get the bool value"
    --candi_null    "Test null option to use candidate"  <candi_null>:candis="abc"        =  abc  cde     def
    --name          "Provide name"      <name>=""
    --description   "Description"       <desc>="a b"
    --cidr          "Subnet of 172.16.0.0/12, 10.0.0.0/8, 192.168.0.0/16"    <cidr>=3
    #1                      "Test rest argument #1 when exist option and flag Test rest argument #1 when exist option and flag Test rest argument #1 when exist option and flag Test rest argument #1 when exist option and flag Test rest argument #1 when exist option and flag"
    #222222                 "Provide number #2"
    #3                      "Provide number #3"

A
    param:run
    echo "regex_arg1: $regex_arg1"
    echo "regex_arg2: $regex_arg2"
    echo "param repo: $repo"
    echo "param repo2: $repo2_n  $repo2_1_1 $repo2_1_2"
    echo "param priviledge: $priviledge"
    echo "param no_type_arg: $no_type_arg"
    echo "multiple line argument: $mul_line_arg"
    echo "flag1: ${flag1:-false}"
    echo "flag1222: ${flag1222:-false}"
    echo "rest argument: $1"
}

test_mul_arg(){
    @assert stdout paramtest_marg  \
        --card "test1" "https://www.dingtalk.com" "https://gw.alicdn.com" \
        --card "test2" "https://www.dingtalk.com" "https://gw.alicdn.com" \
        --card "test3" "https://www.dingtalk.com" "https://gw.alicdn.com" \
        --card "test4" "https://www.dingtalk.com" "https://gw.alicdn.com" \
        --card "test5" "https://www.dingtalk.com" "https://gw.alicdn.com" <<A
title: test1
message-url: https://www.dingtalk.com
picture-url: https://gw.alicdn.com
title: test2
message-url: https://www.dingtalk.com
picture-url: https://gw.alicdn.com
title: test3
message-url: https://www.dingtalk.com
picture-url: https://gw.alicdn.com
title: test4
message-url: https://www.dingtalk.com
picture-url: https://gw.alicdn.com
title: test5
message-url: https://www.dingtalk.com
picture-url: https://gw.alicdn.com
A
}

test_option(){
    local mul_line_arg
    mul_line_arg="aaa
bbb
ccc"

    O=xxxx
    @assert stdout paramtest --candi_null abc option --repo abc -b abc cde -m "$mul_line_arg" dddd<<A
regex_arg1: 0
regex_arg2: 20
param repo: abc
param repo2: 1  abc cde
param priviledge: private
param no_type_arg: default
multiple line argument: aaa
bbb
ccc
flag1: false
flag1222: false
rest argument: dddd
A
}

@assert:file:func