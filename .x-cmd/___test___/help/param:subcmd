# shellcheck shell=sh

# Section: test prepare
param_gh(){
    param:subcmd param_gh                            \
        "repo|re"           "repo command"           \
        current             "set current owner, repo"
    param:subcmd:try

    param:subcmd param_gh_repo                       \
        release       "manage release"               \
        member        "Authorize gh"
    param:subcmd:try

    param:subcmd param_gh_org        \
        del           "delete org"
    param:subcmd:try
    param:run
}

param_gh_repo(){
    param:subcmd param_gh_repo                \
        create         "create repo"          \
        rm             "remove repo"
    param:subcmd:try

    param:dsl <<A
advise:
    #1          ___x_cmd_tldr_lsname
options:
    #1          "use the selected file to rollback"
A
    param:run
}

param_gh_repo_release(){
    param:dsl <<A
advise:
    #1          ___x_cmd_tldr_lang
options:
    #1          "use the selected file to rollback"
A
    param:run
}

param_gh_repo_member(){
    param:void
}

param_gh_repo_create(){
    param:void
}

param_gh_repo_rm(){
    param:void
}

param_gh_current(){
    param:void
}

param_gh_org_del(){
    param:void
}
# EndSection

test_param_subcmd_help(){
    @assert stdout param_gh help <<A

SUBCOMMANDS:
    repo,re   repo command
    current   set current owner, repo
    release   manage release
    member    Authorize gh
    del       delete org

Run 'CMD SUBCOMMAND --help' for more information on a command

A

    @assert stdout param_gh re --help <<A

ARGS:
    #1   use the selected file to rollback

SUBCOMMANDS:
    create   create repo
    rm       remove repo

Run 'CMD SUBCOMMAND --help' for more information on a command

A
}
@assert:file:func