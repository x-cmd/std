# shellcheck shell=sh disable=SC2039,SC2142,SC3043

param_default put paramtest/xxx priviledge public
option_and_flag(){
    param:scope     "paramtest/$O"
    param:dsl      <<A
type:
    access  =   private public
    repo_t  =~  "cde"   "def"
advise:
    repo  list_repo all
    #1    list_repo
option:
    --mul_line_arg|-m       "Test multiple line argument"            <mline_arg>:mline_arg_type
    --regex_arg1            "Test an argument with regex 1"          <>=0     =~  [0-9]*
    --regex_arg2            "Test an argument with regex 2"          <>=20    =~  ([1-9]?[0-9]|100)
    --repo|-r               "Provide repo name"                      <>:repo_type   =~  "abc"   "cde"   "def"
    --repo2|-b|m            "Provide two repo name"
        <arg1>:repo_type=""               =   "abc"   "cde"   "def"
        <arg2>:repo_t=
    --priviledge|-p         "Provide privilidge"                     <priviledge_type>:access=private
    --no_type_arg|-n        "Test no type argument but have default" <no_type_arg>=default
    --flag1|-f              "Flag1 that you can use \\\$\{flag1:-false} to get the bool value"
    --flag1222|-g           "Flag1222 that you can use \\\$\{flag1222:-false} to get the bool value"
    #1                      "Test rest argument #1 when exist option and flag"
    #222222                 "Provide number #2"
    #3                      "Provide number #3"
A
    param:run
    printf "%s\n" "regex_arg1: $regex_arg1"
    printf "%s\n" "regex_arg2: $regex_arg2"
    printf "%s\n" "param repo: $repo"
    printf "%s\n" "param repo2: $repo2_n  $repo2_1_1 $repo2_1_2"
    printf "%s\n" "param priviledge: $priviledge"
    printf "%s\n" "param no_type_arg: $no_type_arg"
    printf "%s\n" "multiple line argument: $mul_line_arg"
    printf "%s\n" "flag1: ${flag1:-false}"
    printf "%s\n" "flag1222: ${flag1222:-false}"
    printf "%s\n" "rest argument1: $1"
    printf "%s\n" "rest argument2: $2"
}

test_option_and_flag(){
    @assert stdout "O=xxx; option_and_flag --repo abc -b abc cde --no_type_arg \"aaa 'bbb'\" -m \"$mul_line_arg\" --flag1 dddd 'aaa \"bbb\"'"<<A
regex_arg1: 0
regex_arg2: 20
param repo: abc
param repo2: 1  abc cde
param priviledge: public
param no_type_arg: aaa 'bbb'
multiple line argument: aaa
bbb
ccc
flag1: true
flag1222: false
rest argument1: dddd
rest argument2: aaa "bbb"
A
}
@assert:file:func