# shellcheck shell=sh disable=SC3043

# For centos users
# Reference: https://www.jianshu.com/p/969d128e0c9b

___x_cmd_proxy_dnf(){
    param:dsl <<A
subcommands:
    url             "Provide url of mirror candidates"
    rollback|unset  "Rollback the download mirror"
    replace         "Replace the download mirror"
A
    param:run
    
    if ! command -v dnf >/dev/null; then
        proxy_log error "command not found: dnf, you should install dnf in your system."
        return 1
    elif [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_dnf_"${PARAM_SUBCMD}" "$@"
    else
        proxy_log error "Unknown subcommand: $PARAM_SUBCMD"
        ___x_cmd_proxy_dnf _param_help_doc  >&2
    fi
}

___x_cmd_proxy_dnf_url(){
    param:dsl <<A
subcommands:
    aliyun         "aliyun mirror"
    ustc           "USTC mirror"
    tuna           "TUNA mirror"
    official       "Official mirror"
A
    param:run
    
    case "$PARAM_SUBCMD" in
        aliyun)     printf "http://mirrors.aliyun.com/centos"       ;;
        ustc)       printf "https://mirrors.ustc.edu.cn"            ;;
        tuna)       printf "https://mirrors.tuna.tsinghua.edu.cn"   ;;
        official)   printf "http://mirror.centos.org"               ;;
        *)          
                    printf "Unknown mirror: %s" "$PARAM_SUBCMD" >&2
                    ___x_cmd_proxy_dnf_url _param_help_doc  >&2
                    ;;
    esac
}

___x_cmd_proxy_dnf_replace() {
    param:dsl <<A
subcommands:
    aliyun         "aliyun mirror"
    ustc           "USTC mirror"
    tuna           "TUNA mirror"
    official       "Official mirror"
A
    param:run

    local src_dir
    src_dir="/etc/yum.repos.d"
    ___proxy_backup $src_dir dnf

    local url
    local src
    src=${PARAM_SUBCMD:-aliyun}
    if ! url="$(___x_cmd_proxy_dnf_url "$src")"; then
        proxy_log error "Failed to get url of mirror: $src"
    fi
    proxy_log info "Setting proxy_apt mirror :
    $url"

    local version_id
    xrc os && os r - version_id
    case "$version_id" in
        *8*) 
            local src_path1
            src_path1="/etc/yum.repos.d/CentOS-Linux-AppStream.repo"
            local src_path2
            src_path2="/etc/yum.repos.d/CentOS-Linux-BaseOS.repo"

            local tmp1
            tmp1="$(cat $src_path1)"
            local tmp2
            tmp2="$(cat $src_path2)"

            if [ "$(id -u)" -ne 0 ]; then
                proxy_log info "using sudo"
                printf "%s" "" | sudo awk -v tmp1="$tmp1" -v url="$url" '{res=gsub(/^mirrorlist=[.*]/,"baseurl=url/$releasever/AppStream/$basearch/os/",tmp1);print res}' | sudo tee "$src_path1"
                printf "%s" "" | sudo awk -v tmp2="$tmp2" -v url="$url" '{res=gsub(/^mirrorlist=[.*]/,"baseurl=url/$releasever/BaseOS/$basearch/os/",tmp2);print res}' | sudo tee "$src_path2"        
            else
                printf "%s" "" | awk -v tmp1="$tmp1" -v url="$url" '{res=gsub(/^mirrorlist=[.*]/,"baseurl=url/$releasever/AppStream/$basearch/os/",tmp1);print res}' > "$src_path1"
                printf "%s" "" | awk -v tmp2="$tmp2" -v url="$url" '{res=gsub(/^mirrorlist=[.*]/,"baseurl=url/$releasever/AppStream/$basearch/os/",tmp1);print res}' > "$src_path2"
            fi
            ;;
        *)
            proxy_log error "Unsupported version: $version_id"
            return 1
            ;;
    esac

    proxy_log info "Restarting dnf"
    dnf clean all
    dnf makecache
}

___x_cmd_proxy_dnf_rollback() {
    param:dsl <<A
advise:
    #1          x proxy dnf rollback ls
options:
    #1          "use the selected file to rollback"
subcommand:
    ls          "list all file you can rollback"
A
    param:run

    if [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_dnf_rollback_"${PARAM_SUBCMD}" "$@"
        return
    fi

    if [ "$(id -u)" -ne 0 ]; then
        proxy_log info "using sudo"
        IS_ROOT=1 ___proxy_rollback /etc/yum.repos.d dnf "$1"
        sudo dnf makecache
    else
        ___proxy_rollback /etc/yum.repos.d dnf "$1"
        dnf makecache
    fi  
}

___x_cmd_proxy_dnf_rollback_ls() {
    param:void
    ___proxy_rollback_ls dnf
}

___x_cmd_proxy_dnf_tutorial(){
    param:void
    cat <<A
A
}