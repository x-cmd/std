# shellcheck shell=sh disable=SC3043,2120

# Section: lsfile install
___x_cmd_yanfa_mod_lsfile0()(
    param:void
    IFS="
"

    cd "$(x wsroot)" || exit

    local i
    ___x_cmd_glob file latest \
        "v*" \
        "_v*/**" \
        "lib/**" \
        "third-party/**" | \
    while read -r i; do
        [ "$i" != "${i#*_test*}" ] && continue
        # [ "$i" != "${i%.test}" ] && continue
        [ -f "$i" ] && printf "%s\n" "$i"
    done
)

___x_cmd_yanfa_mod_lsfile()(
    x:trace yanfa/mod/install/tmp
    param:void
    if [ -f "$(x wsroot)/.x-cmd/lsfile" ]; then
        # TODO: using engine to directly run the local file
        X_DISABLE_WORKSPACE_EXECUTION_CONFIRMATION=1 x ws lsfile
    else
        ___x_cmd_yanfa_mod_lsfile0
    fi
)

___x_cmd_yanfa_mod_install_tmp(){
    local src="$2"
    local dst="$1/$src"
    yanfa:debug "$(printf "Moving:   %-30s\t%s\n" "$src" "$dst")"
    mkdir -p "$(dirname "$dst")"
    cp "$src" "$dst"
}

___x_cmd_yanfa_mod_install()(
    x:trace yanfa/mod/install
    param:void
    local current_folder
    current_folder="$HOME/.x-cmd/$(basename "$(x wsroot)")"
    [ ! -d "$current_folder" ] || (
        rm -rf "$current_folder" && mkdir -p "$current_folder"
    )

    if [ -f "$(x wsroot)/.x-cmd/install" ]; then
        yanfa:info "Running in workspace: install"
        # TODO: using engine to directly run the local file
        x ws install "$@"
    else
        yanfa:info "Running module yanfa subcmd: install to $current_folder"

        ___x_cmd_yanfa_mod_lsfile | {
            awk=0
            sh=0
            txt=0
            json=0
            total=0
            while read -r line; do
                res="$res\t$line"
                total=$(( total + 1 ))
                case "$line" in
                    *.txt)      txt=$(( txt+1 )) ;;
                    *.awk)      awk=$(( awk+1 )) ;;
                    *.json)     json=$(( json+1 )) ;;
                    *)          sh=$(( sh + 1 )) ;;
                esac
                ___x_cmd_yanfa_mod_install_tmp "$current_folder" "$line"
            done
            x log :yanfa info "Installed $total files: sh=$sh awk=$awk json=$json txt=$txt"
        }

        # buggy code
        # ___x_cmd_yanfa_mod_lsfile | ___x_cmd_args 1 ___x_cmd_yanfa_mod_install_tmp "$current_folder"
    fi
)

# EndSection

# Section: pkg

___x_cmd_yanfa_mod_tgz(){
    param:void
    WSROOT="$(x wsroot)"

    local scope
    scope="$(___x_cmd_yanfa_ws_name)"
    scope="${scope#*/}"

    mkdir -p "$WSROOT/dist" &&
        eval "tar czvf $scope.tgz $(___x_cmd_yanfa_mod_lsfile | sort | uniq | tr '\n' ' ')" &&
        mv "$scope.tgz" "$WSROOT/dist/$scope.tgz" &&
        ls -alh "$WSROOT/dist/$scope.tgz"
}

# EndSection

___x_cmd_yanfa_mod_wc(){
    x:trace yanfa/mod/wc
    param:void
    ___x_cmd_yanfa_mod_lsfile "$@" | xargs wc | sort -n -r | less
}

# Section: devi
___x_cmd_yanfa_mod_devi(){
    param:void
    local name
    name="$(___x_cmd_yanfa_mod_name)"
    name="ws-${name%/*}-${name#*/}"

    local id
    id="$(docker container ls -a -f name=ws-x-bash-dev --quiet)"

    if [ -z "$id" ]; then
        docker run -it --network host --name "$name" \
            -v "$HOME/.ssh:/root/.ssh" \
            -v "$(x wsroot):/$name}" \
            -v "$(x wsroot):/ws" \
            xcmd/alpine-dev bash
    else
        docker container start "$id"
        docker container exec -it "$id" bash
    fi
}

# EndSection

# Section: ls

___x_cmd_yanfa_mod_getfp(){
    local filename=modlist
    local fp
    fp="$(pwd)/$filename"
    [ -f "$fp" ] && printf "%s" "$fp" && return

    fp="$(x wsroot)/$filename"
    [ -f "$fp" ] && printf "%s" "$fp" && return

    return 1
}


___x_cmd_yanfa_mod_ls_latest(){
    # ___x_cmd_curl_gitx modlist
    curl https://gitee.com/x-cmd/x-cmd/raw/main/modlist 2>/dev/null \
        | ___x_cmd_yanfa_mod_ls_awk_
    local code=$?
    yanfa:warn "___x_cmd_yanfa_mod_ls_latest: $code"
    return $code
}

___x_cmd_yanfa_mod_ls_awk_(){
    awk -v mode="${1:-all}" '
($0!="")&&($0 !~ /[ ]*#/){
    mod=$1
    gsub(/^\+/, "", mod)
    if (mode == "all") print mod
    else if (mode == "core") { if ($1 ~ /^\+/) print mod }
    else if (index(mode, mod) > 0) print mod
}'
}

___x_cmd_yanfa_mod_ls(){
    param:void
    local fp="${MODLIST:-""}"
    if [ -z "$fp" ]; then
        if ! fp="$(___x_cmd_yanfa_mod_getfp)"; then
            x log :yanfa "Cannot find file modlist. Using ls_latest, source is https://github.com/x-cmd/x-cmd/raw/main/modlist"
            ___x_cmd_yanfa_mod_ls_latest
            return
        fi
    fi

    x log :yanfa "Getting source from local modlist: $fp"
    ___x_cmd_yanfa_mod_ls_awk_ "$@" <"$fp"
}

# EndSection

___x_cmd_yanfa_mod(){
    x:trace yanfa/mod
    if [ -f "$(x wsroot)/.x-cmd/$1" ]; then
        x _ws "$@"
        return
    fi

    param:dsl <<A
subcommand:
    ls          "ls mod"
    wc          "wc"
    devi        "container"
    tgz         "package"

    install      "cp file to home folder"
    lsfile      "ls file to p"
    lsfile0     "ls file to p"

    init        "init"

    pull        "pull"
    push        "push"
    name        "get workspace name from git config"
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        ___x_cmd_yanfa_mod help
        return 1
    fi

    if command -v "___x_cmd_yanfa_mod_${PARAM_SUBCMD}" >/dev/null; then
        "___x_cmd_yanfa_mod_$PARAM_SUBCMD" "$@"
    else
        case "$PARAM_SUBCMD" in
            pull|push|name)
                "___x_cmd_yanfa_ws_$PARAM_SUBCMD" "$@"
                ;;
            init)
                "___x_cmd_yanfa_init" "$@"
        esac
    fi

}
