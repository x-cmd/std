# shellcheck shell=sh disable=SC3043
# Reference: 

___x_cmd_proxy_apt(){
    param:dsl <<A
subcommand:
    url            "Provide url of mirror candidates"
    replace|set    "Setting the mirror"
    rollback       "Rollback the source to the old one configured"
A
    param:run

    if ! command -v apt >/dev/null || ! command -v apt-get >/dev/null ; then
        proxy_log error "command not found: apt or apt-get, you should install apt in your system."
        return 1
    elif [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_apt_"${PARAM_SUBCMD}" "$@"
    else
        proxy_log error "Unknown subcommand: $PARAM_SUBCMD"
        ___x_cmd_proxy_apt _param_help_doc  >&2
    fi
}

___x_cmd_proxy_apt_url(){
    param:dsl <<A
subcommand:
    ali                 "aliyun mirror url"
    tuna                "tuna mirror url"
A
    param:run

    case "$PARAM_SUBCMD" in
        ali)                    printf mirrors.aliyun.com                  ;;
        tuna)                   printf mirrors.tuna.tsinghua.edu.cn        ;;
        *)                      ___x_cmd_proxy_apt_url _param_help_doc >&2          ;;
    esac
}

# TODO: Just replace the original text, maybe not the best way.
___x_cmd_proxy_apt_replace() {
    param:dsl <<A
subcommand:

    ali                 "aliyun"
    tuna                "tuna"
A
    param:run

    # TODO: Some problem in ubuntu 12.04
    local url
    if url="$(___x_cmd_proxy_apt_url "${PARAM_SUBCMD:-tuna}")"; then
        proxy_log info "Setting ___x_cmd_proxy_apt mirror :
    $url"

        local src_path
        src_path="/etc/apt/sources.list"
        ___proxy_backup /etc/apt/sources.list apt

        local tmp
        tmp="$(cat $src_path)"
        
        # If there is no root permission, use sudo
        if [ "$(id -u)" -ne 0 ]; then
            proxy_log info "using sudo"
            printf "%s" "$tmp" | sudo awk -v url="$url" -F '\n' '{ gsub("[\\.a-z]+\\.(ubuntu\\.com|debian\\.org)", url, $1); print $1 }' | sudo tee "$src_path"
        else
            printf "%s" "$tmp" | awk -v url="$url" -F '\n' '{ gsub("[\\.a-z]+\\.(ubuntu\\.com|debian\\.org)", url, $1); print $1 }' > "$src_path"
        fi
    fi
}

# Rollback from the last backup file.
# Get the last backup file from the backup directory.
___x_cmd_proxy_apt_rollback() {
    param:dsl <<A
advise:
    #1          x proxy apt rollback ls
options:
    #1          "use the selected file to rollback"
subcommand:
    ls          "list all file you can rollback"
A
    param:run

    if [ -n "$PARAM_SUBCMD" ]; then
        ___x_cmd_proxy_apt_rollback_"${PARAM_SUBCMD}" "$@"
        return
    fi

    if [ "$(id -u)" -ne 0 ]; then
        proxy_log info "using sudo"
        IS_ROOT=1 ___proxy_rollback /etc/apt/sources.list apt "$1"
    else
        ___proxy_rollback /etc/apt/sources.list apt "$1"
    fi 
}

___x_cmd_proxy_apt_rollback_ls() {
    param:void
    ___proxy_rollback_ls apt
}

___x_cmd_proxy_apt_tutorial(){
    param:void
    cat <<A
A
}