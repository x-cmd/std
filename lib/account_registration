# shellcheck shell=sh disable=SC1072,SC3043

___x_cmd_hub_register(){
    param:void
    local op="$1"
    local _SELECT
    case "$op" in
        wx|weixin)              ___x_cmd_hub_register_weixin ;;
        tg|telegram)            ___x_cmd_hub_register_telegram ;;
        "")
                ___x_cmd_ui_select "_SELECT" \
                    "Register Methods:" \
                        "Open Browser to x-cmd.com" \
                        "Weixin QR"
                        # "Email Verification"
                        # "Telegram Bot"

                # TODO: Should move official site login to the first of the list
                case "$_SELECT" in
                    1)          ___x_cmd_hub_register_official_site "$@"  ;;
                    2)          ___x_cmd_hub_register_weixin        "$@"  ;;
                    # 3)          ___x_cmd_hub_register_email         "$@"  ;;
                    # 4)          ___x_cmd_hub_register_telegram      "$@"  ;;
                    *)          hub_log error "Unknown _SELECT: $_SELECT" ;;
                esac
                ;;
        *)
                ___x_cmd_hub_register_official_site "$@" ;;
    esac
}

# Section: Registration

___x_cmd_hub_register_official_site(){

    local username="${1}"
    if [ -z "$username" ]; then
        printf "%s" "Username: "
        read -r username
    fi

    # if [ -n "$(___x_cmd_hub_token)" ]; then
    #     # TODO: ask
    #     printf "Detect token in this folder. Erase the token in the disk?" >&2
    #     ___x_cmd_hub_token ""
    # fi

    local token_to_activate
    token_to_activate="$(___x_cmd_hub_token_generate)"

    ___x_cmd_http_browse "$___X_CMD_HUB_SERVICE_URL/xlogin?token_to_activate=${token_to_activate}&username=${username}"
    printf "Please register to hub.x-cmd.com, then press [Enter] to continue: "
    read -r _

    local userinfo
    if userinfo="$(___x_cmd_hub_get_and_save_userinfo_by_token "${token_to_activate}")" ; then
        hub_log info "Register Successfully, ${userinfo}"
    else
        hub_log error "Register Failed"
    fi
}

___x_cmd_hub_register_weixin(){
    local username="${1}"
    if [ -z "$username" ]; then
        printf "%s" "Username: "
        read -r username
    fi

    local token_to_activate
    token_to_activate="$(___x_cmd_hub_token_generate)"
    ___x_cmd_hub_print_qrcode "$(___x_cmd_hub_wechat_register_url "${token_to_activate}" "$username")"
    printf "%s" "Please scan the QR code above, then press [Enter] to continue: "
    read -r _

    local userinfo
    if userinfo="$(___x_cmd_hub_get_and_save_userinfo_by_token "${token_to_activate}")" ; then
        hub_log info "Register Successfully, ${userinfo}"
    else
        hub_log error "Register Failed"
    fi
}

# EndSection

# Section: frozen

___x_cmd_hub_register_email(){
    local email="${1:-""}"
    if [ -z "$email" ]; then
        printf "%s" "Email: "
        read -r email
    fi

    local res
    hub_log debug "Registering email: $email"
    if ! res="$(___x_cmd_httpget "$___X_CMD_HUB_SERVICE_URL/api/v0/account/register/$email")" ; then
        hub_log error "Failed to ls file: $res"
        return 1
    fi
    hub_log debug "response: ${res}"

    local ticket
    ticket="$(printf "%s" "$res" | x jq -r '.ticket')"

    # if [ "$msg" = "$result" ]; then
    #     ticket="${result#TICKET=}"
    #     ___x_cmd_hub_verify "$email" "$ticket"
    # else
    #     printf "%s\n" "$result"
    # fi
}

# EndSection
