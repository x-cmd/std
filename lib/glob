
# x glob abc*
# glob file directory
# TODO: notice, the glob pattern is actually a regex pattern with ** and * extension. For example, dot is refer as any character, rather than actual .
alias glob=___x_cmd_glob

___x_cmd_globu(){
    ___x_cmd_glob "$@" | sort | uniq
}

___x_cmd_glob(){
    if [ $# -eq 1 ]; then
        ___x_cmd_glob file "$@"
        return
    fi

    local op="${1}"; shift

    case "$op" in
        all|dir|file)       ;;
        *)                  ___x_cmd_glob file "$op" "$@";  return ;;
    esac

    while [ $# -gt 0 ]; do
        local pattern="${1:?Please provide pattern}";   shift
        local a
        a="$(printf "" | awk -v pattern="${pattern}" '
        function handle(elem){
            gsub(/\*\*/, "([^/]+/){0,}[^/]+", elem)
            gsub(/\*/, "[^/]+", elem)
            return elem
        }

        BEGIN{
            arrl = split(pattern, arr, /\//)
            if (arrl == 1) {
                print ""
                print "^" handle(pattern) "$"
            } else {
                folder = ""
                for (i=1; i<=arrl; ++i) {
                    if (arr[i] ~ /\*/)  break
                    if (i == 1)         folder = arr[i]
                    else                folder = folder "/" arr[i]
                }
                print folder
                pat = ""
                for (; i<=arrl; ++i) {
                    arr[i] = handle(arr[i])
                    if (pat == "")      pat = arr[i]
                    else                pat = pat "/" arr[i]
                }
                pat = "^" pat "$"
                print pat
            }
        }')"
        local folder="${a%
*}"
        pattern="${a#*
}"


        (
            if [ -n "$folder" ]; then
                [ -d "$folder" ] || return
                eval cd "$folder"
            fi

            case "$op" in
                all)        find . ;;
                dir)        find . -type dir ;;
                file)       find . -type f ;;
                *)          printf "Please provide argument.\n" >&2; return ;;
            esac |\
            awk -v pattern="$pattern" -v prefix="$folder" '
                BEGIN { if (prefix != "") prefix = prefix "/"; }
                {
                    if ( ($0 !~ /^[ \t]+$/) && ($0 !~ /:$/)) {
                        tgt = substr($0, 3)
                        if (match(tgt, pattern)) {
                            print prefix tgt
                        }
                    }
                }
            '
        )
    done
}
