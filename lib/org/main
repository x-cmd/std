# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# define lazy loader
# ___x_cmd_definelazyloader   ___x_cmd_gt_org_member           gt/lib/org/member

___x_cmd_gt_org(){
    param:scope     ___x_cmd_gt
    param:subcmd ___x_cmd_gt_org                            \
        ls                      "List all org"              \
        info                    "Show org information"      \
        create                  "Create org"                \
        repo                    "List all repos"            \
        quit                    "Quit org"                  \
        issue                   "List all issues"           \
        member                  "org member management"
    param:subcmd:try
    param:run

    ___x_cmd_gt_org _param_help_doc
    gt_log warn "Subcmd Not Found."
    return 1
}

# Section: list & info
# shellcheck disable=SC2154
# https://gitee.com/api/v5/swagger#/getV5UserOrgs
___x_cmd_gt_org_ls(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    --admin         "admin"             <>:Bool=false
    --page          "page"              <>=""
    --per_page      "per_page"          <>=""
'
    param:run

    ___gt_ui_mutual ___x_cmd_gt_get_multi "/v5/user/orgs" admin <<A
        ___ui_table_json Id=.id Name=.name FollowCount=.follow_count Url=.repos_url -- \$@
A
}

# shellcheck disable=SC2154
# https://gitee.com/api/v5/swagger#/getV5OrgsOrg
___x_cmd_gt_org_info(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1|--org            "organization path"     <>=""
'
    param:run

    ___x_cmd_gt_http get "/v5/orgs/${1:?Provide organization}" | \
    {
        ___x_cmd_git_json_query_rename id=.id name=.name public=.public follow_count=.follow_count owner=.owner.name
        if [ -n "$id" ]; then
            ___x_cmd_ui_tf true   "Success" "id: $id" "name: $name" "public: $public" "follow_count: $follow_count" "owner: $owner"
        else
            ___x_cmd_ui_tf false  "Couldn't find any organization info data by $1"
            return 1
        fi
    }
}
# EndSection

# Section: create
# It is very rare TODO: batch?
# shellcheck disable=SC2181
# https://gitee.com/api/v5/swagger#/postV5UsersOrganization
___x_cmd_gt_org_create(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    --org           "organization path"     <>=""
    --description   "description"           <>=""
    #1              "organization name"     <>
'
    param:run

    org=${org:-$1}
    local gen_gt_json
    local name
    name="$1"
    gen_gt_json="$(param:option2json +name)"

    ___x_cmd_gt_http post "/v5/users/organization" "$gen_gt_json" | \
    {
        ___x_cmd_git_json_query_rename id=.id
        if [ -n "$id" ]; then
            ___x_cmd_ui_tf true   "Creating Organization Successfully"
        else
            ___x_cmd_ui_tf false  "Creating organization failure by $1."
            return 1
        fi
    }
}
# EndSection

# Section: org repo
___x_cmd_gt_org_repo(){
    param:subcmd ___x_cmd_gt_org_repo           \
        ls          "list repo"                 \
        create      "org repo create"
    param:subcmd:try
    param:run

    ___x_cmd_gt_org_repo _param_help_doc
    gt_log warn "Subcmd Not Found."
    return 1
}

# https://gitee.com/api/v5/swagger#/getV5OrgsOrgRepos
___x_cmd_gt_org_repo_ls(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #1|--org        "Please provide organization"       <>:Address
    --type          "type"                              <>:RepoAllAccess="all"
    --page          "page"                              <>=""
    --per_page      "per_page"                          <>=""
'
    param:run
    local gen_gt_json
    gen_gt_json="$(param:option2json -page -per_page)"

    local ___gt_error_msg="Couldn't find any data by: ${1}"
    ___gt_ui_mutual ___x_cmd_gt_get_multi "/v5/orgs/$1/repos" type <<A
        ___ui_table_json Id=.id Name=.name public=.public OwnerName=.owner.name DefaultBranch=.default_branch \
            OpenIssuesCount=.open_issues_count license=.license Url=.html_url -- \$@
A
}
# EndSection

# Section: quit
# shellcheck disable=SC2181
# https://gitee.com/api/v5/swagger#/deleteV5UserMembershipsOrgsOrg
___x_cmd_gt_org_quit(){
    param:scope     ___x_cmd_gt
    param:dsl       '
options:
    #n      "orgs"
'
    param:run

    [ $# -eq 0 ] && gt_log error "At least one org spatial address is needed." && return 1

    for org in "$@"; do
        # TODO:http handleï¼Œdelete repo return data is null.Status: 204 No Content
        if ___x_cmd_gt_http delete "/v5/user/memberships/orgs/${org##*/}" >/dev/null; then
            gt_log info  "Quit $org organization successfully."
        else
            gt_log error "Quit $org organization failure"
            return 1
        fi
    done
}
# EndSection
