# shellcheck shell=sh disable=SC3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

xrc param/v0

proxy(){
    param:dsl <<A
subcommands:
    set                     "set proxy in local shell environments: http_proxy, https_proxy"
    unset                   "unset all proxy in the shell environment"
    version                 "provide version"

    pip                     "Setting the pip mirrors"
    npm                     "Setting the npm mirrors"
    maven                   "Setting the maven mirrors"
    go                      "Setting the go mirrorss"
    gem                     "Setting the pip mirrors"
    cargo                   "Setting the cargo mirrors for rust development"

    apt                     "apt mirrors"
    yum                     "Setting the yum mirrors"
    brew                    "Setting the homebrew mirrors"
    apk                     "alpine mirrors"
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        proxy help
        return
    fi

    case "$PARAM_SUBCMD" in
        set)        ___proxy_set "$@" ;;
        unset)      ___proxy_unset "$@" ;;
        version)    ___proxy_version ;;
        *)          ___proxy_exec "${PARAM_SUBCMD}" "$@" ;;
    esac
    
}

# Section: plugins

# Load in need.
for i in brew pip npm go; do #  yum maven
    xrc "proxy/_v0/$i"
done

___proxy_version(){
    param:void
    printf "%s" v0
}

___proxy_exec(){
    param:void
    local subcmd="${1:?Subcmd}"
    # Consider loading everytime ?
    # Cache only for 12 hours

    if xrc "proxy/_v0/$subcmd"; then
        shift
        "proxy_$subcmd" "$@"
    else
        proxy_log error "Module not found. Autoloading failure."
        return 1
    fi
}

# EndSection

# Section: proxy setting

# proxy set 127.0.0.1:7070
# proxy set 127.0.0.1:7070 ftp=ftp://127.0.0.1:7070

______proxy_inner_set(){
    local proxy="$2"

    case $proxy in
        https://*|http://*|socks*://*|ftp*://*)     ;;
        *)          
            proxy="http://$proxy"
            printf "%s\n" "Considered as $proxy" >&2
            ;;
    esac
    case "$1" in
        http)
                export http_proxy="$proxy"
                export HTTP_PROXY="$proxy"
                printf "  SET http_proxy=%s\n" "$proxy"
                printf "  SET HTTP_PROXY=%s\n" "$proxy"
                ;;
        https)
                export https_proxy="$proxy"
                export HTTPS_PROXY="$proxy"
                printf "  SET https_proxy=%s\n" "$proxy"
                printf "  SET HTTPS_PROXY=%s\n" "$proxy"
                ;;    
        ftp)
                export ftp_proxy="$proxy"
                export FTP_PROXY="$proxy"
                printf "  SET ftp_proxy=%s\n" "$proxy"
                printf "  SET FTP_PROXY=%s\n" "$proxy"
                ;;
        all)
                export all_proxy="$proxy"
                export ALL_PROXY="$proxy"
                printf "  SET all_proxy=%s\n" "$proxy"
                printf "  SET ALL_PROXY=%s\n" "$proxy"
    esac
}

___proxy_set(){
    param:void

    if [ "$#" -eq 0 ]; then
        printf "Current proxy setting:\n"
        printf "  http_proxy=%s\n" "$http_proxy"
        printf "  HTTP_PROXY=%s\n" "$HTTP_PROXY"
        printf "  https_proxy=%s\n" "$http_proxy"
        printf "  HTTPS_PROXY=%s\n" "$HTTPS_PROXY"
        printf "  ftp_proxy=%s\n" "$ftp_proxy"
        printf "  FTP_PROXY=%s\n" "$FTP_PROXY"
        printf "  all_proxy=%s\n" "$all_proxy"
        printf "  ALL_PROXY=%s\n" "$ALL_PROXY"
        return
    fi

    local i
    while [ "$#" -gt 0 ]; do
        case "$1" in
            http=*)         ______proxy_inner_set http "${1#http=}"  ;;
            https=*)        ______proxy_inner_set https "${1#https=}" ;;
            ftp=*)          ______proxy_inner_set ftp "${1#ftp=}"  ;;
            all=*)          ______proxy_inner_set all "${1#all=}"  ;;
            *)              
                            local proxy="$1"
                            case $proxy in
                                https://*|http://*|socks*://*|ftp*://*)     ;;
                                *)          
                                    proxy="http://$proxy"
                                    printf "%s\n" "Considered as $proxy" >&2
                                    ;;
                            esac
                            local i
                            for i in http https ftp all; do
                                ______proxy_inner_set http "$proxy"
                            done
        esac
        shift
    done
}

___proxy_unset(){
    param:void

    if [ "$#" -eq 0 ]; then
        ___proxy_unset http https ftp all
        return
    fi

    while true; do
        case "$1" in
            http)         
                printf "  UNSET http_proxy\n"
                printf "  UNSET HTTP_PROXY\n"
                export http_proxy=
                export HTTP_PROXY= ;;
            https)        
                printf "  UNSET https_proxy\n"
                printf "  UNSET HTTPS_PROXY\n"
                export https_proxy=
                export HTTPS_PROXY= ;;
            ftp)          
                printf "  UNSET ftp_proxy\n"
                printf "  UNSET FTP_PROXY\n"
                export ftp_proxy=
                export FTP_PROXY= ;;
            all)          
                printf "  UNSET all_proxy\n"
                printf "  UNSET ALL_PROXY\n"
                export all_proxy=
                export ALL_PROXY= ;;
            *)             
                break
        esac
        shift
    done
    
}

# EndSection
