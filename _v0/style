# shellcheck shell=sh
# shellcheck disable=SC2039,SC3044,SC2154,SC1087,SC2128,SC2144,SC2059,SC2296,SC2296,SC3054,SC2034

# Section: theme global variable setup
___X_CMD_THEME_NEWLINE="
"

if [ -n "$ZSH_VERSION" ]; then

___X_CMD_THEME_USER='%n'

# Path
___X_CMD_THEME_PATH='%1d'
___X_CMD_THEME_FULL_PATH='%~'

# Date
___X_CMD_THEME_DATE='%D';
___X_CMD_THEME_TIME_H_M_S='%*';
___X_CMD_THEME_TIME_H12_M_S='%D{%L:%M:%S}';
___X_CMD_THEME_TIME_H_M='%T';
___X_CMD_THEME_TIME_H12_M='%@';

# Host
___X_CMD_THEME_HOST='%m'
___X_CMD_THEME_FULL_HOST='%M'

else

___X_CMD_THEME_USER='\u'

# Path
___X_CMD_THEME_PATH='\W';
___X_CMD_THEME_FULL_PATH='\w';

# Date
___X_CMD_THEME_DATE='\d';
___X_CMD_THEME_TIME_H_M_S='\t';
___X_CMD_THEME_TIME_H12_M_S='\T';
___X_CMD_THEME_TIME_H_M='\A';
___X_CMD_THEME_TIME_H12_M='\@';

# Host
___X_CMD_THEME_HOST='\h';
___X_CMD_THEME_FULL_HOST='\H';

# Color
___X_CMD_COLOR_PRE='\['
___X_CMD_COLOR_SUF='\]'

fi
# EndSection

# Section: NO_COLOR flag
## Enable our easy to read Colour Flags as long as the NO_COLOR Env Variable is set.
## NOTE: the NO_COLOR env variable is from: https://no-color.org/
if [ -n "${NO_COLOR}" ]; then
    ___x_cmd_theme_style() {
        while [ $# -gt 0 ]; do
            case "$1" in
                bold|underline|black|red|green|yellow|blue|magenta|cyan|white|fg-*|bfg-*|hfg-*|dfg-*|rgbfg-*|bg-*|bbg-*|hbg-*|dbg-*|rgbbg-*|reset)
                    shift
                ;;
                *)
                    printf "%s" "$*";return
                ;;
            esac
        done
     }
    ___x_cmd_theme_set_theme_color() { :; }
    return 0
fi
# EndSection

###
    # @description: set up color
    # @param: $color | bg-$color | bfg $color | ibg $color | bold | underline | reset
    # @param: $color => black | red | green | yellow | blue | magenta | cyan | white
    # @example1: ___x_cmd_theme_style fg-red bold hello
###
# Section: ___x_cmd_theme_style
______x_cmd_theme_colorcode(){
    case "$1" in
        black)      printf 0           ;;
        red)        printf 1           ;;
        green)      printf 2           ;;
        yellow)     printf 3           ;;
        blue)       printf 4           ;;
        magenta)    printf 5           ;;
        cyan)       printf 6           ;;
        white)      printf 7           ;;
        rgb-*)      printf "${1#rgb-}" ;;
    esac
}

# zsh https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html#Visual-effects
# TODO: here
if [ -n "$ZSH_VERSION" ]; then
autoload -U colors && colors

______x_cmd_theme_setup_zsh_256color(){
    typeset -AHg FG BG
    # shellcheck disable=SC3009
    for _color in {000..255}; do
        # replace $'%{\033[38;5;31%}'
        FG[$_color]="%{[38;5;${_color}m%}"
        BG[$_color]="%{[48;5;${_color}m%}"
    done
    unset _color
}

______x_cmd_theme_setup_zsh_basecolor(){
    typeset -AHg fg_dim bg_dim fg_light bg_light
    for k in ${(k)color[(I)fg-*]}; do
        fg_dim[${k#fg-}]="%{[2;${color[$k]}m%}"
        fg_light[${k#fg-}]="%{[9${color[$k]#3}m%}"
    done
    for k in ${(k)color[(I)bg-*]}; do
        bg_dim[${k#bg-}]="%{[2;${color[$k]}m%}"
        bg_light[${k#bg-}]="%{[10${color[$k]#4}m%}"
    done
    unset k
}

______x_cmd_theme_setup_zsh_basecolor
if [ -z $FG[100] ];then
    ______x_cmd_theme_setup_zsh_256color
fi

___x_cmd_theme_style(){
    while [ $# -gt 0 ]; do
        case "$1" in
            bold)                                                   printf "%s" "%B"                                           ;;
            underline)                                              printf "%s" "%U"                                           ;;
            black|red|green|yellow|blue|magenta|cyan|white)         printf "%s" "%{$fg[$1]%}"                                  ;;
            fg-*)                                                   printf "%s" "%{$fg[${1#fg-}]%}"                            ;;
            bfg-*)                                                  printf "%s" "%{$fg_bold[${1#bfg-}]%}"                      ;;
            hfg-*)                                                  printf "%s" "%{$fg_light[${1#hfg-}]%}"                     ;;
            dfg-*)                                                  printf "%s" "%{$fg_dim[${1#dfg-}]%}"                       ;;
            rgbfg-*)                                                printf "%s" "%{$FG[${1#rgbfg-}]%}"                         ;;
            bg-*)                                                   printf "%s" "%{$bg[${1#bg-}]%}"                            ;;
            bbg-*)                                                  printf "%s" "%{$bg_bold[${1#bbg-}]%}"                      ;;
            hbg-*)                                                  printf "%s" "%{$bg_light[${1#hbg-}]%}"                     ;;
            dbg-*)                                                  printf "%s" "%{$bg_dim[${1#dbg-}]%}"                       ;;
            rgbbg-*)                                                printf "%s" "%{$BG[${1#rgbbg-}]%}"                         ;;
            reset)                                                  printf "%s" "%{$reset_color%}"                             ;;
            --)                                                     shift; printf "%s" "$*%{$reset_color%}%b%u"; return ;;
            *)                                                      printf "%s" "$*%{$reset_color%}%b%u"; return
        esac
        shift
    done
}

_______x_cmd_theme_set_hightlight_color() {
    local x_cmd_theme_ls_color
    # add seleted hightlight
    x_cmd_theme_ls_color="ma=7;$color_code:$x_cmd_theme_ls_color:"
    # add LS_COLORS hightlight
    x_cmd_theme_ls_color="di=1;$color_code:$x_cmd_theme_ls_color:$LS_COLORS:"
    # add advise complate hightlight
    x_cmd_theme_ls_color="=(#b) #([0-9]#*)(-- *)*=0=$color_code=1;31:$x_cmd_theme_ls_color:"

    # set zstyle
    zstyle ':completion:*:default' list-colors "${(s.:.)x_cmd_theme_ls_color}"
}

else

___x_cmd_theme_style(){
    while [ $# -gt 0 ]; do
        case "$1" in
            bold)                                                   printf "${___X_CMD_COLOR_PRE}\033[1m${___X_CMD_COLOR_SUF}"                                             ;;
            underline)                                              printf "${___X_CMD_COLOR_PRE}\033[4m${___X_CMD_COLOR_SUF}"                                             ;;
            black|red|green|yellow|blue|magenta|cyan|white)         printf "${___X_CMD_COLOR_PRE}\033[3$(______x_cmd_theme_colorcode "$1")m${___X_CMD_COLOR_SUF}"          ;;
            fg-*)                                                   printf "${___X_CMD_COLOR_PRE}\033[3$(______x_cmd_theme_colorcode "${1#fg-}")m${___X_CMD_COLOR_SUF}"    ;;
            bfg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[1;3$(______x_cmd_theme_colorcode "${1#bfg-}")m${___X_CMD_COLOR_SUF}" ;;
            hfg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[9$(______x_cmd_theme_colorcode "${1#hfg-}")m${___X_CMD_COLOR_SUF}"   ;;
            dfg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[2;3$(______x_cmd_theme_colorcode "${1#dfg-}")m${___X_CMD_COLOR_SUF}" ;;
            rgbfg-*)                                                printf "${___X_CMD_COLOR_PRE}\033[38;5;${1#rgbfg-}m${___X_CMD_COLOR_SUF}"                              ;;
            bg-*)                                                   printf "${___X_CMD_COLOR_PRE}\033[4$(______x_cmd_theme_colorcode "${1#bg-}")m${___X_CMD_COLOR_SUF}"    ;;
            bbg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[1;4$(______x_cmd_theme_colorcode "${1#bbg-}")m${___X_CMD_COLOR_SUF}" ;;
            hbg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[10$(______x_cmd_theme_colorcode "${1#hbg-}")m${___X_CMD_COLOR_SUF}"  ;;
            dbg-*)                                                  printf "${___X_CMD_COLOR_PRE}\033[2;4$(______x_cmd_theme_colorcode "${1#dbg-}")m${___X_CMD_COLOR_SUF}" ;;
            rgbbg-*)                                                printf "${___X_CMD_COLOR_PRE}\033[48;5;${1#rgbbg-}m${___X_CMD_COLOR_SUF}"                              ;;
            reset)                                                  printf "${___X_CMD_COLOR_PRE}\033[0m${___X_CMD_COLOR_SUF}"                                             ;;
            --)                                                     shift; printf "%s${___X_CMD_COLOR_PRE}\033[0m${___X_CMD_COLOR_SUF}" "$*"; return ;;
            *)                                                      printf "%s${___X_CMD_COLOR_PRE}\033[0m${___X_CMD_COLOR_SUF}" "$*"; return
        esac
        shift
    done
}

# TODO: bash hightlight
_______x_cmd_theme_set_hightlight_color() {
    :
}

fi

# EndSection

# Section: ___x_cmd_theme_set_theme_color
###
 # @description: set theme hightlight color
 # @param $1:color => black | red | green | yellow | blue | magenta | cyan | white | rgb-${number}
###
_______x_cmd_theme_set_log_color() { ___X_CMD_LOG_COLORIZED_MSG="\\033[$color_code"m; }

___x_cmd_theme_set_theme_color() {
    : "${1:?Please provide correct primary color}"
    local color_code
    color_code="$(______x_cmd_theme_colorcode "$1")"
    [ -z "$color_code" ] && printf "Error: $1" && return 1
    if [ "${1#rgb}" != "$1" ];then
        color_code="38;5;$color_code"
    else
        color_code="3$color_code"
    fi
    _______x_cmd_theme_set_hightlight_color
    _______x_cmd_theme_set_log_color
}
# EndSection