# shellcheck shell=sh disable=SC3043

# Section: initrc, consider external module.
___x_cmd_boot(){
    local subcmd="$1"
    case "$subcmd" in
        setup)
            mkdir -p "$HOME/.x-cmd/.boot"
            cat > "$HOME/.x-cmd/.boot/boot" <<A
# Do NOT modify manually for this file is auto generated by command: x boot setup

if command -v xrc >dev/null 2>&1; then
    return 0
elif [ -f "$HOME/.x-cmd/.tgz/core.tgz" ]; then
    ___X_CMD_CORE_TGZ="$___X_CMD_ROOT/.tgz/core.tgz"
    eval "$(tar Oxf "$___X_CMD_CORE_TGZ" xrc/latest)"
elif [ -f "$HOME/.x-cmd/xrc/latest" ]; then
    . "$HOME/.x-cmd/xrc/latest"
else
    printf "%s\n  %s" 'core.tgz or xrc/latest not found. You can reinstall using:' 'eval "$(curl https://get.x-cmd.com/exp)"'
    return 1
fi
[ -f "$___X_CMD_ROOT/.boot/mod" ] && x boot mod load
A
            (
                if [ "$BASH_VERSION" ]; then        CAN="$HOME/.bashrc"
                    [ "$(uname)" = "Darwin" ]  &&   CAN="$CAN $HOME/.bash_profile"
                elif [ "$ZSH_VERSION" ]; then       CAN="$HOME/.zshrc"
                elif [ "$KSH_VERSION" ]; then       CAN="$HOME/.kshrc"
                else                                CAN="$HOME/.shinit"
                fi

                X_STR="[ -f \"\$HOME/.x-cmd/.boot/boot\" ]. \"\$HOME/.x-cmd/.boot/boot\""
                IFS=" "
                for i in $CAN; do
                    if grep -F "$X_STR" "$i" >/dev/null; then
                        echo "[x-cmd]: Already installed in $i" >&2
                    else
                        echo "$X_STR" >> "$i"
                        echo "[x-cmd]: Successfully Installed in: $i" >&2
                    fi
                done
            )
            ;;
        mod)    shift
                case "$1" in
                    add|+)      shift
                                (
                                    s="$(cat "$___X_CMD_ROOT/mod")"
                                    for mod in "$@"; do
                                        if [ "$s" != "${s#|$mod|}" ]; then
                                            printf "%s\n" "$s"
                                        fi
                                    done >> "$X_CMD_SRC_PATH/.init.rc"
                                ) ;;
                    del|-)      shift
                                (
                                    s="$(cat "$___X_CMD_ROOT/mod")"
                                    d="$s"
                                    for mod in "$@"; do
                                        d="${d#*|$mod|
*}"
                                    done
                                    if [ "$d" != "$s" ]; then
                                        printf "%s" "$s" > "$___X_CMD_ROOT/mod"
                                    fi
                                )
                                ;;
                    ls|*)       cat "$___X_CMD_ROOT/mod" ;;
                    load)       eval xrc "$(tr '\n' ' ' <"$___X_CMD_ROOT/mod" | tr -d '|')"
                esac
                ;;
        # which)  printf "%s\n" "$X_CMD_SRC_PATH/.init.rc"    ;;
        # cat|*)  cat "$X_CMD_SRC_PATH/.init.rc" 2>/dev/null  ;;
    esac
}

