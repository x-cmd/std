# shellcheck shell=sh disable=SC3043

# Cannot works well because of this
# https://e.gitee.com/lteam18/issues/list?is%5Bsearch%5D=proxy&issue=I3YXC0



proxy_brew(){
    param <<A
subcommand:
    url        Provide url of mirror candidates
    set        Setting the mirror
    unset      Reset the source to the original official
A

    # if ! brew --version >/dev/null; then
    if ! command -v brew >/dev/null; then
        printf "Brew NOT exists."
        return 1
    elif [ -n "$PARAM_SUBCMD" ]; then
        "proxy_brew_${PARAM_SUBCMD}" "$@"
    else
        proxy_brew _param_help_doc  >&2
    fi

}

proxy_brew_url(){
    param <<A
subcommand:
    tuna|tsinghua|qh        "Qinghua"
    tencent                 "tencent"
    aliyun|ali              "Ali"
    ustc                    "UTSC"
    custom                  "cutsom"
A
    case "$PARAM_SUBCMD" in
        tuna|tsinghua|qh)       printf https://mirrors.tuna.tsinghua.edu.cn/git    ;;
        aliyun|ali)             printf https://mirrors.aliyun.com                  ;;
        ustc)                   printf https://mirrors.ustc.edu.cn                 ;;
        tencent)                printf https://mirrors.cloud.tencent.com/homebrew  ;;
        custom)                 printf "%s" "$1"                                   ;;
        *)                      proxy_brew_url _param_help_doc >&2                 ;;
    esac
}


_proxy_brew_url_custom(){
    param <<A
option:
    #1          "URL"      =~       https?://.+
A
    printf "%s" "${1:?Impossible}"
}


proxy_brew_set(){
    param <<A
subcommand:
    tuna|tsinghua|qh        "Qinghua"
    tencent                 "tencent"
    aliyun|ali              "Ali"
    ustc                    "UTSC"
    custom                  "cutsom"
A

    local url
    url="$(proxy_brew_url "${PARAM_SUBCMD:-tencent}")"
    printf "Setting proxy_brew mirror:\n    %s" "$url" >&2

    git -C "$(brew --repo)" remote set-url origin "$url/brew.git"

    git -C "$(brew --repo homebrew/core)" remote set-url origin "$url/homebrew-core.git"
    git -C "$(brew --repo homebrew/cask)" remote set-url origin "$url/homebrew-cask.git"

    local s
    s="export \"HOMEBREW_BOTTLE_DOMAIN=$url/homebrew-bottles\""
    eval "$s"

    local i
    for i in ~/.zshrc ~/.bash_profile ~/.kshrc; do
        local src
        if src="$(grep -v "export \"HOMEBREW_BOTTLE_DOMAIN=" "$i")"; then
            echo "$src"> "$i"
        fi
        if ! grep "$s" "$i"; then
            echo "$s" >> "$i"
        fi
    done

    printf "%s\n" "Now update"     >&2

    git -C "$(brew --repo homebrew/core)" fetch --unshallow 2>/dev/null
    git -C "$(brew --repo homebrew/cask)" fetch --unshallow 2>/dev/null
    brew update
}

proxy_brew_unset(){
    local url="${1:-https://github.com/Homebrew}"

    git -C "$(brew --repo)" remote set-url origin "$url/brew.git"
    git -C "$(brew --repo homebrew/core)" remote set-url origin "$url/homebrew-core.git"
    git -C "$(brew --repo homebrew/cask)" remote set-url origin "$url/homebrew-cask.git"

    unset HOMEBREW_BOTTLE_DOMAIN

    local i
    for i in ~/.zshrc ~/.bash_profile ~/.kshrc; do
        local src
        if src="$(grep -v "export \"HOMEBREW_BOTTLE_DOMAIN=" "$i")"; then
            echo "$src"> "$i"
        fi
    done

    brew update
}

# reference https://zhuanlan.zhihu.com/p/90508170

