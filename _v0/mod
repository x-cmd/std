# shellcheck shell=sh disable=SC3043,2120


___x_cmd_dev_mod_lsfile0()(
    IFS="
"

    cd "$(x wsroot)" || exit

    local i
    for i in \
        latest v* _v*/* _v*/**/* \
        third-party/* third-party/*/.* third-party/**/* third-party/**/*/* third-party/**/*/*/* \
        lib/* lib/**/*
    do
        [ "$i" != "${i#*_test*}" ] && continue
        # [ "$i" != "${i%.test}" ] && continue
        [ -f "$i" ] && printf "%s\n" "$i"
    done
)

___x_cmd_dev_mod_lsfile()(
    if [ -f "$(x wsroot)/.x-cmd/lsfile" ]; then
        # TODO: using engine to directly run the local file
        X_DISABLE_WORKSPACE_EXECUTION_CONFIRMATION=1 x ws lsfile
    else
        ___x_cmd_dev_mod_lsfile0
    fi
)

___x_cmd_dev_mod_cpfile_tmp(){
    local src="$2"
    local dst="$1/$src"
    mkdir -p "$(dirname "$dst")"
    printf "Moving:   %-30s\t%s\n" "$src" "$dst"
    cp "$src" "$dst"
}

___x_cmd_dev_mod_cpfile()(

    local current_folder
    current_folder="$(basename "$(x wsroot)")"
    current_folder="$HOME/.x-cmd/$current_folder"
    rm -rf "$current_folder"
    mkdir -p "$current_folder"

    if [ -f "$(x wsroot)/.x-cmd/cpfile" ]; then
        # TODO: using engine to directly run the local file
        X_DISABLE_WORKSPACE_EXECUTION_CONFIRMATION=1 x ws cpfile "$@"
    else
        ___x_cmd_dev_mod_lsfile | x arg1 ___x_cmd_dev_mod_cpfile_tmp "$current_folder"
    fi
)

___x_cmd_dev_mod_wc(){
    ___x_cmd_dev_mod_lsfile "$@" | xargs wc | sort -n -r | less
}


___x_cmd_dev_mod_devi(){
    local name
    name="$(___x_cmd_dev_mod_name)"
    name="ws-${name%/*}-${name#*/}"

    local id
    id="$(docker container ls -a -f name=ws-x-bash-dev --quiet)"

    if [ -z "$id" ]; then
        docker run -it --network host --name "$name" \
            -v "$HOME/.ssh:/root/.ssh" \
            -v "$(x wsroot):/$name}" \
            -v "$(x wsroot):/ws" \
            xcmd/alpine-dev bash
    else
        docker container start "$id"
        docker container exec -it "$id" bash
    fi
}

___x_cmd_dev_mod(){

    param:dsl <<A
subcommand:
    lsfile      "ls file to p"
    lsfile0     "ls file to p"
    cpfile      "cp file to home folder"
    wc          "wc"
    devi        "container"

    init        "init"

    pull        "pull"
    push        "push"
    name        "get workspace name from git config"
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        ___x_cmd_dev_mod help
        return 1
    fi

    case "$PARAM_SUBCMD" in
        pull|push|name)
            "___x_cmd_dev_ws_$PARAM_SUBCMD" "$@"
            return
            ;;
        init)
            "___x_cmd_dev_init" "$@"
            return
    esac

    "___x_cmd_dev_mod_$PARAM_SUBCMD" "$@"
}
